{"pageProps":{"posts":[{"slug":"2025-06-16-gpus-best-buy-queues","title":"GPUs and Best Buy Queues","date":"2025-06-16","excerptHTML":"<p>At the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"At the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},{"slug":"2025-06-15-mengoli-fractions","title":"Petri Mengoli Fraction Inequality","date":"2025-06-15","excerptHTML":"<p>In my previous post, <a href=\"/blog/post/2025-03-16-on-the-addition-of-fractions\">&quot;On the Addition of Fractions, by Petri Mengoli&quot;</a>, I\nwrote that the following inequality holds, with no proof</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"In my previous post, \", _jsx(_components.a, {\n      href: \"/blog/post/2025-03-16-on-the-addition-of-fractions\",\n      children: \"\\\"On the Addition of Fractions, by Petri Mengoli\\\"\"\n    }), \", I\\nwrote that the following inequality holds, with no proof\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},{"slug":"2025-04-21-agents-agents-agents","title":"Agents, Agents, Agents","date":"2025-04-21","excerptHTML":"<p>In 2008, Steve Ballmer once famously said “<a href=\"https://www.youtube.com/watch?v=Vhh_GeBPOhs\">Developers, developers, developers</a>” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"In 2008, Steve Ballmer once famously said “\", _jsx(_components.a, {\n      href: \"https://www.youtube.com/watch?v=Vhh_GeBPOhs\",\n      children: \"Developers, developers, developers\"\n    }), \"” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"}],"projects":[{"slug":"2023-09-10-wax-book","date":"2023-09-10","title":"Interactive Smart Contracts on WAX","frontmatter":{"title":"Interactive Smart Contracts on WAX","image":"/images/project-wax-book.png","description":"My e-book on WAX Smart Contract development that guides developers through the process of creating a non-fungible token (NFT) smart contract.\n","language_tags":["node","cpp"],"framework_tags":["wax","blockchain","nfts"],"view_link":"https://amzn.to/463p6TX"},"contentRaw":"\nDive into the dynamic world of the WAX blockchain with this comprehensive tutorial series. From creating unique non-fungible tokens (NFTs) using AtomicAssets and crafting simple \"Hello World\" contracts, to deploying intricate guestbook contracts both locally and on the testnet, these tutorials provide a step-by-step guide to harnessing the full potential of WAX. Whether you're a developer eager to explore decentralized applications or an enthusiast curious about digital assets, this series offers invaluable insights into the robust capabilities of the WAX platform.","contentHTML":"<p>Dive into the dynamic world of the WAX blockchain with this comprehensive tutorial series. From creating unique non-fungible tokens (NFTs) using AtomicAssets and crafting simple &quot;Hello World&quot; contracts, to deploying intricate guestbook contracts both locally and on the testnet, these tutorials provide a step-by-step guide to harnessing the full potential of WAX. Whether you&#x27;re a developer eager to explore decentralized applications or an enthusiast curious about digital assets, this series offers invaluable insights into the robust capabilities of the WAX platform.</p>","contentCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Dive into the dynamic world of the WAX blockchain with this comprehensive tutorial series. From creating unique non-fungible tokens (NFTs) using AtomicAssets and crafting simple \\\"Hello World\\\" contracts, to deploying intricate guestbook contracts both locally and on the testnet, these tutorials provide a step-by-step guide to harnessing the full potential of WAX. Whether you're a developer eager to explore decentralized applications or an enthusiast curious about digital assets, this series offers invaluable insights into the robust capabilities of the WAX platform.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nDive into the dynamic world of the WAX blockchain with this comprehensive tutorial series. From creating unique non-fungible tokens (NFTs) using AtomicAssets and crafting simple \"Hello World\" contracts, to deploying intricate guestbook contracts both locally and on the testnet, these tutorials provide a step-by-step guide to harnessing the full potential of WAX. Whether you're a developer eager to explore decentralized applications or an enthusiast curious about digital assets, this series offers invaluable insights into the robust capabilities of the WAX platform.","excerptHTML":"<p>Dive into the dynamic world of the WAX blockchain with this comprehensive tutorial series. From creating unique non-fungible tokens (NFTs) using AtomicAssets and crafting simple &quot;Hello World&quot; contracts, to deploying intricate guestbook contracts both locally and on the testnet, these tutorials provide a step-by-step guide to harnessing the full potential of WAX. Whether you&#x27;re a developer eager to explore decentralized applications or an enthusiast curious about digital assets, this series offers invaluable insights into the robust capabilities of the WAX platform.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Dive into the dynamic world of the WAX blockchain with this comprehensive tutorial series. From creating unique non-fungible tokens (NFTs) using AtomicAssets and crafting simple \\\"Hello World\\\" contracts, to deploying intricate guestbook contracts both locally and on the testnet, these tutorials provide a step-by-step guide to harnessing the full potential of WAX. Whether you're a developer eager to explore decentralized applications or an enthusiast curious about digital assets, this series offers invaluable insights into the robust capabilities of the WAX platform.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},{"slug":"2023-08-07-wax-cpp-tutorial","date":"2023-08-07","title":"WAX C++ NFT Tutorial","frontmatter":{"title":"WAX C++ NFT Tutorial","image":"/images/project-wax.jpg","description":"WAX smart contract development course that guides developers through the process of creating a non-fungible token (NFT) smart contract.\n","language_tags":["node","cpp"],"framework_tags":["wax","blockchain","nfts"],"view_link":"https://dev.to/idmontie/series/23860","github_link":"https://github.com/CapsuleCat/wax-nft-tutorial"},"contentRaw":"\nThis is a 22 part series on DevTo that goes through the entire process of creating\na WAX Smart Contract that interacts with AtomicAssets and the WAX RNG Oracle.\n\nIt is a great introduction to WAX smart contract development and the WAX ecosystem.\n","contentHTML":"<p>This is a 22 part series on DevTo that goes through the entire process of creating\na WAX Smart Contract that interacts with AtomicAssets and the WAX RNG Oracle.</p>\n<p>It is a great introduction to WAX smart contract development and the WAX ecosystem.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This is a 22 part series on DevTo that goes through the entire process of creating\\na WAX Smart Contract that interacts with AtomicAssets and the WAX RNG Oracle.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is a great introduction to WAX smart contract development and the WAX ecosystem.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nThis is a 22 part series on DevTo that goes through the entire process of creating","excerptHTML":"<p>This is a 22 part series on DevTo that goes through the entire process of creating</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"This is a 22 part series on DevTo that goes through the entire process of creating\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},{"slug":"2023-08-04-lacework","date":"2023-08-04","title":"Lacework","frontmatter":{"title":"Lacework","image":"/images/project-lacework.png","description":"Cloud security monitoring at scale.\n","language_tags":["node","javascript","typescript","java"],"github_link":"https://github.com/lacework"},"contentRaw":"\nWhile at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.\n","contentHTML":"<p>While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.</p>","contentCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nWhile at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.","excerptHTML":"<p>While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},{"slug":"2023-06-03-sora","date":"2023-06-03","title":"Sora","frontmatter":{"title":"Sora","image":"/images/project-sora.gif","description":"OpenAI integration for writing entire code files\n","language_tags":["typescript"],"framework_tags":["vscode","openai"],"view_link":"https://marketplace.visualstudio.com/items?itemName=CapsuleCat.sora-by-capsule-cat","github_link":"https://github.com/CapsuleCat/sora-by-capsule-cat"},"contentRaw":"\nSora was written to quickly send comments in code to OpenAI, and then write\nthe result back into the file. The best improvement here is being able to reference\ncode relative to the file you are working on.\n","contentHTML":"<p>Sora was written to quickly send comments in code to OpenAI, and then write\nthe result back into the file. The best improvement here is being able to reference\ncode relative to the file you are working on.</p>","contentCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Sora was written to quickly send comments in code to OpenAI, and then write\\nthe result back into the file. The best improvement here is being able to reference\\ncode relative to the file you are working on.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nSora was written to quickly send comments in code to OpenAI, and then write","excerptHTML":"<p>Sora was written to quickly send comments in code to OpenAI, and then write</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Sora was written to quickly send comments in code to OpenAI, and then write\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]}]},"__N_SSG":true}