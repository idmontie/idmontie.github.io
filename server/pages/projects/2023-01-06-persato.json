{"pageProps":{"headTitle":"Clarity Hub Persato - idmontie's Portfolio","project":{"slug":"2023-01-06-persato","date":"2023-01-06","title":"Clarity Hub Persato","frontmatter":{"title":"Clarity Hub Persato","image":"/images/project-persato.png","description":"Customer interview platform enhanced with AI\n","language_tags":["typescript","nodejs","react"],"framework_tags":["aws","serverless","dynamodb"],"github_link":"https://github.com/clarityhub/clarityhub-server-core"},"contentRaw":"\nPersato was a platform that allowed users to initiate video calls, record\nsessions, get automated transcripts, and more. This was all embedded within\na rich text editor that allowed users to take notes and collaborate with others.","contentHTML":"<p>Persato was a platform that allowed users to initiate video calls, record\nsessions, get automated transcripts, and more. This was all embedded within\na rich text editor that allowed users to take notes and collaborate with others.</p>","contentCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Persato was a platform that allowed users to initiate video calls, record\\nsessions, get automated transcripts, and more. This was all embedded within\\na rich text editor that allowed users to take notes and collaborate with others.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nPersato was a platform that allowed users to initiate video calls, record","excerptHTML":"<p>Persato was a platform that allowed users to initiate video calls, record</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Persato was a platform that allowed users to initiate video calls, record\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},"next":{"slug":"2022-11-01-dark-emblem","date":"2022-11-01","title":"Dark Emblem","frontmatter":{"title":"Dark Emblem","image":"/images/project-dark-emblem.png","description":"WAX Blockchain NFT Card Game\n","language_tags":["C++","node","typescript"],"github_link":"https://github.com/dark-emblem"},"contentRaw":"\nDark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\nto create an interactive Card Game on the blockchain. Users could purchase packs\nwith WAX, open those packs through the UI, and dynamically created images for\neach NFT would be created.\n","contentHTML":"<p>Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\nto create an interactive Card Game on the blockchain. Users could purchase packs\nwith WAX, open those packs through the UI, and dynamically created images for\neach NFT would be created.</p>","contentCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\\nto create an interactive Card Game on the blockchain. Users could purchase packs\\nwith WAX, open those packs through the UI, and dynamically created images for\\neach NFT would be created.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nDark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets","excerptHTML":"<p>Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},"previous":{"slug":"2023-06-03-sora","date":"2023-06-03","title":"Sora","frontmatter":{"title":"Sora","image":"/images/project-sora.gif","description":"OpenAI integration for writing entire code files\n","language_tags":["typescript"],"framework_tags":["vscode","openai"],"view_link":"https://marketplace.visualstudio.com/items?itemName=CapsuleCat.sora-by-capsule-cat","github_link":"https://github.com/CapsuleCat/sora-by-capsule-cat"},"contentRaw":"\nSora was written to quickly send comments in code to OpenAI, and then write\nthe result back into the file. The best improvement here is being able to reference\ncode relative to the file you are working on.\n","contentHTML":"<p>Sora was written to quickly send comments in code to OpenAI, and then write\nthe result back into the file. The best improvement here is being able to reference\ncode relative to the file you are working on.</p>","contentCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Sora was written to quickly send comments in code to OpenAI, and then write\\nthe result back into the file. The best improvement here is being able to reference\\ncode relative to the file you are working on.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nSora was written to quickly send comments in code to OpenAI, and then write","excerptHTML":"<p>Sora was written to quickly send comments in code to OpenAI, and then write</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Sora was written to quickly send comments in code to OpenAI, and then write\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]}},"__N_SSG":true}