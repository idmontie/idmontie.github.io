{"pageProps":{"headTitle":"Sora - idmontie's Portfolio","project":{"slug":"2023-06-03-sora","date":"2023-06-03","title":"Sora","frontmatter":{"title":"Sora","image":"/images/project-sora.gif","description":"OpenAI integration for writing entire code files\n","language_tags":["typescript"],"framework_tags":["vscode","openai"],"view_link":"https://marketplace.visualstudio.com/items?itemName=CapsuleCat.sora-by-capsule-cat","github_link":"https://github.com/CapsuleCat/sora-by-capsule-cat"},"contentRaw":"\nSora was written to quickly send comments in code to OpenAI, and then write\nthe result back into the file. The best improvement here is being able to reference\ncode relative to the file you are working on.\n","contentHTML":"<p>Sora was written to quickly send comments in code to OpenAI, and then write\nthe result back into the file. The best improvement here is being able to reference\ncode relative to the file you are working on.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Sora was written to quickly send comments in code to OpenAI, and then write\\nthe result back into the file. The best improvement here is being able to reference\\ncode relative to the file you are working on.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nSora was written to quickly send comments in code to OpenAI, and then write","excerptHTML":"<p>Sora was written to quickly send comments in code to OpenAI, and then write</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Sora was written to quickly send comments in code to OpenAI, and then write\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"next":{"slug":"2022-11-01-dark-emblem","date":"2022-11-01","title":"Dark Emblem","frontmatter":{"title":"Dark Emblem","image":"/images/project-dark-emblem.png","description":"WAX Blockchain NFT Card Game\n","language_tags":["C++","node","typescript"],"github_link":"https://github.com/dark-emblem"},"contentRaw":"\nDark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\nto create an interactive Card Game on the blockchain. Users could purchase packs\nwith WAX, open those packs through the UI, and dynamically created images for\neach NFT would be created.\n","contentHTML":"<p>Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\nto create an interactive Card Game on the blockchain. Users could purchase packs\nwith WAX, open those packs through the UI, and dynamically created images for\neach NFT would be created.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\\nto create an interactive Card Game on the blockchain. Users could purchase packs\\nwith WAX, open those packs through the UI, and dynamically created images for\\neach NFT would be created.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nDark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets","excerptHTML":"<p>Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Dark Emblem was a WAX Blockchain project that used Smart Contracts and AtomicAssets\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"previous":{"slug":"2023-08-04-lacework","date":"2023-08-04","title":"Lacework","frontmatter":{"title":"Lacework","image":"/images/project-lacework.png","description":"Cloud security monitoring at scale.\n","language_tags":["node","javascript","typescript","java"],"github_link":"https://github.com/lacework"},"contentRaw":"\nWhile at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.\n","contentHTML":"<p>While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nWhile at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.","excerptHTML":"<p>While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"While at Lacework, I worked on implementing entire new product lines for their cloud security offerings. This included architecting, implementing, and continuously delivering new features for Alerting, Identity Management, Resource Management, and Vulnerability Management on the web UI.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"}},"__N_SSG":true}