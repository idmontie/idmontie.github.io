{"pageProps":{"headTitle":"Debugging slow tsc - idmontie's Portfolio","headKeywords":"typescript","post":{"slug":"2023-07-24-tsc-debugging","date":"2023-07-24","title":"Debugging slow tsc","frontmatter":{"title":"Debugging slow tsc","tags":["typescript"]},"contentRaw":"\nI was working on a project and I noticed the `tsc` check that we ran on pre-commit hooks had become dramatically slower. I was seeing near instant times to type check the entire project go to agonizingly slow minutes to check the project. I was able to narrow the range of commits to some change we made within a month window. I’m sure I could have narrowed it down by continuing to git bisect and re-running `time npx tsc`, but it was much easier to just check out main and try out the following:\n\n```bash\n# remove any pre-built definitions to get a good baseline\nrm -r .tsBuildInfo\n\n# Get some baseline stats\ntime npx tsc\n```\n\nI was seeing values around (times have been modified for blogging purposes):\n\n```bash\nreal 1m30.000s\nuser 2m0.000s\nsys 0m3.000s\n```\n\nAfter running the baseline trace, I could analyze the `tsc` trace and use a nifty tool called `analyze-trace` that will report hotspots:\n\n```bash\nnpm i -g @typescript/analyze-trace\n\nnpx tsc --generateTrace ./.trace\nnpx analyze-trace ./.trace\n```\n\nThis command will spit out which files are hotspots in your codebase. To my surprise, I was seeing build outputs from webpack as a hotspot.\n\nTurns out the `tsconfig.json` had been slightly modified and accidentally included the build folder. Adding the build folder to the excludes entry sped up the tsc command by quite a bit:\n\n```bash\nreal 0m30.000s\nuser 0m47.000s\nsys 0m2.000s\n```\n\nNot only did the trace help me identify the major hotspot in the code, but also\nindicated some additional areas that I could improve upon going forward.\n","contentHTML":"<p>I was working on a project and I noticed the <code>tsc</code> check that we ran on pre-commit hooks had become dramatically slower. I was seeing near instant times to type check the entire project go to agonizingly slow minutes to check the project. I was able to narrow the range of commits to some change we made within a month window. I’m sure I could have narrowed it down by continuing to git bisect and re-running <code>time npx tsc</code>, but it was much easier to just check out main and try out the following:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-bash\"># remove any pre-built definitions to get a good baseline\nrm -r .tsBuildInfo\n\n# Get some baseline stats\ntime npx tsc\n</code></pre></div>\n<p>I was seeing values around (times have been modified for blogging purposes):</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-bash\">real 1m30.000s\nuser 2m0.000s\nsys 0m3.000s\n</code></pre></div>\n<p>After running the baseline trace, I could analyze the <code>tsc</code> trace and use a nifty tool called <code>analyze-trace</code> that will report hotspots:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-bash\">npm i -g @typescript/analyze-trace\n\nnpx tsc --generateTrace ./.trace\nnpx analyze-trace ./.trace\n</code></pre></div>\n<p>This command will spit out which files are hotspots in your codebase. To my surprise, I was seeing build outputs from webpack as a hotspot.</p>\n<p>Turns out the <code>tsconfig.json</code> had been slightly modified and accidentally included the build folder. Adding the build folder to the excludes entry sped up the tsc command by quite a bit:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-bash\">real 0m30.000s\nuser 0m47.000s\nsys 0m2.000s\n</code></pre></div>\n<p>Not only did the trace help me identify the major hotspot in the code, but also\nindicated some additional areas that I could improve upon going forward.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"I was working on a project and I noticed the \", _jsx(_components.code, {\n        children: \"tsc\"\n      }), \" check that we ran on pre-commit hooks had become dramatically slower. I was seeing near instant times to type check the entire project go to agonizingly slow minutes to check the project. I was able to narrow the range of commits to some change we made within a month window. I’m sure I could have narrowed it down by continuing to git bisect and re-running \", _jsx(_components.code, {\n        children: \"time npx tsc\"\n      }), \", but it was much easier to just check out main and try out the following:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# remove any pre-built definitions to get a good baseline\\nrm -r .tsBuildInfo\\n\\n# Get some baseline stats\\ntime npx tsc\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I was seeing values around (times have been modified for blogging purposes):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"real 1m30.000s\\nuser 2m0.000s\\nsys 0m3.000s\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After running the baseline trace, I could analyze the \", _jsx(_components.code, {\n        children: \"tsc\"\n      }), \" trace and use a nifty tool called \", _jsx(_components.code, {\n        children: \"analyze-trace\"\n      }), \" that will report hotspots:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm i -g @typescript/analyze-trace\\n\\nnpx tsc --generateTrace ./.trace\\nnpx analyze-trace ./.trace\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This command will spit out which files are hotspots in your codebase. To my surprise, I was seeing build outputs from webpack as a hotspot.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Turns out the \", _jsx(_components.code, {\n        children: \"tsconfig.json\"\n      }), \" had been slightly modified and accidentally included the build folder. Adding the build folder to the excludes entry sped up the tsc command by quite a bit:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"real 0m30.000s\\nuser 0m47.000s\\nsys 0m2.000s\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Not only did the trace help me identify the major hotspot in the code, but also\\nindicated some additional areas that I could improve upon going forward.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nI was working on a project and I noticed the `tsc` check that we ran on pre-commit hooks had become dramatically slower. I was seeing near instant times to type check the entire project go to agonizingly slow minutes to check the project. I was able to narrow the range of commits to some change we made within a month window. I’m sure I could have narrowed it down by continuing to git bisect and re-running `time npx tsc`, but it was much easier to just check out main and try out the following:","excerptHTML":"<p>I was working on a project and I noticed the <code>tsc</code> check that we ran on pre-commit hooks had become dramatically slower. I was seeing near instant times to type check the entire project go to agonizingly slow minutes to check the project. I was able to narrow the range of commits to some change we made within a month window. I’m sure I could have narrowed it down by continuing to git bisect and re-running <code>time npx tsc</code>, but it was much easier to just check out main and try out the following:</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"I was working on a project and I noticed the \", _jsx(_components.code, {\n      children: \"tsc\"\n    }), \" check that we ran on pre-commit hooks had become dramatically slower. I was seeing near instant times to type check the entire project go to agonizingly slow minutes to check the project. I was able to narrow the range of commits to some change we made within a month window. I’m sure I could have narrowed it down by continuing to git bisect and re-running \", _jsx(_components.code, {\n      children: \"time npx tsc\"\n    }), \", but it was much easier to just check out main and try out the following:\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["typescript"]},"previous":{"slug":"2023-07-26-component-library-checklist","date":"2023-07-26","title":"Component Library Checklist","frontmatter":{"title":"Component Library Checklist","tags":["component library","checklist"]},"contentRaw":"\nThe following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.\n\n## Visual Language\n\n- [ ]  Color\n  - [ ]  Palettes, by category\n  - [ ]  Dark mode\n- [ ]  Typography\n  - [ ]  Headings\n  - [ ]  Text\n  - [ ]  Paragraph\n  - [ ]  Lead paragraphs\n  - [ ]  Readable text\n- [ ]  Iconography\n  - [ ]  Icons\n  - [ ]  Meaning\n- [ ]  Space\n  - [ ]  Units / measurements\n\n## Text\n\n- [ ]  Block quote\n- [ ]  Unordered list\n- [ ]  Ordered list\n- [ ]  Internal link\n- [ ]  External link\n- [ ]  Code\n\n## Buttons\n\n- [ ]  Buttons\n  - [ ]  Primary\n  - [ ]  Secondary\n  - [ ]  Button groups\n  - [ ]  Menu buttons\n  - [ ]  Split buttons\n  - [ ]  Floating action button\n  - [ ]  Brand buttons (Google, FB, Discord)\n\n## Forms\n\n- [ ]  Form controls\n  - [ ]  Text input\n  - [ ]  Email/number/other variant inputs\n  - [ ]  Multi-line text area\n  - [ ]  Radio and radio group\n  - [ ]  Checkbox and checkbox group\n  - [ ]  Select\n  - [ ]  File upload\n  - [ ]  Label\n  - [ ]  Required label\n  - [ ]  Switch\n  - [ ]  Slider\n  - [ ]  Calendar picker\n  - [ ]  Rich text editor\n- [ ]  Form structure\n\n## Layout\n\n- [ ]  Divider\n- [ ]  Box\n- [ ]  Marketing grid\n- [ ]  App grid\n- [ ]  Page transitions\n- [ ]  Resopnsive breakpoints\n\n## Content\n\n- [ ]  Image\n- [ ]  Avatar\n- [ ]  Code block\n- [ ]  Footnotes\n- [ ]  Thumbnails\n- [ ]  Video\n- [ ]  Map widget\n\n## UI Components\n\n- [ ]  Alerts\n- [ ]  Accordion\n- [ ]  Back to top\n- [ ]  Badges/tags/chips/pills\n- [ ]  Breadcrumbs\n- [ ]  Caption\n- [ ]  Cards\n  - [ ]  Panel\n  - [ ]  Callout\n- [ ]  Chat\n- [ ]  Comments\n- [ ]  Tables\n  - [ ]  Data table\n  - [ ]  Property table\n- [ ]  Drawer\n- [ ]  Filters\n- [ ]  Footer\n- [ ]  Header\n- [ ]  Error (standard error handler)\n- [ ]  Loading / spinner / shimmer\n- [ ]  Toast\n- [ ]  Notification / badge (dot)\n- [ ]  Modal\n- [ ]  Pagination\n- [ ]  Popover\n- [ ]  Progress bar\n- [ ]  Search\n- [ ]  Sidebar\n- [ ]  Sort by\n- [ ]  Tabs\n- [ ]  Tooltips\n\n## Navigation\n\n- [ ]  Action bar / toolbar\n- [ ]  Main menu / Megamenu\n- [ ]  Inline menu\n\n## Marketing\n\n- [ ]  Contact us\n- [ ]  Cookie notification\n- [ ]  Hero billboard\n- [ ]  Hero carousel\n- [ ]  Legend\n- [ ]  Pull quote\n- [ ]  Ratings\n- [ ]  Reviews\n- [ ]  Social networking\n- [ ]  Status (alpha, beta)\n- [ ]  Tips / tutorial\n\n## UI Patterns\n\n- [ ]  Authentication\n- [ ]  Create account\n- [ ]  Permissions\n- [ ]  Purchase/checkout\n- [ ]  Settings\n- [ ]  Site / app structure\n","contentHTML":"<p>The following is a checklist I like to use to ensure I&#x27;m covering all the bases when building a component library. It&#x27;s a work in progress, but I hope it can be useful to others.</p>\n<h2>Visual Language</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Color<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Palettes, by category</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Dark mode</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Typography<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Headings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Text</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Paragraph</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Lead paragraphs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Readable text</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Iconography<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Icons</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Meaning</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Space<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Units / measurements</li>\n</ul>\n</li>\n</ul>\n<h2>Text</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Block quote</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Unordered list</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Ordered list</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Internal link</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> External link</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Code</li>\n</ul>\n<h2>Buttons</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Buttons<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Primary</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Secondary</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Button groups</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Menu buttons</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Split buttons</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Floating action button</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Brand buttons (Google, FB, Discord)</li>\n</ul>\n</li>\n</ul>\n<h2>Forms</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Form controls<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Text input</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Email/number/other variant inputs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Multi-line text area</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Radio and radio group</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Checkbox and checkbox group</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Select</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> File upload</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Label</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Required label</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Switch</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Slider</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Calendar picker</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Rich text editor</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Form structure</li>\n</ul>\n<h2>Layout</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Divider</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Box</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Marketing grid</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> App grid</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Page transitions</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Resopnsive breakpoints</li>\n</ul>\n<h2>Content</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Image</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Avatar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Code block</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Footnotes</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Thumbnails</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Video</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Map widget</li>\n</ul>\n<h2>UI Components</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Alerts</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Accordion</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Back to top</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Badges/tags/chips/pills</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Breadcrumbs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Caption</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Cards<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Panel</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Callout</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Chat</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Comments</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tables<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Data table</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Property table</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Drawer</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Filters</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Footer</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Header</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Error (standard error handler)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Loading / spinner / shimmer</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Toast</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Notification / badge (dot)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Modal</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Pagination</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Popover</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Progress bar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Search</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Sidebar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Sort by</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tabs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tooltips</li>\n</ul>\n<h2>Navigation</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Action bar / toolbar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Main menu / Megamenu</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Inline menu</li>\n</ul>\n<h2>Marketing</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Contact us</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Cookie notification</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Hero billboard</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Hero carousel</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Legend</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Pull quote</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Ratings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Reviews</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Social networking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Status (alpha, beta)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tips / tutorial</li>\n</ul>\n<h2>UI Patterns</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Authentication</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Create account</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Permissions</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Purchase/checkout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Settings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Site / app structure</li>\n</ul>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h2: \"h2\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"The following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visual Language\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Color\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Palettes, by category\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Dark mode\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Typography\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Headings\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Text\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Paragraph\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Lead paragraphs\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Readable text\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Iconography\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Icons\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Meaning\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Space\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Units / measurements\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Text\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Block quote\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Unordered list\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Ordered list\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Internal link\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" External link\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Code\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Buttons\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Primary\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Secondary\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Button groups\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Menu buttons\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Split buttons\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Floating action button\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Brand buttons (Google, FB, Discord)\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Forms\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Form controls\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Text input\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Email/number/other variant inputs\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Multi-line text area\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Radio and radio group\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Checkbox and checkbox group\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Select\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" File upload\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Label\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Required label\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Switch\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Slider\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Calendar picker\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Rich text editor\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Form structure\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Layout\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Divider\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Box\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Marketing grid\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" App grid\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Page transitions\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Resopnsive breakpoints\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Content\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Image\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Avatar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Code block\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Footnotes\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Thumbnails\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Video\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Map widget\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"UI Components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Alerts\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Accordion\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Back to top\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Badges/tags/chips/pills\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Breadcrumbs\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Caption\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Cards\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Panel\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Callout\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Chat\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Comments\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tables\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Data table\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Property table\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Drawer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Footer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Header\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Error (standard error handler)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Loading / spinner / shimmer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Toast\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Notification / badge (dot)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Modal\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Pagination\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Popover\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Progress bar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Search\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Sidebar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Sort by\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tabs\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tooltips\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Navigation\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Action bar / toolbar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Main menu / Megamenu\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Inline menu\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Marketing\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Contact us\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Cookie notification\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Hero billboard\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Hero carousel\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Legend\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Pull quote\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Ratings\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Reviews\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Social networking\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Status (alpha, beta)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tips / tutorial\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"UI Patterns\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Authentication\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Create account\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Permissions\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Purchase/checkout\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Settings\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Site / app structure\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nThe following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.","excerptHTML":"<p>The following is a checklist I like to use to ensure I&#x27;m covering all the bases when building a component library. It&#x27;s a work in progress, but I hope it can be useful to others.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"The following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["component library","checklist"]},"next":{"slug":"2023-07-23-chatgpt-coding-loop","date":"2023-07-23","title":"ChatGPT, Coding, and Language","frontmatter":{"title":"ChatGPT, Coding, and Language","tags":["chatgpt"]},"contentRaw":"\nI’ve been experimenting with ChatGPT, just like everyone else. But why has it become so popular? It truly is a revolutionary piece of technology. Is it The Next Big Thing? Will it really replace all of us?\n\nMy day to day is architecture and programming, and I’ve heard all sorts of things on Twitter:\n\n- That ChatGPT can build entire iOS applications\n- ChatGPT can write whole files of code\n- ChatGPT can find bugs in code when writing tests\n\nWhen I started by own company Clarity Hub, we had a focus on machine learning to help augment human intelligence. My thought at the time was that we could leverage machine learning to augment and supplement human intelligence. The focus wouldn't be to replace any person's job, but to make it streamlined and easier to accomplish that job. Our journey started with us serving customer success agents with suggested replies and contextual information, but we eventually pivoted to a Dovetail-like application to help product teams gather, annotate, and contextualize customer interviews.\n\nWe found that augmenting activity with machine learning was not only easier to do from a technology point of view, but empowered users, rather than make them feel like their job was being replaced.\n\nEven with the advent of ChatGPT, I still see this being the short term future of it's use.\n\n## False Starts\n\nI was curious how much ChatGPT could really do given all of its hype  \n\nI asked it to build an Asteroids game using PhaserJS. Don’t worry, this isn’t another article on “Look, I got ChatGPT to build a game!”\n\nI originally just asked ChatGPT to build an Asteroids game using PhaserJS. A very vague prompt, yes, but a great starting point to figure out the limitations of ChatGPT.\n\nThe response was basically, “No I can’t”:\n\n> As an AI language model, I'm not able to write and execute code in real-time. However, I can provide you with a detailed framework to get started with creating an Asteroids game in PhaserJS.\n\nThis was followed by instructions on how I could do it myself.\n\nThe next steps of course are to be more specific, asking ChatGPT to build the application to build specific functionality:\n\n> Add the code to let the player shoot asteroids. If the player gets hit by 3 asteroids, its game over\n\nMost interactions with ChatGPT seem to go like this:\n\n![Flowchart workflow](/media/2023-07-23-chatgpt-coding-loop/Flowchart_Template_1.jpg)\n\nThis flow eventually leads to either:\n\n- Not getting what you want.\n- Getting what you want across many different responses, and then you must manually coalesce all of the different responses together to form the result you want.\n\nOnce I like the set of responses that ChatGPT has given me, I’ll ask ChatGPT to summarize for me so that I can improve the prompt further:\n\n> Take everything we just talked about and give me a prompt to ask you in the future that encapsulates all of the requirements.\n\n## A More Natural Flow\n\nI’ve talked with ChatGPT on a variety of topics, but the majority of questions relate to coding. I actively use Github Copilot, which utilizes the ChatGPT engine in the backend. I’ve built [Sora by Capsule Cat](https://marketplace.visualstudio.com/items?itemName=CapsuleCat.sora-by-capsule-cat) to have ChatGPT generate entire coding files for me as well with project context. Even then, I still use the ChatGPT UI as well.\n\n![Flowchart line](/media/2023-07-23-chatgpt-coding-loop/Flowchart_Template_2.jpg)\n\nI find that the above flow leaves me less fatigued, and more productive - at least in the context of side-projects that I’ve used ChatGPT. Research shows that when we read code and attempt logic puzzles, we use a completely different part of our brain than when we use language [[link](https://hub.jhu.edu/2020/12/17/brain-activity-while-reading-code/)]. In the above chart, you can imagine that when we write prompts, we utilize some logical reasoning, but we lean heavily on language as we talk with ChatGPT. Then when we get a response, a completely different part of the brain kicks in to read and write code.\n\n## The Hard Part About Coding\n\nEventually this leads to “the hard part about coding” which anecdotally everyone will tell you that surprise, it isn’t the coding part. What is nice about ChatGPT though is that even though the hard part isn’t writing code, it does take time, thought, and energy.\n\nIf the hard part of coding isn’t coding, then what is it? The non-exhaustive list is that it’s teamwork, communication, debugging, and requirements gathering. Oversimplifying, it’s the writing prompts part of the chart.\n","contentHTML":"<p>I’ve been experimenting with ChatGPT, just like everyone else. But why has it become so popular? It truly is a revolutionary piece of technology. Is it The Next Big Thing? Will it really replace all of us?</p>\n<p>My day to day is architecture and programming, and I’ve heard all sorts of things on Twitter:</p>\n<ul>\n<li>That ChatGPT can build entire iOS applications</li>\n<li>ChatGPT can write whole files of code</li>\n<li>ChatGPT can find bugs in code when writing tests</li>\n</ul>\n<p>When I started by own company Clarity Hub, we had a focus on machine learning to help augment human intelligence. My thought at the time was that we could leverage machine learning to augment and supplement human intelligence. The focus wouldn&#x27;t be to replace any person&#x27;s job, but to make it streamlined and easier to accomplish that job. Our journey started with us serving customer success agents with suggested replies and contextual information, but we eventually pivoted to a Dovetail-like application to help product teams gather, annotate, and contextualize customer interviews.</p>\n<p>We found that augmenting activity with machine learning was not only easier to do from a technology point of view, but empowered users, rather than make them feel like their job was being replaced.</p>\n<p>Even with the advent of ChatGPT, I still see this being the short term future of it&#x27;s use.</p>\n<h2>False Starts</h2>\n<p>I was curious how much ChatGPT could really do given all of its hype</p>\n<p>I asked it to build an Asteroids game using PhaserJS. Don’t worry, this isn’t another article on “Look, I got ChatGPT to build a game!”</p>\n<p>I originally just asked ChatGPT to build an Asteroids game using PhaserJS. A very vague prompt, yes, but a great starting point to figure out the limitations of ChatGPT.</p>\n<p>The response was basically, “No I can’t”:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>As an AI language model, I&#x27;m not able to write and execute code in real-time. However, I can provide you with a detailed framework to get started with creating an Asteroids game in PhaserJS.</p>\n</blockquote>\n<p>This was followed by instructions on how I could do it myself.</p>\n<p>The next steps of course are to be more specific, asking ChatGPT to build the application to build specific functionality:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>Add the code to let the player shoot asteroids. If the player gets hit by 3 asteroids, its game over</p>\n</blockquote>\n<p>Most interactions with ChatGPT seem to go like this:</p>\n<p><img alt=\"Flowchart workflow\" src=\"/media/2023-07-23-chatgpt-coding-loop/Flowchart_Template_1.jpg\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>This flow eventually leads to either:</p>\n<ul>\n<li>Not getting what you want.</li>\n<li>Getting what you want across many different responses, and then you must manually coalesce all of the different responses together to form the result you want.</li>\n</ul>\n<p>Once I like the set of responses that ChatGPT has given me, I’ll ask ChatGPT to summarize for me so that I can improve the prompt further:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>Take everything we just talked about and give me a prompt to ask you in the future that encapsulates all of the requirements.</p>\n</blockquote>\n<h2>A More Natural Flow</h2>\n<p>I’ve talked with ChatGPT on a variety of topics, but the majority of questions relate to coding. I actively use Github Copilot, which utilizes the ChatGPT engine in the backend. I’ve built <a href=\"https://marketplace.visualstudio.com/items?itemName=CapsuleCat.sora-by-capsule-cat\">Sora by Capsule Cat</a> to have ChatGPT generate entire coding files for me as well with project context. Even then, I still use the ChatGPT UI as well.</p>\n<p><img alt=\"Flowchart line\" src=\"/media/2023-07-23-chatgpt-coding-loop/Flowchart_Template_2.jpg\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>I find that the above flow leaves me less fatigued, and more productive - at least in the context of side-projects that I’ve used ChatGPT. Research shows that when we read code and attempt logic puzzles, we use a completely different part of our brain than when we use language [<a href=\"https://hub.jhu.edu/2020/12/17/brain-activity-while-reading-code/\">link</a>]. In the above chart, you can imagine that when we write prompts, we utilize some logical reasoning, but we lean heavily on language as we talk with ChatGPT. Then when we get a response, a completely different part of the brain kicks in to read and write code.</p>\n<h2>The Hard Part About Coding</h2>\n<p>Eventually this leads to “the hard part about coding” which anecdotally everyone will tell you that surprise, it isn’t the coding part. What is nice about ChatGPT though is that even though the hard part isn’t writing code, it does take time, thought, and energy.</p>\n<p>If the hard part of coding isn’t coding, then what is it? The non-exhaustive list is that it’s teamwork, communication, debugging, and requirements gathering. Oversimplifying, it’s the writing prompts part of the chart.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"I’ve been experimenting with ChatGPT, just like everyone else. But why has it become so popular? It truly is a revolutionary piece of technology. Is it The Next Big Thing? Will it really replace all of us?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"My day to day is architecture and programming, and I’ve heard all sorts of things on Twitter:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"That ChatGPT can build entire iOS applications\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ChatGPT can write whole files of code\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ChatGPT can find bugs in code when writing tests\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When I started by own company Clarity Hub, we had a focus on machine learning to help augment human intelligence. My thought at the time was that we could leverage machine learning to augment and supplement human intelligence. The focus wouldn't be to replace any person's job, but to make it streamlined and easier to accomplish that job. Our journey started with us serving customer success agents with suggested replies and contextual information, but we eventually pivoted to a Dovetail-like application to help product teams gather, annotate, and contextualize customer interviews.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We found that augmenting activity with machine learning was not only easier to do from a technology point of view, but empowered users, rather than make them feel like their job was being replaced.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Even with the advent of ChatGPT, I still see this being the short term future of it's use.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"False Starts\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I was curious how much ChatGPT could really do given all of its hype\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I asked it to build an Asteroids game using PhaserJS. Don’t worry, this isn’t another article on “Look, I got ChatGPT to build a game!”\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I originally just asked ChatGPT to build an Asteroids game using PhaserJS. A very vague prompt, yes, but a great starting point to figure out the limitations of ChatGPT.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The response was basically, “No I can’t”:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"As an AI language model, I'm not able to write and execute code in real-time. However, I can provide you with a detailed framework to get started with creating an Asteroids game in PhaserJS.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This was followed by instructions on how I could do it myself.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The next steps of course are to be more specific, asking ChatGPT to build the application to build specific functionality:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Add the code to let the player shoot asteroids. If the player gets hit by 3 asteroids, its game over\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Most interactions with ChatGPT seem to go like this:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2023-07-23-chatgpt-coding-loop/Flowchart_Template_1.jpg\",\n        alt: \"Flowchart workflow\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This flow eventually leads to either:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Not getting what you want.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Getting what you want across many different responses, and then you must manually coalesce all of the different responses together to form the result you want.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once I like the set of responses that ChatGPT has given me, I’ll ask ChatGPT to summarize for me so that I can improve the prompt further:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Take everything we just talked about and give me a prompt to ask you in the future that encapsulates all of the requirements.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"A More Natural Flow\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I’ve talked with ChatGPT on a variety of topics, but the majority of questions relate to coding. I actively use Github Copilot, which utilizes the ChatGPT engine in the backend. I’ve built \", _jsx(_components.a, {\n        href: \"https://marketplace.visualstudio.com/items?itemName=CapsuleCat.sora-by-capsule-cat\",\n        children: \"Sora by Capsule Cat\"\n      }), \" to have ChatGPT generate entire coding files for me as well with project context. Even then, I still use the ChatGPT UI as well.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2023-07-23-chatgpt-coding-loop/Flowchart_Template_2.jpg\",\n        alt: \"Flowchart line\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I find that the above flow leaves me less fatigued, and more productive - at least in the context of side-projects that I’ve used ChatGPT. Research shows that when we read code and attempt logic puzzles, we use a completely different part of our brain than when we use language [\", _jsx(_components.a, {\n        href: \"https://hub.jhu.edu/2020/12/17/brain-activity-while-reading-code/\",\n        children: \"link\"\n      }), \"]. In the above chart, you can imagine that when we write prompts, we utilize some logical reasoning, but we lean heavily on language as we talk with ChatGPT. Then when we get a response, a completely different part of the brain kicks in to read and write code.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Hard Part About Coding\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eventually this leads to “the hard part about coding” which anecdotally everyone will tell you that surprise, it isn’t the coding part. What is nice about ChatGPT though is that even though the hard part isn’t writing code, it does take time, thought, and energy.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If the hard part of coding isn’t coding, then what is it? The non-exhaustive list is that it’s teamwork, communication, debugging, and requirements gathering. Oversimplifying, it’s the writing prompts part of the chart.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nI’ve been experimenting with ChatGPT, just like everyone else. But why has it become so popular? It truly is a revolutionary piece of technology. Is it The Next Big Thing? Will it really replace all of us?","excerptHTML":"<p>I’ve been experimenting with ChatGPT, just like everyone else. But why has it become so popular? It truly is a revolutionary piece of technology. Is it The Next Big Thing? Will it really replace all of us?</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"I’ve been experimenting with ChatGPT, just like everyone else. But why has it become so popular? It truly is a revolutionary piece of technology. Is it The Next Big Thing? Will it really replace all of us?\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["chatgpt"]}},"__N_SSG":true}