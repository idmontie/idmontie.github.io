{"pageProps":{"headTitle":"checklist posts - idmontie's Portfolio","headKeywords":"checklist","tag":"checklist","posts":[{"slug":"2023-07-26-component-library-checklist","date":"2023-07-26","title":"Component Library Checklist","frontmatter":{"title":"Component Library Checklist","tags":["component library","checklist"]},"contentRaw":"\nThe following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.\n\n## Visual Language\n\n- [ ]  Color\n  - [ ]  Palettes, by category\n  - [ ]  Dark mode\n- [ ]  Typography\n  - [ ]  Headings\n  - [ ]  Text\n  - [ ]  Paragraph\n  - [ ]  Lead paragraphs\n  - [ ]  Readable text\n- [ ]  Iconography\n  - [ ]  Icons\n  - [ ]  Meaning\n- [ ]  Space\n  - [ ]  Units / measurements\n\n## Text\n\n- [ ]  Block quote\n- [ ]  Unordered list\n- [ ]  Ordered list\n- [ ]  Internal link\n- [ ]  External link\n- [ ]  Code\n\n## Buttons\n\n- [ ]  Buttons\n  - [ ]  Primary\n  - [ ]  Secondary\n  - [ ]  Button groups\n  - [ ]  Menu buttons\n  - [ ]  Split buttons\n  - [ ]  Floating action button\n  - [ ]  Brand buttons (Google, FB, Discord)\n\n## Forms\n\n- [ ]  Form controls\n  - [ ]  Text input\n  - [ ]  Email/number/other variant inputs\n  - [ ]  Multi-line text area\n  - [ ]  Radio and radio group\n  - [ ]  Checkbox and checkbox group\n  - [ ]  Select\n  - [ ]  File upload\n  - [ ]  Label\n  - [ ]  Required label\n  - [ ]  Switch\n  - [ ]  Slider\n  - [ ]  Calendar picker\n  - [ ]  Rich text editor\n- [ ]  Form structure\n\n## Layout\n\n- [ ]  Divider\n- [ ]  Box\n- [ ]  Marketing grid\n- [ ]  App grid\n- [ ]  Page transitions\n- [ ]  Resopnsive breakpoints\n\n## Content\n\n- [ ]  Image\n- [ ]  Avatar\n- [ ]  Code block\n- [ ]  Footnotes\n- [ ]  Thumbnails\n- [ ]  Video\n- [ ]  Map widget\n\n## UI Components\n\n- [ ]  Alerts\n- [ ]  Accordion\n- [ ]  Back to top\n- [ ]  Badges/tags/chips/pills\n- [ ]  Breadcrumbs\n- [ ]  Caption\n- [ ]  Cards\n  - [ ]  Panel\n  - [ ]  Callout\n- [ ]  Chat\n- [ ]  Comments\n- [ ]  Tables\n  - [ ]  Data table\n  - [ ]  Property table\n- [ ]  Drawer\n- [ ]  Filters\n- [ ]  Footer\n- [ ]  Header\n- [ ]  Error (standard error handler)\n- [ ]  Loading / spinner / shimmer\n- [ ]  Toast\n- [ ]  Notification / badge (dot)\n- [ ]  Modal\n- [ ]  Pagination\n- [ ]  Popover\n- [ ]  Progress bar\n- [ ]  Search\n- [ ]  Sidebar\n- [ ]  Sort by\n- [ ]  Tabs\n- [ ]  Tooltips\n\n## Navigation\n\n- [ ]  Action bar / toolbar\n- [ ]  Main menu / Megamenu\n- [ ]  Inline menu\n\n## Marketing\n\n- [ ]  Contact us\n- [ ]  Cookie notification\n- [ ]  Hero billboard\n- [ ]  Hero carousel\n- [ ]  Legend\n- [ ]  Pull quote\n- [ ]  Ratings\n- [ ]  Reviews\n- [ ]  Social networking\n- [ ]  Status (alpha, beta)\n- [ ]  Tips / tutorial\n\n## UI Patterns\n\n- [ ]  Authentication\n- [ ]  Create account\n- [ ]  Permissions\n- [ ]  Purchase/checkout\n- [ ]  Settings\n- [ ]  Site / app structure\n","contentHTML":"<p>The following is a checklist I like to use to ensure I&#x27;m covering all the bases when building a component library. It&#x27;s a work in progress, but I hope it can be useful to others.</p>\n<h2>Visual Language</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Color<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Palettes, by category</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Dark mode</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Typography<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Headings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Text</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Paragraph</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Lead paragraphs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Readable text</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Iconography<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Icons</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Meaning</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Space<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Units / measurements</li>\n</ul>\n</li>\n</ul>\n<h2>Text</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Block quote</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Unordered list</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Ordered list</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Internal link</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> External link</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Code</li>\n</ul>\n<h2>Buttons</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Buttons<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Primary</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Secondary</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Button groups</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Menu buttons</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Split buttons</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Floating action button</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Brand buttons (Google, FB, Discord)</li>\n</ul>\n</li>\n</ul>\n<h2>Forms</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Form controls<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Text input</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Email/number/other variant inputs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Multi-line text area</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Radio and radio group</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Checkbox and checkbox group</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Select</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> File upload</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Label</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Required label</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Switch</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Slider</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Calendar picker</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Rich text editor</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Form structure</li>\n</ul>\n<h2>Layout</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Divider</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Box</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Marketing grid</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> App grid</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Page transitions</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Resopnsive breakpoints</li>\n</ul>\n<h2>Content</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Image</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Avatar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Code block</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Footnotes</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Thumbnails</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Video</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Map widget</li>\n</ul>\n<h2>UI Components</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Alerts</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Accordion</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Back to top</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Badges/tags/chips/pills</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Breadcrumbs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Caption</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Cards<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Panel</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Callout</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Chat</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Comments</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tables<!-- -->\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Data table</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Property table</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Drawer</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Filters</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Footer</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Header</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Error (standard error handler)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Loading / spinner / shimmer</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Toast</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Notification / badge (dot)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Modal</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Pagination</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Popover</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Progress bar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Search</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Sidebar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Sort by</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tabs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tooltips</li>\n</ul>\n<h2>Navigation</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Action bar / toolbar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Main menu / Megamenu</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Inline menu</li>\n</ul>\n<h2>Marketing</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Contact us</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Cookie notification</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Hero billboard</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Hero carousel</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Legend</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Pull quote</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Ratings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Reviews</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Social networking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Status (alpha, beta)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Tips / tutorial</li>\n</ul>\n<h2>UI Patterns</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Authentication</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Create account</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Permissions</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Purchase/checkout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Settings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- --> Site / app structure</li>\n</ul>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    input: \"input\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"The following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visual Language\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Color\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Palettes, by category\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Dark mode\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Typography\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Headings\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Text\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Paragraph\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Lead paragraphs\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Readable text\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Iconography\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Icons\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Meaning\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Space\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Units / measurements\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Text\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Block quote\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Unordered list\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Ordered list\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Internal link\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" External link\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Code\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Buttons\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Primary\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Secondary\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Button groups\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Menu buttons\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Split buttons\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Floating action button\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Brand buttons (Google, FB, Discord)\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Forms\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Form controls\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Text input\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Email/number/other variant inputs\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Multi-line text area\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Radio and radio group\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Checkbox and checkbox group\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Select\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" File upload\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Label\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Required label\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Switch\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Slider\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Calendar picker\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Rich text editor\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Form structure\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Layout\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Divider\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Box\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Marketing grid\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" App grid\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Page transitions\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Resopnsive breakpoints\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Content\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Image\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Avatar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Code block\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Footnotes\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Thumbnails\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Video\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Map widget\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"UI Components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Alerts\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Accordion\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Back to top\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Badges/tags/chips/pills\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Breadcrumbs\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Caption\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Cards\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Panel\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Callout\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Chat\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Comments\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tables\", \"\\n\", _jsxs(_components.ul, {\n          className: \"contains-task-list\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Data table\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            className: \"task-list-item\",\n            children: [_jsx(_components.input, {\n              type: \"checkbox\",\n              disabled: true\n            }), \" \", \" Property table\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Drawer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Filters\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Footer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Header\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Error (standard error handler)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Loading / spinner / shimmer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Toast\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Notification / badge (dot)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Modal\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Pagination\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Popover\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Progress bar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Search\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Sidebar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Sort by\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tabs\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tooltips\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Navigation\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Action bar / toolbar\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Main menu / Megamenu\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Inline menu\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Marketing\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Contact us\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Cookie notification\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Hero billboard\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Hero carousel\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Legend\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Pull quote\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Ratings\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Reviews\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Social networking\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Status (alpha, beta)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Tips / tutorial\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"UI Patterns\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Authentication\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Create account\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Permissions\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Purchase/checkout\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Settings\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \" Site / app structure\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nThe following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.","excerptHTML":"<p>The following is a checklist I like to use to ensure I&#x27;m covering all the bases when building a component library. It&#x27;s a work in progress, but I hope it can be useful to others.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"The following is a checklist I like to use to ensure I'm covering all the bases when building a component library. It's a work in progress, but I hope it can be useful to others.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["component library","checklist"]},{"slug":"2023-01-15-hierarchy-of-webapp-needs","date":"2023-01-15","title":"The Hierarchy of Webapp Needs","frontmatter":{"title":"The Hierarchy of Webapp Needs","tags":["webapp","checklist"]},"contentRaw":"\nI was thinking about all the little projects I work on and how they grow over time. The applications end up hitting some milestones and end up needing similar functionality that compliments the core features. A small project ends up getting complex enough that it requires some unit tests. I’ll go to deploy the project and now I need some deployment scripts and analytics to ensure the application is running correctly. The technology may change between each project, but web applications always seem to have the same steps that need to be taken to strengthen the application as it is scaled up.\n\nAt a large company, adding a new set of functionality always has a suite of concerns to think through before implementation: how will we deploy this feature, how do we validate that users are using the feature like we expected them to, how do we monitor for bugs and errors? This is on top of the basic functionality of actually writing and testing that new feature.\n\nWhat if we thought about this like Maslow’s Hierarchy of Needs, but in the context of a web application.\n\nMaslow's Hierarchy of Needs is a psychological model of human motivation proposed by Abraham Maslow in 1943. The model describes a hierarchy of human needs, beginning with basic physiological needs such as food and shelter and progressing upwards to higher-level needs such as self-actualization. Maslow argued that as humans satisfy their basic needs, they can move on to satisfy their higher-level needs.\n\nApplying Maslow's Hierarchy of Needs to web applications, we can identify the different levels of needs that need to be met in order to make a web application successful.\n\nBasic functionality:\n\n- A single build/run script\n- Basic functionality (e.g. CRUD operations for a web app)\n- User interface (e.g. layout, navigation, responsive design)\n- Integration with external services (e.g. databases, APIs)\n\nSafety and security:\n\n- Linting (e.g. ESLint, Prettier)\n- Unit tests (e.g. Jest, Mocha)\n- Basic error handling and reporting (e.g. logging, alerting)\n- Input validation (e.g. form validation)\n- Security best practices (e.g. encryption, password hashing, session management)\n\nLove and belonging:\n\n- Basic analytics (e.g. page views, user engagement)\n- User authentication and authorization (e.g. sign-up, login, role-based access control)\n- User feedback (e.g. contact form, survey)\n- Social media integration (e.g. sharing, commenting)\n\nEsteem:\n\n- Advanced analytics (e.g. user behavior tracking, A/B testing)\n- Performance monitoring (e.g. load testing, monitoring of server resources)\n- User experience optimization (e.g. user testing, usability analysis)\n\nSelf-actualization:\n\n- End-to-end testing (e.g. Selenium, Cypress)\n- Accessibility and internationalization (e.g. support for screen readers, translation)\n- Scalability (e.g. load balancing, caching)\n- Continuous integration and delivery (e.g. Jenkins, Travis CI)\n- Deployment (e.g. Docker, Kubernetes)\n- Automated testing (e.g. unit test, integration test)\n\nOf course this list isn’t exhaustive, but I’ve been thinking about it as more of a checklist to build upon when working on small side-projects that end up getting significant attention and development time.\n","contentHTML":"<p>I was thinking about all the little projects I work on and how they grow over time. The applications end up hitting some milestones and end up needing similar functionality that compliments the core features. A small project ends up getting complex enough that it requires some unit tests. I’ll go to deploy the project and now I need some deployment scripts and analytics to ensure the application is running correctly. The technology may change between each project, but web applications always seem to have the same steps that need to be taken to strengthen the application as it is scaled up.</p>\n<p>At a large company, adding a new set of functionality always has a suite of concerns to think through before implementation: how will we deploy this feature, how do we validate that users are using the feature like we expected them to, how do we monitor for bugs and errors? This is on top of the basic functionality of actually writing and testing that new feature.</p>\n<p>What if we thought about this like Maslow’s Hierarchy of Needs, but in the context of a web application.</p>\n<p>Maslow&#x27;s Hierarchy of Needs is a psychological model of human motivation proposed by Abraham Maslow in 1943. The model describes a hierarchy of human needs, beginning with basic physiological needs such as food and shelter and progressing upwards to higher-level needs such as self-actualization. Maslow argued that as humans satisfy their basic needs, they can move on to satisfy their higher-level needs.</p>\n<p>Applying Maslow&#x27;s Hierarchy of Needs to web applications, we can identify the different levels of needs that need to be met in order to make a web application successful.</p>\n<p>Basic functionality:</p>\n<ul>\n<li>A single build/run script</li>\n<li>Basic functionality (e.g. CRUD operations for a web app)</li>\n<li>User interface (e.g. layout, navigation, responsive design)</li>\n<li>Integration with external services (e.g. databases, APIs)</li>\n</ul>\n<p>Safety and security:</p>\n<ul>\n<li>Linting (e.g. ESLint, Prettier)</li>\n<li>Unit tests (e.g. Jest, Mocha)</li>\n<li>Basic error handling and reporting (e.g. logging, alerting)</li>\n<li>Input validation (e.g. form validation)</li>\n<li>Security best practices (e.g. encryption, password hashing, session management)</li>\n</ul>\n<p>Love and belonging:</p>\n<ul>\n<li>Basic analytics (e.g. page views, user engagement)</li>\n<li>User authentication and authorization (e.g. sign-up, login, role-based access control)</li>\n<li>User feedback (e.g. contact form, survey)</li>\n<li>Social media integration (e.g. sharing, commenting)</li>\n</ul>\n<p>Esteem:</p>\n<ul>\n<li>Advanced analytics (e.g. user behavior tracking, A/B testing)</li>\n<li>Performance monitoring (e.g. load testing, monitoring of server resources)</li>\n<li>User experience optimization (e.g. user testing, usability analysis)</li>\n</ul>\n<p>Self-actualization:</p>\n<ul>\n<li>End-to-end testing (e.g. Selenium, Cypress)</li>\n<li>Accessibility and internationalization (e.g. support for screen readers, translation)</li>\n<li>Scalability (e.g. load balancing, caching)</li>\n<li>Continuous integration and delivery (e.g. Jenkins, Travis CI)</li>\n<li>Deployment (e.g. Docker, Kubernetes)</li>\n<li>Automated testing (e.g. unit test, integration test)</li>\n</ul>\n<p>Of course this list isn’t exhaustive, but I’ve been thinking about it as more of a checklist to build upon when working on small side-projects that end up getting significant attention and development time.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"I was thinking about all the little projects I work on and how they grow over time. The applications end up hitting some milestones and end up needing similar functionality that compliments the core features. A small project ends up getting complex enough that it requires some unit tests. I’ll go to deploy the project and now I need some deployment scripts and analytics to ensure the application is running correctly. The technology may change between each project, but web applications always seem to have the same steps that need to be taken to strengthen the application as it is scaled up.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"At a large company, adding a new set of functionality always has a suite of concerns to think through before implementation: how will we deploy this feature, how do we validate that users are using the feature like we expected them to, how do we monitor for bugs and errors? This is on top of the basic functionality of actually writing and testing that new feature.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"What if we thought about this like Maslow’s Hierarchy of Needs, but in the context of a web application.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Maslow's Hierarchy of Needs is a psychological model of human motivation proposed by Abraham Maslow in 1943. The model describes a hierarchy of human needs, beginning with basic physiological needs such as food and shelter and progressing upwards to higher-level needs such as self-actualization. Maslow argued that as humans satisfy their basic needs, they can move on to satisfy their higher-level needs.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Applying Maslow's Hierarchy of Needs to web applications, we can identify the different levels of needs that need to be met in order to make a web application successful.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Basic functionality:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"A single build/run script\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Basic functionality (e.g. CRUD operations for a web app)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"User interface (e.g. layout, navigation, responsive design)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Integration with external services (e.g. databases, APIs)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Safety and security:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Linting (e.g. ESLint, Prettier)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Unit tests (e.g. Jest, Mocha)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Basic error handling and reporting (e.g. logging, alerting)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Input validation (e.g. form validation)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Security best practices (e.g. encryption, password hashing, session management)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Love and belonging:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Basic analytics (e.g. page views, user engagement)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"User authentication and authorization (e.g. sign-up, login, role-based access control)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"User feedback (e.g. contact form, survey)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Social media integration (e.g. sharing, commenting)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Esteem:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Advanced analytics (e.g. user behavior tracking, A/B testing)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Performance monitoring (e.g. load testing, monitoring of server resources)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"User experience optimization (e.g. user testing, usability analysis)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Self-actualization:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"End-to-end testing (e.g. Selenium, Cypress)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Accessibility and internationalization (e.g. support for screen readers, translation)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Scalability (e.g. load balancing, caching)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Continuous integration and delivery (e.g. Jenkins, Travis CI)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Deployment (e.g. Docker, Kubernetes)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Automated testing (e.g. unit test, integration test)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Of course this list isn’t exhaustive, but I’ve been thinking about it as more of a checklist to build upon when working on small side-projects that end up getting significant attention and development time.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nI was thinking about all the little projects I work on and how they grow over time. The applications end up hitting some milestones and end up needing similar functionality that compliments the core features. A small project ends up getting complex enough that it requires some unit tests. I’ll go to deploy the project and now I need some deployment scripts and analytics to ensure the application is running correctly. The technology may change between each project, but web applications always seem to have the same steps that need to be taken to strengthen the application as it is scaled up.","excerptHTML":"<p>I was thinking about all the little projects I work on and how they grow over time. The applications end up hitting some milestones and end up needing similar functionality that compliments the core features. A small project ends up getting complex enough that it requires some unit tests. I’ll go to deploy the project and now I need some deployment scripts and analytics to ensure the application is running correctly. The technology may change between each project, but web applications always seem to have the same steps that need to be taken to strengthen the application as it is scaled up.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"I was thinking about all the little projects I work on and how they grow over time. The applications end up hitting some milestones and end up needing similar functionality that compliments the core features. A small project ends up getting complex enough that it requires some unit tests. I’ll go to deploy the project and now I need some deployment scripts and analytics to ensure the application is running correctly. The technology may change between each project, but web applications always seem to have the same steps that need to be taken to strengthen the application as it is scaled up.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["webapp","checklist"]}]},"__N_SSG":true}