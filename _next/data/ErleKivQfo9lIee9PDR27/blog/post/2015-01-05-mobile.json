{"pageProps":{"headTitle":"Mobile - idmontie's Portfolio","headKeywords":"mobile","post":{"slug":"2015-01-05-mobile","date":"2015-01-05","title":"Mobile","frontmatter":{"title":"Mobile","tags":["mobile"]},"contentRaw":"\nThis short post was originally on a blog I started for creating web applications. This post goes into mobile considerations for web applications.\n\n## Tools to Sync Mobile and Web Development\n\nThese tools not only help with Mobile development, but they also help with cross-browser development as well (see Developer Tools):\n\n* [Ghostlab](http://vanamco.com/ghostlab/) - Synchronized browser testing for web and mobile.  Test files and URLs against multiple devices by syncing clicks, scrolls, keystrokes across the devices. $49 for a license.\n* [Edge Inspect CC](https://creative.adobe.com/products/inspect) - Synchronized Browsing & Refreshing. Test files and URLs agaisnt multiple devices at once.  Part of the Adobe Creative Cloud.\n","contentHTML":"<p>This short post was originally on a blog I started for creating web applications. This post goes into mobile considerations for web applications.</p>\n<h2>Tools to Sync Mobile and Web Development</h2>\n<p>These tools not only help with Mobile development, but they also help with cross-browser development as well (see Developer Tools):</p>\n<ul>\n<li><a href=\"http://vanamco.com/ghostlab/\">Ghostlab</a> - Synchronized browser testing for web and mobile.  Test files and URLs against multiple devices by syncing clicks, scrolls, keystrokes across the devices. $49 for a license.</li>\n<li><a href=\"https://creative.adobe.com/products/inspect\">Edge Inspect CC</a> - Synchronized Browsing &amp; Refreshing. Test files and URLs agaisnt multiple devices at once.  Part of the Adobe Creative Cloud.</li>\n</ul>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This short post was originally on a blog I started for creating web applications. This post goes into mobile considerations for web applications.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tools to Sync Mobile and Web Development\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These tools not only help with Mobile development, but they also help with cross-browser development as well (see Developer Tools):\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://vanamco.com/ghostlab/\",\n          children: \"Ghostlab\"\n        }), \" - Synchronized browser testing for web and mobile.  Test files and URLs against multiple devices by syncing clicks, scrolls, keystrokes across the devices. $49 for a license.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://creative.adobe.com/products/inspect\",\n          children: \"Edge Inspect CC\"\n        }), \" - Synchronized Browsing & Refreshing. Test files and URLs agaisnt multiple devices at once.  Part of the Adobe Creative Cloud.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nThis short post was originally on a blog I started for creating web applications. This post goes into mobile considerations for web applications.","excerptHTML":"<p>This short post was originally on a blog I started for creating web applications. This post goes into mobile considerations for web applications.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"This short post was originally on a blog I started for creating web applications. This post goes into mobile considerations for web applications.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["mobile"]},"previous":{"slug":"2023-01-01-nx-nextjs-starter","date":"2023-01-01","title":"NX NextJS Starter","frontmatter":{"title":"NX NextJS Starter","tags":["nextjs","nx","typescript"]},"contentRaw":"\nTo kickstart the year, I created a repo that contains a simple starter kit for using NextJS with NX. You can see the repo here:\n\n[Github](https://github.com/idmontie/nx-nextjs-starter)\n\nThis personal Github page is built using this starter kit. I wanted to create a starter kit that was simple and easy to use and also has a lot of eslint and Typescript configuration setup. I've also been working on revamping the website for Dark Emblem - my NFT side-project. The starter kit is based on the linting rules and Typescript set up that I've been using for that project.\n\n## Nx\n\nI've traditionally used Lerna for my monorepo projects, but now that Nx has taken over maintenance of Lerna, I decided to give Nx a try directly.\n\nNx has been enjoyable to use. Managing many different React projects with internal libraries has been very easy to set up, use and deploy.\n\n## NextJS\n\nMy last few projects have been Single Page Apps (SPAs) or statically generated sites using Gatsby or Docusaurus. All three of those tools are great, but I wanted to try out NextJS for a few reasons:\n\n* In my Dark Emblem project, I was having difficulty getting share links to Discord and Twitter to work properly. This was mainly caused by those sites not running JavaScript, so page links would just render the default SPA title and description. I knew that NextJS had a solution for this, so I wanted to try it out.\n* I wanted more control of my documentation and blog websites, so I needed to be able to use custom server-side code.\n\n## Starter Kit\n\nOverall the starter kit is a pretty simple example. It just containers preconfigured Nx, husky, lint-staged, eslint, prettier, Typescript, and NextJS. It does not contain any UI components or anything like that. It's just a simple starter kit to get you up and running with a monorepo NextJS project.\n\nFeel free to check it out at [Github](https://github.com/idmontie/nx-nextjs-starter).","contentHTML":"<p>To kickstart the year, I created a repo that contains a simple starter kit for using NextJS with NX. You can see the repo here:</p>\n<p><a href=\"https://github.com/idmontie/nx-nextjs-starter\">Github</a></p>\n<p>This personal Github page is built using this starter kit. I wanted to create a starter kit that was simple and easy to use and also has a lot of eslint and Typescript configuration setup. I&#x27;ve also been working on revamping the website for Dark Emblem - my NFT side-project. The starter kit is based on the linting rules and Typescript set up that I&#x27;ve been using for that project.</p>\n<h2>Nx</h2>\n<p>I&#x27;ve traditionally used Lerna for my monorepo projects, but now that Nx has taken over maintenance of Lerna, I decided to give Nx a try directly.</p>\n<p>Nx has been enjoyable to use. Managing many different React projects with internal libraries has been very easy to set up, use and deploy.</p>\n<h2>NextJS</h2>\n<p>My last few projects have been Single Page Apps (SPAs) or statically generated sites using Gatsby or Docusaurus. All three of those tools are great, but I wanted to try out NextJS for a few reasons:</p>\n<ul>\n<li>In my Dark Emblem project, I was having difficulty getting share links to Discord and Twitter to work properly. This was mainly caused by those sites not running JavaScript, so page links would just render the default SPA title and description. I knew that NextJS had a solution for this, so I wanted to try it out.</li>\n<li>I wanted more control of my documentation and blog websites, so I needed to be able to use custom server-side code.</li>\n</ul>\n<h2>Starter Kit</h2>\n<p>Overall the starter kit is a pretty simple example. It just containers preconfigured Nx, husky, lint-staged, eslint, prettier, Typescript, and NextJS. It does not contain any UI components or anything like that. It&#x27;s just a simple starter kit to get you up and running with a monorepo NextJS project.</p>\n<p>Feel free to check it out at <a href=\"https://github.com/idmontie/nx-nextjs-starter\">Github</a>.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"To kickstart the year, I created a repo that contains a simple starter kit for using NextJS with NX. You can see the repo here:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/idmontie/nx-nextjs-starter\",\n        children: \"Github\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This personal Github page is built using this starter kit. I wanted to create a starter kit that was simple and easy to use and also has a lot of eslint and Typescript configuration setup. I've also been working on revamping the website for Dark Emblem - my NFT side-project. The starter kit is based on the linting rules and Typescript set up that I've been using for that project.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Nx\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I've traditionally used Lerna for my monorepo projects, but now that Nx has taken over maintenance of Lerna, I decided to give Nx a try directly.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Nx has been enjoyable to use. Managing many different React projects with internal libraries has been very easy to set up, use and deploy.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"NextJS\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"My last few projects have been Single Page Apps (SPAs) or statically generated sites using Gatsby or Docusaurus. All three of those tools are great, but I wanted to try out NextJS for a few reasons:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"In my Dark Emblem project, I was having difficulty getting share links to Discord and Twitter to work properly. This was mainly caused by those sites not running JavaScript, so page links would just render the default SPA title and description. I knew that NextJS had a solution for this, so I wanted to try it out.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"I wanted more control of my documentation and blog websites, so I needed to be able to use custom server-side code.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Starter Kit\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Overall the starter kit is a pretty simple example. It just containers preconfigured Nx, husky, lint-staged, eslint, prettier, Typescript, and NextJS. It does not contain any UI components or anything like that. It's just a simple starter kit to get you up and running with a monorepo NextJS project.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Feel free to check it out at \", _jsx(_components.a, {\n        href: \"https://github.com/idmontie/nx-nextjs-starter\",\n        children: \"Github\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nTo kickstart the year, I created a repo that contains a simple starter kit for using NextJS with NX. You can see the repo here:","excerptHTML":"<p>To kickstart the year, I created a repo that contains a simple starter kit for using NextJS with NX. You can see the repo here:</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"To kickstart the year, I created a repo that contains a simple starter kit for using NextJS with NX. You can see the repo here:\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["nextjs","nx","typescript"]},"next":{"slug":"2015-01-04-developer-tools","date":"2015-01-04","title":"Developer Tools","frontmatter":{"title":"Developer Tools","tags":["developer tools"]},"contentRaw":"\nThis post was originally on a blog I started for creating web applications. This post goes into using developer tools to help you develop your web applications.\n\n## Cross Browser Tools\n\n* [Ghostlab](http://vanamco.com/ghostlab/) - Synchronized browser testing for web and mobile.  Test files and URLs against multiple devices by syncing clicks, scrolls, keystrokes across the devices. $49 for a license.\n* [Edge Inspect CC](https://creative.adobe.com/products/inspect) - Synchronized Browsing & Refreshing. Test files and URLs agaisnt multiple devices at once.  Part of the Adobe Creative Cloud.\n* [Live Reload](http://livereload.com/) - LiveReload monitors changes in the file system. As soon as you save a file, it is preprocessed as needed, and the browser is refreshed. $10 for Mac. Free for other platforms.\n* [Parallels](https://www.parallels.com/) - Run Windows on Your Mac.  Useful for testing Internet Explorer on OSX.\n\n## Google Chrome Tools\n\n* [CSSDig](http://cssdig.com/) - Look at your CSS in a way that easily allows you to refactor it.  \n\n## User Interface Tools\n\n* [UX Check](www.uxcheck.co) - UX Check is a Chrome Extension that helps you identify usability issues through a heuristic evaluation.  It gives you tools for making notes on websites.\n* [Good UI](www.googleui.org) - Data stories concerning UI. Tips and hints for a better user experience.  They have a paid-for newsletter.\n* [Little Big Details](http://littlebigdetails.com/) contains design inspiration from the point of view of the users.\n* [Adobe Color CC](https://color.adobe.com/) - Formerly known as Kuler, this tools lets you pick color schemes.\n* [Material Palette](http://www.materialpalette.com/) - Preview simple color schemes.  Pick two colors and preview what they will look like on a simple site.\n\n## Usage Trends\n\n* [W3Techs](http://w3techs.com/) has a lot of technology surveys that can show you current technology trends.  It will show changes in market share, which CMS systems are popular, etc.\n* [Stack Share](http://stackshare.io/) - see what technology stacks other platforms are using.\n\n## Images and Stock Photos\n\n* [Subtle Patterns](http://subtlepatterns.com/) - Sublte pattern backgrounds for websites.\n* [Unsplash](https://unsplash.com/) - Large, high-resolution, splash photos for free.\n* [Resplashed](http://www.resplashed.com/) - HD images.\n* [Stock photos list ad Medium](https://medium.com/@dustin/stock-photos-that-dont-suck-62ae4bcbe01b) - List of great stock photo resources.\n* [SuperFamous](http://superfamous.com/)\n* [IMCreator](http://www.imcreator.com/free)\n* [The Pattern Library](http://thepatternlibrary.com/)\n* [Pic Jumbo](http://picjumbo.com/)\n\n## Templates\n\n### HTML5 Templates\n\n* [HTML5 Up](http://html5up.net/) - fully responsive, free, HTML5 templates.\n* [HTML5 Templates](http://themes.3rdwavemedia.com/) - UX centred HTML5 Bootstrap themes and templates.\n* [Templated](http://templated.co/) - A collection of free CSS and HTML5 site templates.\n\n## Emails\n\n* [Ink](http://zurb.com/ink/) - Tool for helping create emails.\n* [BeeFree](https://beefree.io/) - Tool for helping create emails.\n\n## SEO\n\n* [Google Keyword Planner](https://adwords.google.com/KeywordPlanner)\n* [Google Analytics](http://www.google.com/analytics/)\n* [Website Optimizer](https://support.google.com/analytics/answer/1745147)\n\nNote: Checkout the [Google Trifecta Video](https://www.youtube.com/watch?v=9yKjrdcC8wA).\n","contentHTML":"<p>This post was originally on a blog I started for creating web applications. This post goes into using developer tools to help you develop your web applications.</p>\n<h2>Cross Browser Tools</h2>\n<ul>\n<li><a href=\"http://vanamco.com/ghostlab/\">Ghostlab</a> - Synchronized browser testing for web and mobile.  Test files and URLs against multiple devices by syncing clicks, scrolls, keystrokes across the devices. $49 for a license.</li>\n<li><a href=\"https://creative.adobe.com/products/inspect\">Edge Inspect CC</a> - Synchronized Browsing &amp; Refreshing. Test files and URLs agaisnt multiple devices at once.  Part of the Adobe Creative Cloud.</li>\n<li><a href=\"http://livereload.com/\">Live Reload</a> - LiveReload monitors changes in the file system. As soon as you save a file, it is preprocessed as needed, and the browser is refreshed. $10 for Mac. Free for other platforms.</li>\n<li><a href=\"https://www.parallels.com/\">Parallels</a> - Run Windows on Your Mac.  Useful for testing Internet Explorer on OSX.</li>\n</ul>\n<h2>Google Chrome Tools</h2>\n<ul>\n<li><a href=\"http://cssdig.com/\">CSSDig</a> - Look at your CSS in a way that easily allows you to refactor it.</li>\n</ul>\n<h2>User Interface Tools</h2>\n<ul>\n<li><a href=\"www.uxcheck.co\">UX Check</a> - UX Check is a Chrome Extension that helps you identify usability issues through a heuristic evaluation.  It gives you tools for making notes on websites.</li>\n<li><a href=\"www.googleui.org\">Good UI</a> - Data stories concerning UI. Tips and hints for a better user experience.  They have a paid-for newsletter.</li>\n<li><a href=\"http://littlebigdetails.com/\">Little Big Details</a> contains design inspiration from the point of view of the users.</li>\n<li><a href=\"https://color.adobe.com/\">Adobe Color CC</a> - Formerly known as Kuler, this tools lets you pick color schemes.</li>\n<li><a href=\"http://www.materialpalette.com/\">Material Palette</a> - Preview simple color schemes.  Pick two colors and preview what they will look like on a simple site.</li>\n</ul>\n<h2>Usage Trends</h2>\n<ul>\n<li><a href=\"http://w3techs.com/\">W3Techs</a> has a lot of technology surveys that can show you current technology trends.  It will show changes in market share, which CMS systems are popular, etc.</li>\n<li><a href=\"http://stackshare.io/\">Stack Share</a> - see what technology stacks other platforms are using.</li>\n</ul>\n<h2>Images and Stock Photos</h2>\n<ul>\n<li><a href=\"http://subtlepatterns.com/\">Subtle Patterns</a> - Sublte pattern backgrounds for websites.</li>\n<li><a href=\"https://unsplash.com/\">Unsplash</a> - Large, high-resolution, splash photos for free.</li>\n<li><a href=\"http://www.resplashed.com/\">Resplashed</a> - HD images.</li>\n<li><a href=\"https://medium.com/@dustin/stock-photos-that-dont-suck-62ae4bcbe01b\">Stock photos list ad Medium</a> - List of great stock photo resources.</li>\n<li><a href=\"http://superfamous.com/\">SuperFamous</a></li>\n<li><a href=\"http://www.imcreator.com/free\">IMCreator</a></li>\n<li><a href=\"http://thepatternlibrary.com/\">The Pattern Library</a></li>\n<li><a href=\"http://picjumbo.com/\">Pic Jumbo</a></li>\n</ul>\n<h2>Templates</h2>\n<h3>HTML5 Templates</h3>\n<ul>\n<li><a href=\"http://html5up.net/\">HTML5 Up</a> - fully responsive, free, HTML5 templates.</li>\n<li><a href=\"http://themes.3rdwavemedia.com/\">HTML5 Templates</a> - UX centred HTML5 Bootstrap themes and templates.</li>\n<li><a href=\"http://templated.co/\">Templated</a> - A collection of free CSS and HTML5 site templates.</li>\n</ul>\n<h2>Emails</h2>\n<ul>\n<li><a href=\"http://zurb.com/ink/\">Ink</a> - Tool for helping create emails.</li>\n<li><a href=\"https://beefree.io/\">BeeFree</a> - Tool for helping create emails.</li>\n</ul>\n<h2>SEO</h2>\n<ul>\n<li><a href=\"https://adwords.google.com/KeywordPlanner\">Google Keyword Planner</a></li>\n<li><a href=\"http://www.google.com/analytics/\">Google Analytics</a></li>\n<li><a href=\"https://support.google.com/analytics/answer/1745147\">Website Optimizer</a></li>\n</ul>\n<p>Note: Checkout the <a href=\"https://www.youtube.com/watch?v=9yKjrdcC8wA\">Google Trifecta Video</a>.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This post was originally on a blog I started for creating web applications. This post goes into using developer tools to help you develop your web applications.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Cross Browser Tools\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://vanamco.com/ghostlab/\",\n          children: \"Ghostlab\"\n        }), \" - Synchronized browser testing for web and mobile.  Test files and URLs against multiple devices by syncing clicks, scrolls, keystrokes across the devices. $49 for a license.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://creative.adobe.com/products/inspect\",\n          children: \"Edge Inspect CC\"\n        }), \" - Synchronized Browsing & Refreshing. Test files and URLs agaisnt multiple devices at once.  Part of the Adobe Creative Cloud.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://livereload.com/\",\n          children: \"Live Reload\"\n        }), \" - LiveReload monitors changes in the file system. As soon as you save a file, it is preprocessed as needed, and the browser is refreshed. $10 for Mac. Free for other platforms.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://www.parallels.com/\",\n          children: \"Parallels\"\n        }), \" - Run Windows on Your Mac.  Useful for testing Internet Explorer on OSX.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Google Chrome Tools\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://cssdig.com/\",\n          children: \"CSSDig\"\n        }), \" - Look at your CSS in a way that easily allows you to refactor it.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"User Interface Tools\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"www.uxcheck.co\",\n          children: \"UX Check\"\n        }), \" - UX Check is a Chrome Extension that helps you identify usability issues through a heuristic evaluation.  It gives you tools for making notes on websites.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"www.googleui.org\",\n          children: \"Good UI\"\n        }), \" - Data stories concerning UI. Tips and hints for a better user experience.  They have a paid-for newsletter.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://littlebigdetails.com/\",\n          children: \"Little Big Details\"\n        }), \" contains design inspiration from the point of view of the users.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://color.adobe.com/\",\n          children: \"Adobe Color CC\"\n        }), \" - Formerly known as Kuler, this tools lets you pick color schemes.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://www.materialpalette.com/\",\n          children: \"Material Palette\"\n        }), \" - Preview simple color schemes.  Pick two colors and preview what they will look like on a simple site.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage Trends\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://w3techs.com/\",\n          children: \"W3Techs\"\n        }), \" has a lot of technology surveys that can show you current technology trends.  It will show changes in market share, which CMS systems are popular, etc.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://stackshare.io/\",\n          children: \"Stack Share\"\n        }), \" - see what technology stacks other platforms are using.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Images and Stock Photos\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://subtlepatterns.com/\",\n          children: \"Subtle Patterns\"\n        }), \" - Sublte pattern backgrounds for websites.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://unsplash.com/\",\n          children: \"Unsplash\"\n        }), \" - Large, high-resolution, splash photos for free.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://www.resplashed.com/\",\n          children: \"Resplashed\"\n        }), \" - HD images.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://medium.com/@dustin/stock-photos-that-dont-suck-62ae4bcbe01b\",\n          children: \"Stock photos list ad Medium\"\n        }), \" - List of great stock photo resources.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://superfamous.com/\",\n          children: \"SuperFamous\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://www.imcreator.com/free\",\n          children: \"IMCreator\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://thepatternlibrary.com/\",\n          children: \"The Pattern Library\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://picjumbo.com/\",\n          children: \"Pic Jumbo\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Templates\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"HTML5 Templates\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://html5up.net/\",\n          children: \"HTML5 Up\"\n        }), \" - fully responsive, free, HTML5 templates.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://themes.3rdwavemedia.com/\",\n          children: \"HTML5 Templates\"\n        }), \" - UX centred HTML5 Bootstrap themes and templates.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://templated.co/\",\n          children: \"Templated\"\n        }), \" - A collection of free CSS and HTML5 site templates.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Emails\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"http://zurb.com/ink/\",\n          children: \"Ink\"\n        }), \" - Tool for helping create emails.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://beefree.io/\",\n          children: \"BeeFree\"\n        }), \" - Tool for helping create emails.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"SEO\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://adwords.google.com/KeywordPlanner\",\n          children: \"Google Keyword Planner\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://www.google.com/analytics/\",\n          children: \"Google Analytics\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://support.google.com/analytics/answer/1745147\",\n          children: \"Website Optimizer\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note: Checkout the \", _jsx(_components.a, {\n        href: \"https://www.youtube.com/watch?v=9yKjrdcC8wA\",\n        children: \"Google Trifecta Video\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nThis post was originally on a blog I started for creating web applications. This post goes into using developer tools to help you develop your web applications.","excerptHTML":"<p>This post was originally on a blog I started for creating web applications. This post goes into using developer tools to help you develop your web applications.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"This post was originally on a blog I started for creating web applications. This post goes into using developer tools to help you develop your web applications.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["developer tools"]}},"__N_SSG":true}