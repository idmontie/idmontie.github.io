{"pageProps":{"headTitle":"Font Matcher - idmontie's Portfolio","project":{"slug":"2015-02-08-font-matcher.md","date":"2015-02-08","title":"Font Matcher","frontmatter":{"title":"Font Matcher","description":"Pair up Google Fonts. Vote, favorite, and see the top pairs.","image":"/images/project-font-matcher.png","github_link":"https://github.com/idmontie/font-matcher","view_link":"http://fontmatcher.meteor.com/","language_tags":["javascript","html","css","mongo"],"framework_tags":["meteor","ionic"]},"contentRaw":"\nA simple application using Ionic, Meteor, Blaze, and Google Fonts. The app simple pairs random fonts from Google Fonts together for you to get ideas about your typography.\n","contentHTML":"<p>A simple application using Ionic, Meteor, Blaze, and Google Fonts. The app simple pairs random fonts from Google Fonts together for you to get ideas about your typography.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"A simple application using Ionic, Meteor, Blaze, and Google Fonts. The app simple pairs random fonts from Google Fonts together for you to get ideas about your typography.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nA simple application using Ionic, Meteor, Blaze, and Google Fonts. The app simple pairs random fonts from Google Fonts together for you to get ideas about your typography.","excerptHTML":"<p>A simple application using Ionic, Meteor, Blaze, and Google Fonts. The app simple pairs random fonts from Google Fonts together for you to get ideas about your typography.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"A simple application using Ionic, Meteor, Blaze, and Google Fonts. The app simple pairs random fonts from Google Fonts together for you to get ideas about your typography.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},"next":{"slug":"2015-02-01-idea-pad-wordpress-theme.md","date":"2015-02-01","title":"Idea Pad WordPress Theme","frontmatter":{"title":"Idea Pad WordPress Theme","description":"A Medium inspired, open-source WordPress theme.","image":"/images/project-idea-pad.png","github_link":"https://github.com/idmontie/idea-pad-wordpress-theme","language_tags":["php","html5","scss","javascript"],"framework_tags":["wordpress"]},"contentRaw":"","contentHTML":"","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {\n    \n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"","excerptHTML":"","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {\n    \n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},"previous":{"slug":"2015-03-03-scss-hover-effects.md","date":"2015-03-03","title":"SCSS Hover Effects","frontmatter":{"title":"SCSS Hover Effects","image":"/images/project-scss-hover-effects.png","description":"An extensible implementation of hover effects for SCSS.","view_link":"http://idmontie.github.io/hover-effects-scss/","github_link":"https://github.com/idmontie/hover-effects-scss","language_tags":["scss"],"tool_tags":["travis ci","grunt"]},"contentRaw":"","contentHTML":"","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {\n    \n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"","excerptHTML":"","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {\n    \n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]}},"__N_SSG":true}