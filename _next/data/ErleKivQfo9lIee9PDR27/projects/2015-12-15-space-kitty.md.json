{"pageProps":{"headTitle":"Space Kitty - idmontie's Portfolio","project":{"slug":"2015-12-15-space-kitty.md","date":"2015-12-15","title":"Space Kitty","frontmatter":{"title":"Space Kitty","description":"Space Kitty is a project generator for Meteor projects.\n","image":"/images/project-space-kitty.png","view_link":"http://spacekitty.capsulecat.com/","github_link":"https://github.com/CapsuleCat/SpaceKitty","language_tags":["javascript"],"framework_tags":["npm"]},"contentRaw":"\nSpace Kitty is a way of making projects.\n\nThe goal is to help you get from 0 to initial prototype and MVP as fast as possible.\n\nInstead of wasting time learning about best practices, how to set up your router, get views set up correctly, browsing for the correct packages to use, and writing the same scaffolding code over and over again, Space Kitty takes care of all of that for you.","contentHTML":"<p>Space Kitty is a way of making projects.</p>\n<p>The goal is to help you get from 0 to initial prototype and MVP as fast as possible.</p>\n<p>Instead of wasting time learning about best practices, how to set up your router, get views set up correctly, browsing for the correct packages to use, and writing the same scaffolding code over and over again, Space Kitty takes care of all of that for you.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Space Kitty is a way of making projects.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The goal is to help you get from 0 to initial prototype and MVP as fast as possible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Instead of wasting time learning about best practices, how to set up your router, get views set up correctly, browsing for the correct packages to use, and writing the same scaffolding code over and over again, Space Kitty takes care of all of that for you.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nSpace Kitty is a way of making projects.","excerptHTML":"<p>Space Kitty is a way of making projects.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Space Kitty is a way of making projects.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},"next":{"slug":"2015-11-09-plipable.md","date":"2015-11-09","title":"Plipable","frontmatter":{"title":"Plipable","description":"It's like Soundcloud for Youtube. Your messages are automatically timestamped to where you initially wanted to post them!\n","image":"/images/project-plipable.png","view_link":"https://www.plipable.com/","github_link":"https://github.com/mantarayar/plipable","language_tags":["javascript","scss","mongo"],"framework_tags":["meteor","react","materialize","chrome extensions"]},"contentRaw":"\nI made Plipable to be a fun way to interact with videos.\n\nThanks to Youtube, there are tons of videos to watch and comment on. Special thanks to their API which made this all possible.\n\nShout out to Giphy. I just really, really like Giphy. Without them, commenting just would not be as fun as it is.\n","contentHTML":"<p>I made Plipable to be a fun way to interact with videos.</p>\n<p>Thanks to Youtube, there are tons of videos to watch and comment on. Special thanks to their API which made this all possible.</p>\n<p>Shout out to Giphy. I just really, really like Giphy. Without them, commenting just would not be as fun as it is.</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"I made Plipable to be a fun way to interact with videos.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Thanks to Youtube, there are tons of videos to watch and comment on. Special thanks to their API which made this all possible.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Shout out to Giphy. I just really, really like Giphy. Without them, commenting just would not be as fun as it is.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nI made Plipable to be a fun way to interact with videos.","excerptHTML":"<p>I made Plipable to be a fun way to interact with videos.</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"I made Plipable to be a fun way to interact with videos.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]},"previous":{"slug":"2015-12-15-capsule-cat.md","date":"2015-12-15","title":"Capsule Cat","frontmatter":{"title":"Capsule Cat","description":"Capsule Cat is an online group that blogs and creates experiemental projects\n","image":"/images/project-capsule-cat.png","view_link":"http://blog.capsulecat.com/","github_link":"https://github.com/CapsuleCat","language_tags":["javascript","php"],"framework_tags":["npm","wordpress","wordpress themes"]},"contentRaw":"\nCapsule Cat develops for NPM, Meteor, Node, React, and tons of other JavaScript frameworks!","contentHTML":"<p>Capsule Cat develops for NPM, Meteor, Node, React, and tons of other JavaScript frameworks!</p>","contentCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Capsule Cat develops for NPM, Meteor, Node, React, and tons of other JavaScript frameworks!\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nCapsule Cat develops for NPM, Meteor, Node, React, and tons of other JavaScript frameworks!","excerptHTML":"<p>Capsule Cat develops for NPM, Meteor, Node, React, and tons of other JavaScript frameworks!</p>","excerptCode":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components);\n  return _jsx(_components.p, {\n    children: \"Capsule Cat develops for NPM, Meteor, Node, React, and tons of other JavaScript frameworks!\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":[]}},"__N_SSG":true}