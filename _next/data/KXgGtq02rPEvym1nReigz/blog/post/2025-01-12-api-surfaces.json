{"pageProps":{"headTitle":"APIs, Complexity, and Surfaces - idmontie's Portfolio","headKeywords":"programming, apis","post":{"slug":"2025-01-12-api-surfaces","date":"2025-01-12","title":"APIs, Complexity, and Surfaces","frontmatter":{"title":"APIs, Complexity, and Surfaces","tags":["programming","apis"]},"contentRaw":"\nMaintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI's complixty as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.\n\n<!--truncate-->\n\nWe will consider an API as an abstract set of functions, each with a\ndefined set of input parameters and outputs. An API can represent a library,\nan interface, or a set of functions in a design system.\n\n## An API as a Surface\n\nA good API minimizes the complexity that a consumer needs to understand\nin order to use it. If we think o fan  API as an abstract two dimensional\nsurface, then the complexity of the internals of the API - all the code\nthat is required to implement the API - is the area of that surface.\nThe API that is exposed as functions, input parameters, and outputs is\nthe perimeter of that surface. This follows from the conscept that an\nAPI should act as a \"black box\" - the consumer should not need to know\nhow the API is implemented in order to use it.\n\nFrom this metaphor, we can also think of the \"best\" API as one that\nminimizes the perimeter of the surface while maximizing the necessary\narea of the surface.\n\n## The Complexity of a Surface\n\nThe percieved complexity of an API can be influenced by the number of functions,\nthe numbner of parameters, and the number of return values.\n\nWe will not be considering the internal state of the services that consumers\nmay need to manage. Instead, we will focus on \"idempotent\" functions - those\nthat do not have side effects and do not require any state to be managed.\n\nAbstractly, we can denote the API Surface $S$ as a set of functions $f_i$,\nwhere the complexity of each function $f_i$ is given by $c(f_i)$, and the\noverall complexity of the surface is given by:\n\n$$\nC(S) = \\sum_{i=1}^{n} c(f_i)\n$$\n\nwhere $n$ is the number of functions in the surface.\n\nAs we increase the number of functions in the surface, the complexity of the\nsurface is also expected to increase.\n\n## The Complexity of a Function\n\nThe complexity of a function $f_i$ can be influenced by the number of input\nparameters, their values, and the number of return values.\n\nTake for example a function $f(x: boolean): boolean$ that takes a single\nboolean input and returns a boolean value. The complexity of this function\nis relatively low - there are only two possible input values and two possible\noutput values.\n\nIf we jump to a function $f(x: boolean, y: boolean, z: boolean): boolean$\nthen the complexity of this function is higher - there are now $2^3 = 8$\npossible input values and two possible output values.\n\nAs we increase the number of input parameters, we increase the number\nof combinations of input values that the function can accept. This\nincreases the complexity of the function:\n\n$$\nc(f_i) = \\prod_{p} |p| + |r|\n$$\n\nwhere $p$ is the set of input parameters, $r$ is the set of return values,\nand $|p|$ is size of the set of input parameters and $|r|$ is the size of\nthe set of return values. By \"size\" we  mean the number of \"meaningful\"\nvalues that a parameter type has. For example, a boolean has two meaningful,\nbut an integer may have an infinite range of non-meaningful values. In some\nlanguages, like C, it is common for an integer to have meaningful values\nof -1 and 0, and non-meaningful values of all other integers. In the case where\nthe integer is simply a number, we would consider the size of the parameter\nto be 1, while the size of a C-like integer to be the number of \"special\" cases\nthe integer has.\n\nAaron Luu, in his article [Don't use boolean](https://www.luu.io/posts/dont-use-booleans)\nalludes to this exponential potential for complexity when using boolean\nvalues.\n\n## Tests as Consumers\n\nInterestingly, the test for an API already act as a consumer and can demonstrate\nthe complexity of an API as it stives to cover all possible branches and use-cases.\nFor our function with 3 boolean inputs, we would need to write 8 tests to cover\nall possible input combinations. A suite of tests that check tons of combinations\nof inputs and outputs is a good indicator that the API is complex.\n\n## Techniques for Reducing Complexity\n\nThis is by no means an exhaustive list, but here are some techniques that\ncan help reduce complexity.\n\nFirst is to identify if the parameters are truly independent. For example, let's take\nthe example:\n\n```\nf(x: boolean, y: Data | undefined): boolean\n```\n\nIf the value of $y$ is only meaningful when $x$ is true, then we can consider\n$y$ to be a dependent parameter. If we write out a matrix of possible inputs:\n\n- x: true, y: Data\n- x: false, y: Data\n- x: true, y: undefined\n- x: false, y: undefined\n\nWe can see that the value of $y$ is only meaningful when $x$ is true.\n\nWhen we have dependent parameters, we can consider using the type-system to\nhelp us manage the complexity. For example, we could just simplify the\nfunction to allow only valid inputs:\n\n```\nf(x: Data | false): boolean\n```\n\nDepending on the values of Data, this simplifies the complexity of the function by\nhalf.\n\nAnother technique is to consider reducing boolean inputs to a single enum-like\ninput type. For example, simplifying 3 boolean parameters into a single\nenum-like parameter:\n\n```\nf(x: 'all'  | 'none' | 'some'): boolean\n```\n\nThis reduces the number of possible input combinations from 8 to 3.\n\n## Conclusion\n\nThis is one simple way to measure the complexity of an API, which shows\nthat the bigger the surface area, the more complex the API. The majority\nof this complexity comes from thee combinations of input parameters and\nreturn values. By reducing the number of input parameters and return values,\nwe can reduce the complexity of the API.\n\nThis is by no means the only way to measure the complexity of an API, but\nit is a useful way to think about the complexity of an API in terms of\nthe number of possible input and output combinations.","contentHTML":"<p>Maintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI&#x27;s complixty as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.</p>\n<p>We will consider an API as an abstract set of functions, each with a\ndefined set of input parameters and outputs. An API can represent a library,\nan interface, or a set of functions in a design system.</p>\n<h2>An API as a Surface</h2>\n<p>A good API minimizes the complexity that a consumer needs to understand\nin order to use it. If we think o fan  API as an abstract two dimensional\nsurface, then the complexity of the internals of the API - all the code\nthat is required to implement the API - is the area of that surface.\nThe API that is exposed as functions, input parameters, and outputs is\nthe perimeter of that surface. This follows from the conscept that an\nAPI should act as a &quot;black box&quot; - the consumer should not need to know\nhow the API is implemented in order to use it.</p>\n<p>From this metaphor, we can also think of the &quot;best&quot; API as one that\nminimizes the perimeter of the surface while maximizing the necessary\narea of the surface.</p>\n<h2>The Complexity of a Surface</h2>\n<p>The percieved complexity of an API can be influenced by the number of functions,\nthe numbner of parameters, and the number of return values.</p>\n<p>We will not be considering the internal state of the services that consumers\nmay need to manage. Instead, we will focus on &quot;idempotent&quot; functions - those\nthat do not have side effects and do not require any state to be managed.</p>\n<p>Abstractly, we can denote the API Surface <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">S</span></span></span></span> as a set of functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span>,\nwhere the complexity of each function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span> is given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">c(f_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, and the\noverall complexity of the surface is given by:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>c</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(S) = \\sum_{i=1}^{n} c(f_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em\"><span style=\"top:-1.8723em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is the number of functions in the surface.</p>\n<p>As we increase the number of functions in the surface, the complexity of the\nsurface is also expected to increase.</p>\n<h2>The Complexity of a Function</h2>\n<p>The complexity of a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span> can be influenced by the number of input\nparameters, their values, and the number of return values.</p>\n<p>Take for example a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">f(x: boolean): boolean</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span></span></span></span> that takes a single\nboolean input and returns a boolean value. The complexity of this function\nis relatively low - there are only two possible input values and two possible\noutput values.</p>\n<p>If we jump to a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo separator=\"true\">,</mo><mi>z</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">f(x: boolean, y: boolean, z: boolean): boolean</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span></span></span></span>\nthen the complexity of this function is higher - there are now <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup><mo>=</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">2^3 = 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">8</span></span></span></span>\npossible input values and two possible output values.</p>\n<p>As we increase the number of input parameters, we increase the number\nof combinations of input values that the function can accept. This\nincreases the complexity of the function:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>c</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><munder><mo>∏</mo><mi>p</mi></munder><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">c(f_i) = \\prod_{p} |p| + |r|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4361em;vertical-align:-1.3861em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em\"><span style=\"top:-1.9em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.05em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span><span class=\"mop op-symbol large-op\">∏</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3861em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">r</span><span class=\"mord\">∣</span></span></span></span></span>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is the set of input parameters, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">r</span></span></span></span> is the set of return values,\nand <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|p|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">∣</span></span></span></span> is size of the set of input parameters and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|r|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">r</span><span class=\"mord\">∣</span></span></span></span> is the size of\nthe set of return values. By &quot;size&quot; we  mean the number of &quot;meaningful&quot;\nvalues that a parameter type has. For example, a boolean has two meaningful,\nbut an integer may have an infinite range of non-meaningful values. In some\nlanguages, like C, it is common for an integer to have meaningful values\nof -1 and 0, and non-meaningful values of all other integers. In the case where\nthe integer is simply a number, we would consider the size of the parameter\nto be 1, while the size of a C-like integer to be the number of &quot;special&quot; cases\nthe integer has.</p>\n<p>Aaron Luu, in his article <a href=\"https://www.luu.io/posts/dont-use-booleans\">Don&#x27;t use boolean</a>\nalludes to this exponential potential for complexity when using boolean\nvalues.</p>\n<h2>Tests as Consumers</h2>\n<p>Interestingly, the test for an API already act as a consumer and can demonstrate\nthe complexity of an API as it stives to cover all possible branches and use-cases.\nFor our function with 3 boolean inputs, we would need to write 8 tests to cover\nall possible input combinations. A suite of tests that check tons of combinations\nof inputs and outputs is a good indicator that the API is complex.</p>\n<h2>Techniques for Reducing Complexity</h2>\n<p>This is by no means an exhaustive list, but here are some techniques that\ncan help reduce complexity.</p>\n<p>First is to identify if the parameters are truly independent. For example, let&#x27;s take\nthe example:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code>f(x: boolean, y: Data | undefined): boolean\n</code></pre></div>\n<p>If the value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span></span></span></span> is only meaningful when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is true, then we can consider\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span></span></span></span> to be a dependent parameter. If we write out a matrix of possible inputs:</p>\n<ul>\n<li>x: true, y: Data</li>\n<li>x: false, y: Data</li>\n<li>x: true, y: undefined</li>\n<li>x: false, y: undefined</li>\n</ul>\n<p>We can see that the value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span></span></span></span> is only meaningful when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is true.</p>\n<p>When we have dependent parameters, we can consider using the type-system to\nhelp us manage the complexity. For example, we could just simplify the\nfunction to allow only valid inputs:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code>f(x: Data | false): boolean\n</code></pre></div>\n<p>Depending on the values of Data, this simplifies the complexity of the function by\nhalf.</p>\n<p>Another technique is to consider reducing boolean inputs to a single enum-like\ninput type. For example, simplifying 3 boolean parameters into a single\nenum-like parameter:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code>f(x: &#x27;all&#x27;  | &#x27;none&#x27; | &#x27;some&#x27;): boolean\n</code></pre></div>\n<p>This reduces the number of possible input combinations from 8 to 3.</p>\n<h2>Conclusion</h2>\n<p>This is one simple way to measure the complexity of an API, which shows\nthat the bigger the surface area, the more complex the API. The majority\nof this complexity comes from thee combinations of input parameters and\nreturn values. By reducing the number of input parameters and return values,\nwe can reduce the complexity of the API.</p>\n<p>This is by no means the only way to measure the complexity of an API, but\nit is a useful way to think about the complexity of an API in terms of\nthe number of possible input and output combinations.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    annotation: \"annotation\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    math: \"math\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    msub: \"msub\",\n    msup: \"msup\",\n    munder: \"munder\",\n    munderover: \"munderover\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Maintaining growing software is challenging. Poorly architected APIs and\\nincorrect abstractions can significantly impact the ability for engineering\\nteams to deliver new features in a timely manner. If we consider an\\nAPI's complixty as being a significant contributor to its overhead,\\nmaintainability, and ease of use, then it becomes a question of how\\ndo we best measure this complexity so that we can make informed decisions\\nabout how to refactor and improve our APIs.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We will consider an API as an abstract set of functions, each with a\\ndefined set of input parameters and outputs. An API can represent a library,\\nan interface, or a set of functions in a design system.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"An API as a Surface\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A good API minimizes the complexity that a consumer needs to understand\\nin order to use it. If we think o fan  API as an abstract two dimensional\\nsurface, then the complexity of the internals of the API - all the code\\nthat is required to implement the API - is the area of that surface.\\nThe API that is exposed as functions, input parameters, and outputs is\\nthe perimeter of that surface. This follows from the conscept that an\\nAPI should act as a \\\"black box\\\" - the consumer should not need to know\\nhow the API is implemented in order to use it.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"From this metaphor, we can also think of the \\\"best\\\" API as one that\\nminimizes the perimeter of the surface while maximizing the necessary\\narea of the surface.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Complexity of a Surface\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The percieved complexity of an API can be influenced by the number of functions,\\nthe numbner of parameters, and the number of return values.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We will not be considering the internal state of the services that consumers\\nmay need to manage. Instead, we will focus on \\\"idempotent\\\" functions - those\\nthat do not have side effects and do not require any state to be managed.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Abstractly, we can denote the API Surface \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"S\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"S\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.05764em\"\n              },\n              children: \"S\"\n            })]\n          })\n        })]\n      }), \" as a set of functions \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f_i\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), \",\\nwhere the complexity of each function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f_i\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), \" is given by \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"c\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"c(f_i)\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })\n        })]\n      }), \", and the\\noverall complexity of the surface is given by:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"C\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsx(_components.mi, {\n                  children: \"S\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsxs(_components.munderover, {\n                  children: [_jsx(_components.mo, {\n                    children: \"∑\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"i\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mi, {\n                  children: \"c\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"C(S) = \\\\sum_{i=1}^{n} c(f_i)\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.07153em\"\n              },\n              children: \"C\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.05764em\"\n              },\n              children: \"S\"\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.9291em\",\n                verticalAlign: \"-1.2777em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.6514em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-1.8723em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsxs(_components.span, {\n                          className: \"mord mtight\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          }), _jsx(_components.span, {\n                            className: \"mrel mtight\",\n                            children: \"=\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"1\"\n                          })]\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3.05em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop op-symbol large-op\",\n                          children: \"∑\"\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-4.3em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsx(_components.span, {\n                          className: \"mord mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"n\"\n                          })\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.2777em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"where \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"n\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"n\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            })]\n          })\n        })]\n      }), \" is the number of functions in the surface.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As we increase the number of functions in the surface, the complexity of the\\nsurface is also expected to increase.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Complexity of a Function\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The complexity of a function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f_i\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), \" can be influenced by the number of input\\nparameters, their values, and the number of return values.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Take for example a function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"f\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsx(_components.mi, {\n                  children: \"x\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f(x: boolean): boolean\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.10764em\"\n              },\n              children: \"f\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            })]\n          })]\n        })]\n      }), \" that takes a single\\nboolean input and returns a boolean value. The complexity of this function\\nis relatively low - there are only two possible input values and two possible\\noutput values.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If we jump to a function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"f\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsx(_components.mi, {\n                  children: \"x\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), _jsx(_components.mi, {\n                  children: \"y\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), _jsx(_components.mi, {\n                  children: \"z\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f(x: boolean, y: boolean, z: boolean): boolean\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.10764em\"\n              },\n              children: \"f\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.04398em\"\n              },\n              children: \"z\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            })]\n          })]\n        })]\n      }), \"\\nthen the complexity of this function is higher - there are now \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.msup, {\n                  children: [_jsx(_components.mn, {\n                    children: \"2\"\n                  }), _jsx(_components.mn, {\n                    children: \"3\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"8\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"2^3 = 8\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8141em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord\",\n                children: \"2\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsx(_components.span, {\n                  className: \"vlist-t\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.8141em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.063em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"3\"\n                          })\n                        })]\n                      })\n                    })\n                  })\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"8\"\n            })]\n          })]\n        })]\n      }), \"\\npossible input values and two possible output values.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As we increase the number of input parameters, we increase the number\\nof combinations of input values that the function can accept. This\\nincreases the complexity of the function:\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"c\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsxs(_components.munder, {\n                  children: [_jsx(_components.mo, {\n                    children: \"∏\"\n                  }), _jsx(_components.mi, {\n                    children: \"p\"\n                  })]\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"p\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"r\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"c(f_i) = \\\\prod_{p} |p| + |r|\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.4361em\",\n                verticalAlign: \"-1.3861em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.05em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-1.9em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsx(_components.span, {\n                          className: \"mord mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"p\"\n                          })\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3.05em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop op-symbol large-op\",\n                          children: \"∏\"\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.3861em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"p\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"where \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"p\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"p\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"p\"\n            })]\n          })\n        })]\n      }), \" is the set of input parameters, \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"r\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"r\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            })]\n          })\n        })]\n      }), \" is the set of return values,\\nand \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"p\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"|p|\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"p\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            })]\n          })\n        })]\n      }), \" is size of the set of input parameters and \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"r\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"|r|\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            })]\n          })\n        })]\n      }), \" is the size of\\nthe set of return values. By \\\"size\\\" we  mean the number of \\\"meaningful\\\"\\nvalues that a parameter type has. For example, a boolean has two meaningful,\\nbut an integer may have an infinite range of non-meaningful values. In some\\nlanguages, like C, it is common for an integer to have meaningful values\\nof -1 and 0, and non-meaningful values of all other integers. In the case where\\nthe integer is simply a number, we would consider the size of the parameter\\nto be 1, while the size of a C-like integer to be the number of \\\"special\\\" cases\\nthe integer has.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Aaron Luu, in his article \", _jsx(_components.a, {\n        href: \"https://www.luu.io/posts/dont-use-booleans\",\n        children: \"Don't use boolean\"\n      }), \"\\nalludes to this exponential potential for complexity when using boolean\\nvalues.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tests as Consumers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Interestingly, the test for an API already act as a consumer and can demonstrate\\nthe complexity of an API as it stives to cover all possible branches and use-cases.\\nFor our function with 3 boolean inputs, we would need to write 8 tests to cover\\nall possible input combinations. A suite of tests that check tons of combinations\\nof inputs and outputs is a good indicator that the API is complex.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Techniques for Reducing Complexity\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is by no means an exhaustive list, but here are some techniques that\\ncan help reduce complexity.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"First is to identify if the parameters are truly independent. For example, let's take\\nthe example:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(x: boolean, y: Data | undefined): boolean\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the value of \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"y\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"y\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            })]\n          })\n        })]\n      }), \" is only meaningful when \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"x\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"x\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            })]\n          })\n        })]\n      }), \" is true, then we can consider\\n\", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"y\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"y\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            })]\n          })\n        })]\n      }), \" to be a dependent parameter. If we write out a matrix of possible inputs:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"x: true, y: Data\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"x: false, y: Data\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"x: true, y: undefined\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"x: false, y: undefined\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can see that the value of \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"y\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"y\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            })]\n          })\n        })]\n      }), \" is only meaningful when \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"x\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"x\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            })]\n          })\n        })]\n      }), \" is true.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When we have dependent parameters, we can consider using the type-system to\\nhelp us manage the complexity. For example, we could just simplify the\\nfunction to allow only valid inputs:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(x: Data | false): boolean\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Depending on the values of Data, this simplifies the complexity of the function by\\nhalf.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Another technique is to consider reducing boolean inputs to a single enum-like\\ninput type. For example, simplifying 3 boolean parameters into a single\\nenum-like parameter:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(x: 'all'  | 'none' | 'some'): boolean\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This reduces the number of possible input combinations from 8 to 3.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is one simple way to measure the complexity of an API, which shows\\nthat the bigger the surface area, the more complex the API. The majority\\nof this complexity comes from thee combinations of input parameters and\\nreturn values. By reducing the number of input parameters and return values,\\nwe can reduce the complexity of the API.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is by no means the only way to measure the complexity of an API, but\\nit is a useful way to think about the complexity of an API in terms of\\nthe number of possible input and output combinations.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nMaintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI's complixty as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.\n\n","excerptHTML":"<p>Maintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI&#x27;s complixty as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Maintaining growing software is challenging. Poorly architected APIs and\\nincorrect abstractions can significantly impact the ability for engineering\\nteams to deliver new features in a timely manner. If we consider an\\nAPI's complixty as being a significant contributor to its overhead,\\nmaintainability, and ease of use, then it becomes a question of how\\ndo we best measure this complexity so that we can make informed decisions\\nabout how to refactor and improve our APIs.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["programming","apis"]},"previous":{"slug":"2025-03-16-on-the-addition-of-fractions","date":"2025-03-16","title":"On the Addition of Fractions, by Petri Mengoli","frontmatter":{"title":"On the Addition of Fractions, by Petri Mengoli","tags":["mathematics","translation"]},"contentRaw":"\nI was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by [anime characters talking\nabout it](https://www.youtube.com/watch?v=jmtiWGnj5os)).<!--truncate--> I however wanted to\ndive deeper into the context of why Euler wanted to even approach this problem,\nso I investigated the work of Petri Mengoli.\n\nThe publication of his work “On the Addition of Fractions” is available via the\n[Internet Archive in its original Latin](https://archive.org/details/bub_gb_PrKgVx1LcUUC/mode/1up).\nPetri Mengoli’s work focuses on the harmonic series in the preface and shows\nthat it diverges. The harmonic series is written in modern notation as:\n\n$$\n\\sum_{n=1}^{\\infty} \\frac{1}{n} = 1 + \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\ldots\n$$\n\nHis proof relies on finding groupings of fractions that sum greater to one\n(which his paper refers to as “unity”). First, look at the first 3 terms after\n“unity”: $1/2 + 1/3 + 1/4$. When added, we see that when we set common denominators:\n\n$$\n6/12 + 4/12 + 3/12 = 13 / 12 > 1\n$$\n\nAnd in fact, for any three terms:\n\n$$\n\\frac{1}{n - 1} + \\frac{1}{n} + \\frac{1}{n+1} > \\frac{3}{n}\n$$\n\nNext Mengoli shows that there is another group of fractions that adds up to\ngreater than one, and another set of fractions after that set that also adds up\nto one. He demonstrates that for any given number, there is a finite set of\nfractions that can be added to get a value greater than that. Therefore the\nseries must diverge.\n\nHis approach here is inspired by Archimedes’ \"Quadrature of the Parabola\",\nand focuses on using the “method of exhaustion”, rather than manipulating\ninfinite series or dealing with limits.\n\nFrom this work, comes the original quote of what became known as the Basel\nproblem:\n\n> Ab huius fractionum dispositionis contemplatione feliciter\nexpeditus, ad aliam progrediebar dispositionem, in qua\nsingulæ unitates numeris quadratis denominantur.\nHæc speculatio fructus quidem laboris rependit, nondum tamen\neffecta est solvendo, sed ingenii ditioris postulat adminiculum,\nut præcisam dispositionis, quam mihimetipst proposui, summam\nvaleat reportare.\n>\n\nRoughly translating to:\n\n> Having successfully concluded my contemplation of this arrangement\nof fractions, I proceeded to another arrangement, in which\neach unit is denominated by square numbers.\nThis speculation indeed rewards labor with fruit, but it has not\nyet been completed in solving and demands the assistance of\ngreater ingenuity so that the precise sum of the arrangement\nI proposed to myself may be recovered.\n>\n\nThis is the work that perhaps sparked the inspiration for Eulers proof that the\nsum of the reciprocal of the squares adds up to $\\pi^2 /6$ . Euler required much\nmore advanced mathematics and insight in order to come up with this equality, and\nhe revisited the sum in multiple letters with slightly different arguments to\nvalidate his work.\n\nFor a full write up on this, see my self-published work here: [PDF Download](/docs/on-the-addition-of-fractions.pdf).\n","contentHTML":"<p>I was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by <a href=\"https://www.youtube.com/watch?v=jmtiWGnj5os\">anime characters talking\nabout it</a>). I however wanted to\ndive deeper into the context of why Euler wanted to even approach this problem,\nso I investigated the work of Petri Mengoli.</p>\n<p>The publication of his work “On the Addition of Fractions” is available via the\n<a href=\"https://archive.org/details/bub_gb_PrKgVx1LcUUC/mode/1up\">Internet Archive in its original Latin</a>.\nPetri Mengoli’s work focuses on the harmonic series in the preface and shows\nthat it diverges. The harmonic series is written in modern notation as:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant=\"normal\">∞</mi></munderover><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>+</mo><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{n=1}^{\\infty} \\frac{1}{n} = 1 + \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\ldots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9185em;vertical-align:-1.2671em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em\"><span style=\"top:-1.8829em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.123em\"></span><span class=\"minner\">…</span></span></span></span></span>\n<p>His proof relies on finding groupings of fractions that sum greater to one\n(which his paper refers to as “unity”). First, look at the first 3 terms after\n“unity”: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>+</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>3</mn><mo>+</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">1/2 + 1/3 + 1/4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">1/2</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">1/3</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">1/4</span></span></span></span>. When added, we see that when we set common denominators:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>6</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>+</mo><mn>4</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>+</mo><mn>3</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>=</mo><mn>13</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">6/12 + 4/12 + 3/12 = 13 / 12 &gt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">6/12</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">4/12</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">3/12</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">13/12</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">1</span></span></span></span></span>\n<p>And in fact, for any three terms:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>&gt;</mo><mfrac><mn>3</mn><mi>n</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{n - 1} + \\frac{1}{n} + \\frac{1}{n+1} &gt; \\frac{3}{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>Next Mengoli shows that there is another group of fractions that adds up to\ngreater than one, and another set of fractions after that set that also adds up\nto one. He demonstrates that for any given number, there is a finite set of\nfractions that can be added to get a value greater than that. Therefore the\nseries must diverge.</p>\n<p>His approach here is inspired by Archimedes’ &quot;Quadrature of the Parabola&quot;,\nand focuses on using the “method of exhaustion”, rather than manipulating\ninfinite series or dealing with limits.</p>\n<p>From this work, comes the original quote of what became known as the Basel\nproblem:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>Ab huius fractionum dispositionis contemplatione feliciter\nexpeditus, ad aliam progrediebar dispositionem, in qua\nsingulæ unitates numeris quadratis denominantur.\nHæc speculatio fructus quidem laboris rependit, nondum tamen\neffecta est solvendo, sed ingenii ditioris postulat adminiculum,\nut præcisam dispositionis, quam mihimetipst proposui, summam\nvaleat reportare.</p>\n</blockquote>\n<p>Roughly translating to:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>Having successfully concluded my contemplation of this arrangement\nof fractions, I proceeded to another arrangement, in which\neach unit is denominated by square numbers.\nThis speculation indeed rewards labor with fruit, but it has not\nyet been completed in solving and demands the assistance of\ngreater ingenuity so that the precise sum of the arrangement\nI proposed to myself may be recovered.</p>\n</blockquote>\n<p>This is the work that perhaps sparked the inspiration for Eulers proof that the\nsum of the reciprocal of the squares adds up to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>π</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">\\pi^2 /6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/6</span></span></span></span> . Euler required much\nmore advanced mathematics and insight in order to come up with this equality, and\nhe revisited the sum in multiple letters with slightly different arguments to\nvalidate his work.</p>\n<p>For a full write up on this, see my self-published work here: <a href=\"/docs/on-the-addition-of-fractions.pdf\">PDF Download</a>.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    annotation: \"annotation\",\n    blockquote: \"blockquote\",\n    math: \"math\",\n    mfrac: \"mfrac\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    msup: \"msup\",\n    munderover: \"munderover\",\n    p: \"p\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"I was researching the origin of the Basel problem to write a short blog post about\\nhow Euler approached the problem (only to get beaten by \", _jsx(_components.a, {\n        href: \"https://www.youtube.com/watch?v=jmtiWGnj5os\",\n        children: \"anime characters talking\\nabout it\"\n      }), \"). I however wanted to\\ndive deeper into the context of why Euler wanted to even approach this problem,\\nso I investigated the work of Petri Mengoli.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The publication of his work “On the Addition of Fractions” is available via the\\n\", _jsx(_components.a, {\n        href: \"https://archive.org/details/bub_gb_PrKgVx1LcUUC/mode/1up\",\n        children: \"Internet Archive in its original Latin\"\n      }), \".\\nPetri Mengoli’s work focuses on the harmonic series in the preface and shows\\nthat it diverges. The harmonic series is written in modern notation as:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.munderover, {\n                  children: [_jsx(_components.mo, {\n                    children: \"∑\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  }), _jsx(_components.mi, {\n                    mathvariant: \"normal\",\n                    children: \"∞\"\n                  })]\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mn, {\n                    children: \"3\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mn, {\n                    children: \"4\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mo, {\n                  children: \"…\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\sum_{n=1}^{\\\\infty} \\\\frac{1}{n} = 1 + \\\\frac{1}{2} + \\\\frac{1}{3} + \\\\frac{1}{4} + \\\\ldots\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.9185em\",\n                verticalAlign: \"-1.2671em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.6514em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-1.8829em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsxs(_components.span, {\n                          className: \"mord mtight\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mrel mtight\",\n                            children: \"=\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"1\"\n                          })]\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3.05em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop op-symbol large-op\",\n                          children: \"∑\"\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-4.3em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsx(_components.span, {\n                          className: \"mord mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"∞\"\n                          })\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.2671em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.7278em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"3\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"4\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.123em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"minner\",\n              children: \"…\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"His proof relies on finding groupings of fractions that sum greater to one\\n(which his paper refers to as “unity”). First, look at the first 3 terms after\\n“unity”: \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"2\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"3\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"4\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"1/2 + 1/3 + 1/4\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1/2\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1/3\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1/4\"\n            })]\n          })]\n        })]\n      }), \". When added, we see that when we set common denominators:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mn, {\n                  children: \"6\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"4\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"3\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"13\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"6/12 + 4/12 + 3/12 = 13 / 12 > 1\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"6/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"4/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"3/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"13/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And in fact, for any three terms:\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"3\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{1}{n - 1} + \\\\frac{1}{n} + \\\\frac{1}{n+1} > \\\\frac{3}{n}\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"3\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next Mengoli shows that there is another group of fractions that adds up to\\ngreater than one, and another set of fractions after that set that also adds up\\nto one. He demonstrates that for any given number, there is a finite set of\\nfractions that can be added to get a value greater than that. Therefore the\\nseries must diverge.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"His approach here is inspired by Archimedes’ \\\"Quadrature of the Parabola\\\",\\nand focuses on using the “method of exhaustion”, rather than manipulating\\ninfinite series or dealing with limits.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"From this work, comes the original quote of what became known as the Basel\\nproblem:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Ab huius fractionum dispositionis contemplatione feliciter\\nexpeditus, ad aliam progrediebar dispositionem, in qua\\nsingulæ unitates numeris quadratis denominantur.\\nHæc speculatio fructus quidem laboris rependit, nondum tamen\\neffecta est solvendo, sed ingenii ditioris postulat adminiculum,\\nut præcisam dispositionis, quam mihimetipst proposui, summam\\nvaleat reportare.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Roughly translating to:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Having successfully concluded my contemplation of this arrangement\\nof fractions, I proceeded to another arrangement, in which\\neach unit is denominated by square numbers.\\nThis speculation indeed rewards labor with fruit, but it has not\\nyet been completed in solving and demands the assistance of\\ngreater ingenuity so that the precise sum of the arrangement\\nI proposed to myself may be recovered.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is the work that perhaps sparked the inspiration for Eulers proof that the\\nsum of the reciprocal of the squares adds up to \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.msup, {\n                  children: [_jsx(_components.mi, {\n                    children: \"π\"\n                  }), _jsx(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"6\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\pi^2 /6\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1.0641em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.03588em\"\n                },\n                children: \"π\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsx(_components.span, {\n                  className: \"vlist-t\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.8141em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.063em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"2\"\n                          })\n                        })]\n                      })\n                    })\n                  })\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"/6\"\n            })]\n          })\n        })]\n      }), \" . Euler required much\\nmore advanced mathematics and insight in order to come up with this equality, and\\nhe revisited the sum in multiple letters with slightly different arguments to\\nvalidate his work.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For a full write up on this, see my self-published work here: \", _jsx(_components.a, {\n        href: \"/docs/on-the-addition-of-fractions.pdf\",\n        children: \"PDF Download\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nI was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by [anime characters talking\nabout it](https://www.youtube.com/watch?v=jmtiWGnj5os)).","excerptHTML":"<p>I was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by <a href=\"https://www.youtube.com/watch?v=jmtiWGnj5os\">anime characters talking\nabout it</a>).</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"I was researching the origin of the Basel problem to write a short blog post about\\nhow Euler approached the problem (only to get beaten by \", _jsx(_components.a, {\n      href: \"https://www.youtube.com/watch?v=jmtiWGnj5os\",\n      children: \"anime characters talking\\nabout it\"\n    }), \").\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["mathematics","translation"]},"next":{"slug":"2023-12-08-the-breaking-point","date":"2023-12-08","title":"The Breaking Point - Understanding the performance of your systems","frontmatter":{"title":"The Breaking Point - Understanding the performance of your systems","tags":["architecture","scaling"]},"contentRaw":"\nEvery system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn’t magically infinite. It’s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.\n\n![The Breaking Point](/media/2023-12-08-the-breaking-point/splash.png)\n\n## The Myth of Scaling\n\nSoftware engineering often has an optimistic mindset that scaling a service is easy: we just let the more instances of the service be deployed, and viola, perfect scaling! But the reality is a bit more complex. Instances don't always fire up instantly, services can fail unexpectedly, and not every component can scale indefinitely.\n\nThat’s why it’s important to understand the limitations of our services. Knowing where the system might buckle under pressure allows us to devise strategies to prevent these breaking points from turning into disasters.\n\nFor example, we may have a public API service with set auto-scaling rules. When the service is hit with many requests, the service spawns additional instances to handle the workload. This ends up working well in most cases, but in the real-world, the service ends up getting hit with huge bursts of requests from downstream users, rather than a steady increase of traffic. When this happens, we scale the service instances up, but now the database gets hit with too many writes and fails over, since the database was originally designed as a read heavy use-case. Of course this is a contrived example, but similar edge-cases commonly appear in complex architectures.\n\nWithout understanding the full system and the constraints of each part, it can be difficult to successfully scale.\n\n## Understanding Server Limitations\n\nA good starting point for finding your system’s breaking point is to see how it fares on a single machine. Profile the memory usage when under load, and use load testing to determine how many simultaneous requests the service can handle before performance degrades. To make sense of it all, set some benchmarks:\n\n1. Determine what it means for performance to degrade. In some systems, you may have SLAs for some percentage of requests to complete within a given response time. Other systems may have more leniency.\n2. Use readily available tools to bombard your service with requests and observe the results. For web API services, there are plenty of open source tools that can sustain issuing millions of requests a second and reporting results.\n3. Run the tests multiple times and throw out any outliers in the results. From the rest, understand the peak memory usage, peak disk usage, and peak CPU usage of the service.\n\nOnce you have the information from these types of load tests, it becomes easy to identify indicators that a service will begin to degrade. For some services it is CPU usage that will increase more than the other resources. For some services, memory can get exhausted first.\n\nThe load testing will also be a good indicator of how many requests a single instance of your service can handle before falling over.\n\n## Scaling Strategies\n\nWhen dealing with monolithic services or hefty microservices, you may find from load testing that just vertically scaling the service by adding more hardware is more cost efficient than replicating the instance.\n\nFore smaller service that use less memory and CPU footprint, it may make more sense to horizontally scale the service with many additional smaller servers being deployed.\n\nCloud services like AWS, Azure, and GCP help enable either decision. With AWS, there are many different instance types to get the right size for your specific service deployment. With the right size picked out, auto-scaling becomes a more budget-friendly option, as you're only spinning up instances that meet your specific resource requirements.\n\nCloud providers additionally have ways to detect when to auto-scale an instance based on resource usage, making load testing very informative to tune these values.\n\n## Conclusion\n\nScaling isn’t a one-size-fits-all solution. It’s about understanding the unique limitations and potential of your system. Through careful analysis, load testing, and a bit of strategic thinking, you can develop a scaling strategy that not only meets your performance needs but also keeps an eye on the cost of your system. Whether it’s beefing up your hardware or multiplying smaller instances, the key lies in making informed, tailored decisions for your system's specific demands and quirks.\n","contentHTML":"<p>Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn’t magically infinite. It’s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.</p>\n<p><img alt=\"The Breaking Point\" src=\"/media/2023-12-08-the-breaking-point/splash.png\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<h2>The Myth of Scaling</h2>\n<p>Software engineering often has an optimistic mindset that scaling a service is easy: we just let the more instances of the service be deployed, and viola, perfect scaling! But the reality is a bit more complex. Instances don&#x27;t always fire up instantly, services can fail unexpectedly, and not every component can scale indefinitely.</p>\n<p>That’s why it’s important to understand the limitations of our services. Knowing where the system might buckle under pressure allows us to devise strategies to prevent these breaking points from turning into disasters.</p>\n<p>For example, we may have a public API service with set auto-scaling rules. When the service is hit with many requests, the service spawns additional instances to handle the workload. This ends up working well in most cases, but in the real-world, the service ends up getting hit with huge bursts of requests from downstream users, rather than a steady increase of traffic. When this happens, we scale the service instances up, but now the database gets hit with too many writes and fails over, since the database was originally designed as a read heavy use-case. Of course this is a contrived example, but similar edge-cases commonly appear in complex architectures.</p>\n<p>Without understanding the full system and the constraints of each part, it can be difficult to successfully scale.</p>\n<h2>Understanding Server Limitations</h2>\n<p>A good starting point for finding your system’s breaking point is to see how it fares on a single machine. Profile the memory usage when under load, and use load testing to determine how many simultaneous requests the service can handle before performance degrades. To make sense of it all, set some benchmarks:</p>\n<ol>\n<li>Determine what it means for performance to degrade. In some systems, you may have SLAs for some percentage of requests to complete within a given response time. Other systems may have more leniency.</li>\n<li>Use readily available tools to bombard your service with requests and observe the results. For web API services, there are plenty of open source tools that can sustain issuing millions of requests a second and reporting results.</li>\n<li>Run the tests multiple times and throw out any outliers in the results. From the rest, understand the peak memory usage, peak disk usage, and peak CPU usage of the service.</li>\n</ol>\n<p>Once you have the information from these types of load tests, it becomes easy to identify indicators that a service will begin to degrade. For some services it is CPU usage that will increase more than the other resources. For some services, memory can get exhausted first.</p>\n<p>The load testing will also be a good indicator of how many requests a single instance of your service can handle before falling over.</p>\n<h2>Scaling Strategies</h2>\n<p>When dealing with monolithic services or hefty microservices, you may find from load testing that just vertically scaling the service by adding more hardware is more cost efficient than replicating the instance.</p>\n<p>Fore smaller service that use less memory and CPU footprint, it may make more sense to horizontally scale the service with many additional smaller servers being deployed.</p>\n<p>Cloud services like AWS, Azure, and GCP help enable either decision. With AWS, there are many different instance types to get the right size for your specific service deployment. With the right size picked out, auto-scaling becomes a more budget-friendly option, as you&#x27;re only spinning up instances that meet your specific resource requirements.</p>\n<p>Cloud providers additionally have ways to detect when to auto-scale an instance based on resource usage, making load testing very informative to tune these values.</p>\n<h2>Conclusion</h2>\n<p>Scaling isn’t a one-size-fits-all solution. It’s about understanding the unique limitations and potential of your system. Through careful analysis, load testing, and a bit of strategic thinking, you can develop a scaling strategy that not only meets your performance needs but also keeps an eye on the cost of your system. Whether it’s beefing up your hardware or multiplying smaller instances, the key lies in making informed, tailored decisions for your system&#x27;s specific demands and quirks.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h2: \"h2\",\n    img: \"img\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn’t magically infinite. It’s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2023-12-08-the-breaking-point/splash.png\",\n        alt: \"The Breaking Point\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Myth of Scaling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Software engineering often has an optimistic mindset that scaling a service is easy: we just let the more instances of the service be deployed, and viola, perfect scaling! But the reality is a bit more complex. Instances don't always fire up instantly, services can fail unexpectedly, and not every component can scale indefinitely.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"That’s why it’s important to understand the limitations of our services. Knowing where the system might buckle under pressure allows us to devise strategies to prevent these breaking points from turning into disasters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example, we may have a public API service with set auto-scaling rules. When the service is hit with many requests, the service spawns additional instances to handle the workload. This ends up working well in most cases, but in the real-world, the service ends up getting hit with huge bursts of requests from downstream users, rather than a steady increase of traffic. When this happens, we scale the service instances up, but now the database gets hit with too many writes and fails over, since the database was originally designed as a read heavy use-case. Of course this is a contrived example, but similar edge-cases commonly appear in complex architectures.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Without understanding the full system and the constraints of each part, it can be difficult to successfully scale.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Understanding Server Limitations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A good starting point for finding your system’s breaking point is to see how it fares on a single machine. Profile the memory usage when under load, and use load testing to determine how many simultaneous requests the service can handle before performance degrades. To make sense of it all, set some benchmarks:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Determine what it means for performance to degrade. In some systems, you may have SLAs for some percentage of requests to complete within a given response time. Other systems may have more leniency.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use readily available tools to bombard your service with requests and observe the results. For web API services, there are plenty of open source tools that can sustain issuing millions of requests a second and reporting results.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Run the tests multiple times and throw out any outliers in the results. From the rest, understand the peak memory usage, peak disk usage, and peak CPU usage of the service.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once you have the information from these types of load tests, it becomes easy to identify indicators that a service will begin to degrade. For some services it is CPU usage that will increase more than the other resources. For some services, memory can get exhausted first.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The load testing will also be a good indicator of how many requests a single instance of your service can handle before falling over.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Scaling Strategies\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When dealing with monolithic services or hefty microservices, you may find from load testing that just vertically scaling the service by adding more hardware is more cost efficient than replicating the instance.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Fore smaller service that use less memory and CPU footprint, it may make more sense to horizontally scale the service with many additional smaller servers being deployed.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cloud services like AWS, Azure, and GCP help enable either decision. With AWS, there are many different instance types to get the right size for your specific service deployment. With the right size picked out, auto-scaling becomes a more budget-friendly option, as you're only spinning up instances that meet your specific resource requirements.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cloud providers additionally have ways to detect when to auto-scale an instance based on resource usage, making load testing very informative to tune these values.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Scaling isn’t a one-size-fits-all solution. It’s about understanding the unique limitations and potential of your system. Through careful analysis, load testing, and a bit of strategic thinking, you can develop a scaling strategy that not only meets your performance needs but also keeps an eye on the cost of your system. Whether it’s beefing up your hardware or multiplying smaller instances, the key lies in making informed, tailored decisions for your system's specific demands and quirks.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nEvery system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn’t magically infinite. It’s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.","excerptHTML":"<p>Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn’t magically infinite. It’s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn’t magically infinite. It’s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["architecture","scaling"]}},"__N_SSG":true}