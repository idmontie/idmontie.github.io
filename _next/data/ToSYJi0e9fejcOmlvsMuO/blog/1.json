{"pageProps":{"posts":[{"slug":"2025-06-16-gpus-best-buy-queues","date":"2025-06-16","title":"GPUs and Best Buy Queues","frontmatter":{"title":"GPUs and Best Buy Queues","tags":["technology","gpus"]},"contentRaw":"\nAt the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.\n\n<!--tuncate-->\n\nSince the supply was low and demand was high, this created two types of markets: one was the second hand market for GPUs where an \\$800 GPU could go for \\$3500 in cash when sold to someone mining cryptocurrency. Because of the massive mark up, buying and selling software to automate the process of buying GPUs when they \"dropped\" on a site was also growing as a market. These were called \"bots\" in the community, where customers trying to get a single GPU for their gaming PC were competing against hundreds of not thousands of bots flooding websites when they dropped. Common sites like Nvidia, AMD, Best Buy, and Zotac would get flooded with millions of requests when they added GPU stock the site.\n\nTo combat this, different market places tried different techniques to verify that humans were the ones trying to access the site. But due to time constraints, these never seemed to be properly implemented.\n\nZotac added a Cloudflare verification to their site that would try to verify that a user was real. The setting they used though attempted to not disrupt real users, but only issue a challenge to visitors it deemed \"bots\". A puppeteer script could easily bypass this by first visiting other sites that used cloud flare (but didn't issue challenges) and then visiting the Zotac site. A fresh puppeteer instance would be issued a challenge, but one that visited other sites before would not.\n\nThere were other tricks people used to help them attempt to secure GPUs. My favorite was adding a Zotac TShirt to your cart before a drop so that you could input all of your shipping and payment information. Then when a drop was detected, you'd simply issue the add to cart API call, and then the checkout API call. This would bypass the checkout walkthrough. When the website was flooded with millions of API calls, you only needed two API calls to succeed, rather than 10 or more.\n\n![Do something zotac](/media/2025-06-16-gpus-best-buy-queues/do-something.jpg)\n\nAutomating this way worked so well that a puppeteer script that I wrote was able to add 4 GPUs to one cart, send me a Pushbullet notification to wake me up in the middle of the night, and I just had to click one last step to verify the checkout manually since I didn't trust a script with actually making card payments on my behalf.\n\nZotac did finally learn from this and finally upped the Cloudflare bot check to issue a challenge to all users during the rest of the 30 series release. They also released a new site that made it harder to track when GPU stock was released.\n\nBest Buy must have had many complaints about the terrible system they had. Any GPU stock they had would almost immediately be gone by the time s human would show up to try to purchase one. At the time, they had a graphql-like API that allowed anyone to request with any frequency the in-stock status of any number of skus on their system. If you used puppeteer to visit the site, grab the cookies, and then issue an API request to this API, you could consistently check the status of all GPU skus every 5 or so seconds for the entire day. No rate limits, no other form of authentication other than public cookies.\n\nSo that explained how bots were able to detect GPUs so quickly and with no form of bot checking or challenge system, once the GPU was in someone's cart, it was very easy to checkout since the Best Buy site would continue to work even when flooded with requests.\n\nTo mitigate this, some poor group of developers was tasked with creating a queue system. I'm guessing the time crunch was real because when I went to investigate how this queue worked, it was entirely determined by the user cookie that was issued.\n\nHere's how the queue worked for the end user: the user would get a notification from their favorite discord server that there was a drop (since the graphql-like endpoint was still available). They would go to the page for the GPU they wanted to purchase and click \"add to cart\". The button would then change to a \"waiting in queue\" message and be disabled. There was no indication how long that queue would be. Then after some time, the button would change back to \"add to cart\". The user clicks it, and if there was still stock, the GPU would be added to cart. Then the user needed to quickly checkout before the stock ran out.\n\nI was really curious on the part where there was no indication of how long the queue was. When testing using a 5950 AMD CPU that still had stock, but had the queue system enabled, I determined that the wait time was effectively random. It didn't matter if you were the first one to click that button, it would just assign a random queue time to you before you could cart the item.\n\nI ran more tests. I recorded a small sample of wait times and they would vary from a minute to over an hour.\n\nI decided to investigate what code determined when the button changed back to \"add to cart\". No API calls were made while waiting in queue. Huh okay so the browser code already knows how long the queue time is.\n\nThe UI code on the Best Buy site is not just minified, but also mangled. This process will replace function names, introduce additional function calls to obfuscate what functions are doing, and generally makes it very difficult to debug. After tracing back what changed the button and the call stack, I was able to finally piece together how the queue time was determined.\n\nWhen a user visited the best buy site, they were issued a public cookie. It looked like a special UUID. The middle section of the UUID must have some special properties to meet some hash check value from what I could tell. The point is that I must have had some guaranteed randomness to it that gave the developers the idea to reuse this section to deterministically evaluate a queue time on both the browser and the server.\n\nI created a browser extension to test the hypothesis:\n\n1. Show the queue time for the current cookie on the page by injecting some HTML.\n2. Add a button to \"roll for a better queue time\". This would issue a request to get 20 new cookies, figure out which queue time was best, set the browser cookie to that cookies and display the new queue time.\n\nI tested with the 5950 CPU and saw my queue time go from 30 minutes to 1 minute. Success!\n\n![Queue times](/media/2025-06-16-gpus-best-buy-queues/queue-times.png)\n\nI had a close group of friends that I rolled this out to. The next Best Buy drop happened and we were all able to get the founders edition cards. Finally!\n\nThere was a popular bot net that effectively did the same thing. I don't know if they knew how to calculate the queue times, but they would spin up 20+ browsers with the best buy site and wait for the first one to have the add to cart button, and then give the purchaser of the bot net subscription the cookies for that session.\n\nTimes were dire and I thought this approach from best buy was garbage. It effectively made individuals - who might have stood a chance before - now have to wait some random amount of time against those with those who had hundreds of bots trying to get a good queue time.\n\nConveniently someone reached out to me to commission a chrome extension related to getting GPUs. They wanted to know what was possible and I told them I figured out the queue system times, and how an average person could get a better queue time. We released a branded version of my extension and some 10,000 people downloaded it.\n\nAnd then I waited for the next Best Buy drop.\n\n![A rare occurrence](/media/2025-06-16-gpus-best-buy-queues/a-rare-occurence.png)\n\nThe alert went out that there was stock.\n\n![extension](/media/2025-06-16-gpus-best-buy-queues/extension.png)\n\nAnd the website crashed 20 seconds into the drop.\n\nI was actually surprised since their site had done so well before. But I guess people rolling for new cookies 20 times in a second was enough to bring the site down momentarily.\n\nAfter that drop, Best Buy held off on GPU drops for over a month. When the next drop finally happened, they had changed the queue system slightly. The cookie was no longer the source for the queue time, and rolling for a new cookie did not give you a new queue time. Finally.\n\nYour queue position was still effectively random, but at least it could no longer be gamed by requesting new sessions. Nor could you know your queue time even if you did ask for new sessions.\n\nProps to Best Buy for continuing to experience with this too. Pokemon cards are the new drops and they force people to use the mobile app now to request a time in queue.\n","contentHTML":"<p>At the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.</p>\n<p>Since the supply was low and demand was high, this created two types of markets: one was the second hand market for GPUs where an $800 GPU could go for $3500 in cash when sold to someone mining cryptocurrency. Because of the massive mark up, buying and selling software to automate the process of buying GPUs when they &quot;dropped&quot; on a site was also growing as a market. These were called &quot;bots&quot; in the community, where customers trying to get a single GPU for their gaming PC were competing against hundreds of not thousands of bots flooding websites when they dropped. Common sites like Nvidia, AMD, Best Buy, and Zotac would get flooded with millions of requests when they added GPU stock the site.</p>\n<p>To combat this, different market places tried different techniques to verify that humans were the ones trying to access the site. But due to time constraints, these never seemed to be properly implemented.</p>\n<p>Zotac added a Cloudflare verification to their site that would try to verify that a user was real. The setting they used though attempted to not disrupt real users, but only issue a challenge to visitors it deemed &quot;bots&quot;. A puppeteer script could easily bypass this by first visiting other sites that used cloud flare (but didn&#x27;t issue challenges) and then visiting the Zotac site. A fresh puppeteer instance would be issued a challenge, but one that visited other sites before would not.</p>\n<p>There were other tricks people used to help them attempt to secure GPUs. My favorite was adding a Zotac TShirt to your cart before a drop so that you could input all of your shipping and payment information. Then when a drop was detected, you&#x27;d simply issue the add to cart API call, and then the checkout API call. This would bypass the checkout walkthrough. When the website was flooded with millions of API calls, you only needed two API calls to succeed, rather than 10 or more.</p>\n<p><img alt=\"Do something zotac\" src=\"/media/2025-06-16-gpus-best-buy-queues/do-something.jpg\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>Automating this way worked so well that a puppeteer script that I wrote was able to add 4 GPUs to one cart, send me a Pushbullet notification to wake me up in the middle of the night, and I just had to click one last step to verify the checkout manually since I didn&#x27;t trust a script with actually making card payments on my behalf.</p>\n<p>Zotac did finally learn from this and finally upped the Cloudflare bot check to issue a challenge to all users during the rest of the 30 series release. They also released a new site that made it harder to track when GPU stock was released.</p>\n<p>Best Buy must have had many complaints about the terrible system they had. Any GPU stock they had would almost immediately be gone by the time s human would show up to try to purchase one. At the time, they had a graphql-like API that allowed anyone to request with any frequency the in-stock status of any number of skus on their system. If you used puppeteer to visit the site, grab the cookies, and then issue an API request to this API, you could consistently check the status of all GPU skus every 5 or so seconds for the entire day. No rate limits, no other form of authentication other than public cookies.</p>\n<p>So that explained how bots were able to detect GPUs so quickly and with no form of bot checking or challenge system, once the GPU was in someone&#x27;s cart, it was very easy to checkout since the Best Buy site would continue to work even when flooded with requests.</p>\n<p>To mitigate this, some poor group of developers was tasked with creating a queue system. I&#x27;m guessing the time crunch was real because when I went to investigate how this queue worked, it was entirely determined by the user cookie that was issued.</p>\n<p>Here&#x27;s how the queue worked for the end user: the user would get a notification from their favorite discord server that there was a drop (since the graphql-like endpoint was still available). They would go to the page for the GPU they wanted to purchase and click &quot;add to cart&quot;. The button would then change to a &quot;waiting in queue&quot; message and be disabled. There was no indication how long that queue would be. Then after some time, the button would change back to &quot;add to cart&quot;. The user clicks it, and if there was still stock, the GPU would be added to cart. Then the user needed to quickly checkout before the stock ran out.</p>\n<p>I was really curious on the part where there was no indication of how long the queue was. When testing using a 5950 AMD CPU that still had stock, but had the queue system enabled, I determined that the wait time was effectively random. It didn&#x27;t matter if you were the first one to click that button, it would just assign a random queue time to you before you could cart the item.</p>\n<p>I ran more tests. I recorded a small sample of wait times and they would vary from a minute to over an hour.</p>\n<p>I decided to investigate what code determined when the button changed back to &quot;add to cart&quot;. No API calls were made while waiting in queue. Huh okay so the browser code already knows how long the queue time is.</p>\n<p>The UI code on the Best Buy site is not just minified, but also mangled. This process will replace function names, introduce additional function calls to obfuscate what functions are doing, and generally makes it very difficult to debug. After tracing back what changed the button and the call stack, I was able to finally piece together how the queue time was determined.</p>\n<p>When a user visited the best buy site, they were issued a public cookie. It looked like a special UUID. The middle section of the UUID must have some special properties to meet some hash check value from what I could tell. The point is that I must have had some guaranteed randomness to it that gave the developers the idea to reuse this section to deterministically evaluate a queue time on both the browser and the server.</p>\n<p>I created a browser extension to test the hypothesis:</p>\n<ol>\n<li>Show the queue time for the current cookie on the page by injecting some HTML.</li>\n<li>Add a button to &quot;roll for a better queue time&quot;. This would issue a request to get 20 new cookies, figure out which queue time was best, set the browser cookie to that cookies and display the new queue time.</li>\n</ol>\n<p>I tested with the 5950 CPU and saw my queue time go from 30 minutes to 1 minute. Success!</p>\n<p><img alt=\"Queue times\" src=\"/media/2025-06-16-gpus-best-buy-queues/queue-times.png\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>I had a close group of friends that I rolled this out to. The next Best Buy drop happened and we were all able to get the founders edition cards. Finally!</p>\n<p>There was a popular bot net that effectively did the same thing. I don&#x27;t know if they knew how to calculate the queue times, but they would spin up 20+ browsers with the best buy site and wait for the first one to have the add to cart button, and then give the purchaser of the bot net subscription the cookies for that session.</p>\n<p>Times were dire and I thought this approach from best buy was garbage. It effectively made individuals - who might have stood a chance before - now have to wait some random amount of time against those with those who had hundreds of bots trying to get a good queue time.</p>\n<p>Conveniently someone reached out to me to commission a chrome extension related to getting GPUs. They wanted to know what was possible and I told them I figured out the queue system times, and how an average person could get a better queue time. We released a branded version of my extension and some 10,000 people downloaded it.</p>\n<p>And then I waited for the next Best Buy drop.</p>\n<p><img alt=\"A rare occurrence\" src=\"/media/2025-06-16-gpus-best-buy-queues/a-rare-occurence.png\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>The alert went out that there was stock.</p>\n<p><img alt=\"extension\" src=\"/media/2025-06-16-gpus-best-buy-queues/extension.png\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>And the website crashed 20 seconds into the drop.</p>\n<p>I was actually surprised since their site had done so well before. But I guess people rolling for new cookies 20 times in a second was enough to bring the site down momentarily.</p>\n<p>After that drop, Best Buy held off on GPU drops for over a month. When the next drop finally happened, they had changed the queue system slightly. The cookie was no longer the source for the queue time, and rolling for a new cookie did not give you a new queue time. Finally.</p>\n<p>Your queue position was still effectively random, but at least it could no longer be gamed by requesting new sessions. Nor could you know your queue time even if you did ask for new sessions.</p>\n<p>Props to Best Buy for continuing to experience with this too. Pokemon cards are the new drops and they force people to use the mobile app now to request a time in queue.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    img: \"img\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"At the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since the supply was low and demand was high, this created two types of markets: one was the second hand market for GPUs where an $800 GPU could go for $3500 in cash when sold to someone mining cryptocurrency. Because of the massive mark up, buying and selling software to automate the process of buying GPUs when they \\\"dropped\\\" on a site was also growing as a market. These were called \\\"bots\\\" in the community, where customers trying to get a single GPU for their gaming PC were competing against hundreds of not thousands of bots flooding websites when they dropped. Common sites like Nvidia, AMD, Best Buy, and Zotac would get flooded with millions of requests when they added GPU stock the site.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To combat this, different market places tried different techniques to verify that humans were the ones trying to access the site. But due to time constraints, these never seemed to be properly implemented.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Zotac added a Cloudflare verification to their site that would try to verify that a user was real. The setting they used though attempted to not disrupt real users, but only issue a challenge to visitors it deemed \\\"bots\\\". A puppeteer script could easily bypass this by first visiting other sites that used cloud flare (but didn't issue challenges) and then visiting the Zotac site. A fresh puppeteer instance would be issued a challenge, but one that visited other sites before would not.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There were other tricks people used to help them attempt to secure GPUs. My favorite was adding a Zotac TShirt to your cart before a drop so that you could input all of your shipping and payment information. Then when a drop was detected, you'd simply issue the add to cart API call, and then the checkout API call. This would bypass the checkout walkthrough. When the website was flooded with millions of API calls, you only needed two API calls to succeed, rather than 10 or more.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2025-06-16-gpus-best-buy-queues/do-something.jpg\",\n        alt: \"Do something zotac\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Automating this way worked so well that a puppeteer script that I wrote was able to add 4 GPUs to one cart, send me a Pushbullet notification to wake me up in the middle of the night, and I just had to click one last step to verify the checkout manually since I didn't trust a script with actually making card payments on my behalf.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Zotac did finally learn from this and finally upped the Cloudflare bot check to issue a challenge to all users during the rest of the 30 series release. They also released a new site that made it harder to track when GPU stock was released.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Best Buy must have had many complaints about the terrible system they had. Any GPU stock they had would almost immediately be gone by the time s human would show up to try to purchase one. At the time, they had a graphql-like API that allowed anyone to request with any frequency the in-stock status of any number of skus on their system. If you used puppeteer to visit the site, grab the cookies, and then issue an API request to this API, you could consistently check the status of all GPU skus every 5 or so seconds for the entire day. No rate limits, no other form of authentication other than public cookies.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So that explained how bots were able to detect GPUs so quickly and with no form of bot checking or challenge system, once the GPU was in someone's cart, it was very easy to checkout since the Best Buy site would continue to work even when flooded with requests.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To mitigate this, some poor group of developers was tasked with creating a queue system. I'm guessing the time crunch was real because when I went to investigate how this queue worked, it was entirely determined by the user cookie that was issued.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's how the queue worked for the end user: the user would get a notification from their favorite discord server that there was a drop (since the graphql-like endpoint was still available). They would go to the page for the GPU they wanted to purchase and click \\\"add to cart\\\". The button would then change to a \\\"waiting in queue\\\" message and be disabled. There was no indication how long that queue would be. Then after some time, the button would change back to \\\"add to cart\\\". The user clicks it, and if there was still stock, the GPU would be added to cart. Then the user needed to quickly checkout before the stock ran out.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I was really curious on the part where there was no indication of how long the queue was. When testing using a 5950 AMD CPU that still had stock, but had the queue system enabled, I determined that the wait time was effectively random. It didn't matter if you were the first one to click that button, it would just assign a random queue time to you before you could cart the item.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I ran more tests. I recorded a small sample of wait times and they would vary from a minute to over an hour.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I decided to investigate what code determined when the button changed back to \\\"add to cart\\\". No API calls were made while waiting in queue. Huh okay so the browser code already knows how long the queue time is.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The UI code on the Best Buy site is not just minified, but also mangled. This process will replace function names, introduce additional function calls to obfuscate what functions are doing, and generally makes it very difficult to debug. After tracing back what changed the button and the call stack, I was able to finally piece together how the queue time was determined.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When a user visited the best buy site, they were issued a public cookie. It looked like a special UUID. The middle section of the UUID must have some special properties to meet some hash check value from what I could tell. The point is that I must have had some guaranteed randomness to it that gave the developers the idea to reuse this section to deterministically evaluate a queue time on both the browser and the server.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I created a browser extension to test the hypothesis:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Show the queue time for the current cookie on the page by injecting some HTML.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Add a button to \\\"roll for a better queue time\\\". This would issue a request to get 20 new cookies, figure out which queue time was best, set the browser cookie to that cookies and display the new queue time.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I tested with the 5950 CPU and saw my queue time go from 30 minutes to 1 minute. Success!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2025-06-16-gpus-best-buy-queues/queue-times.png\",\n        alt: \"Queue times\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I had a close group of friends that I rolled this out to. The next Best Buy drop happened and we were all able to get the founders edition cards. Finally!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There was a popular bot net that effectively did the same thing. I don't know if they knew how to calculate the queue times, but they would spin up 20+ browsers with the best buy site and wait for the first one to have the add to cart button, and then give the purchaser of the bot net subscription the cookies for that session.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Times were dire and I thought this approach from best buy was garbage. It effectively made individuals - who might have stood a chance before - now have to wait some random amount of time against those with those who had hundreds of bots trying to get a good queue time.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Conveniently someone reached out to me to commission a chrome extension related to getting GPUs. They wanted to know what was possible and I told them I figured out the queue system times, and how an average person could get a better queue time. We released a branded version of my extension and some 10,000 people downloaded it.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And then I waited for the next Best Buy drop.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2025-06-16-gpus-best-buy-queues/a-rare-occurence.png\",\n        alt: \"A rare occurrence\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The alert went out that there was stock.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2025-06-16-gpus-best-buy-queues/extension.png\",\n        alt: \"extension\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And the website crashed 20 seconds into the drop.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I was actually surprised since their site had done so well before. But I guess people rolling for new cookies 20 times in a second was enough to bring the site down momentarily.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After that drop, Best Buy held off on GPU drops for over a month. When the next drop finally happened, they had changed the queue system slightly. The cookie was no longer the source for the queue time, and rolling for a new cookie did not give you a new queue time. Finally.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Your queue position was still effectively random, but at least it could no longer be gamed by requesting new sessions. Nor could you know your queue time even if you did ask for new sessions.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Props to Best Buy for continuing to experience with this too. Pokemon cards are the new drops and they force people to use the mobile app now to request a time in queue.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nAt the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.","excerptHTML":"<p>At the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"At the height of the GPU craze, around 2021, when everyone was holed up in their homes due to COVID, the 30 series of Nvidia GPUs was extremely difficult to purchase. The scarcity was due to a few factors: the COVID pandemic had disrupted supply chains across the world, Taiwan was experiencing a severe drought that was impacting chip production, and cryptocurrency, especially ETH, was gaining value, making mining it was the latest GPU series incredibly lucrative.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["technology","gpus"]},{"slug":"2025-06-15-mengoli-fractions","date":"2025-06-15","title":"Petri Mengoli Fraction Inequality","frontmatter":{"title":"Petri Mengoli Fraction Inequality","tags":["mathematics","translation"]},"contentRaw":"\nIn my previous post, [\"On the Addition of Fractions, by Petri Mengoli\"](/blog/post/2025-03-16-on-the-addition-of-fractions), I\nwrote that the following inequality holds, with no proof<!--truncate-->:\n\n$$\n\\frac{1}{1-n} + \\frac{1}{n} + \\frac{1}{n + 1} > \\frac{3}{n}\n$$\n\nIf we don't assume a specific value for the numerator of the right hand side of the\ninequality, we can derive the inequality by starting with\n\n$$\n\\frac{1}{1-n} + \\frac{1}{n} + \\frac{1}{n + 1} > \\frac{a}{n}.\n$$\n\nMultiply through by $n$:\n\n$$\n\\frac{n}{1-n} + \\frac{b}{n + 1} + 1 > a.\n$$\n\nSet a common denominator for the left hand side:\n\n$$\n\\frac{n(n+1) + n(n-1)}{(n-1)(n+1)} > a - 1\n$$\n\nExpanding the expression\n\n$$\n\\frac{n^2 + n + n^2 - n}{n^2 - 1} > a - 1\n$$\n\nAnd simplifying\n\n$$\n\\frac{2n^2}{n^2 - 1} > a - 1\n$$\n\nWe notice that when $|n| > 1$, the left hand side of the expression is always positive.\n\nIf we let $n\\to\\infty$, then we see that\n\n$$\n\\lim_{n\\to\\infty} \\frac{2n^2}{n^2 - 1} \\overset{\\mathrm{H}}{=} \\lim_{n\\to\\infty} \\frac{4n}{2n} = 2\n$$\n\nthrough the use of L'Hospital's rule. We find that as $n\\to\\infty$, the value of n is always positive and a value greater than 2.\n\nIf we slightly re-arrange, we find the following:\n\n$$\n\\frac{2n^2}{n^2 - 1} + 1 > a\n$$\n\nAnd now knowing that the left hand side approaches 3 from above as $n\\to\\infty$, we know\nthat $a$ can be set to $3$ as the largest value that still satisfies the expression.\n\nHence, we find that the original inequality posited holds.\n","contentHTML":"<p>In my previous post, <a href=\"/blog/post/2025-03-16-on-the-addition-of-fractions\">&quot;On the Addition of Fractions, by Petri Mengoli&quot;</a>, I\nwrote that the following inequality holds, with no proof:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>n</mi></mrow></mfrac><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>&gt;</mo><mfrac><mn>3</mn><mi>n</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{1-n} + \\frac{1}{n} + \\frac{1}{n + 1} &gt; \\frac{3}{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>If we don&#x27;t assume a specific value for the numerator of the right hand side of the\ninequality, we can derive the inequality by starting with</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>n</mi></mrow></mfrac><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>&gt;</mo><mfrac><mi>a</mi><mi>n</mi></mfrac><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{1-n} + \\frac{1}{n} + \\frac{1}{n + 1} &gt; \\frac{a}{n}.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">.</span></span></span></span></span>\n<p>Multiply through by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">n</span></span></span></span>:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mi>n</mi><mrow><mn>1</mn><mo>−</mo><mi>n</mi></mrow></mfrac><mo>+</mo><mfrac><mi>b</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>+</mo><mn>1</mn><mo>&gt;</mo><mi>a</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\frac{n}{1-n} + \\frac{b}{n + 1} + 1 &gt; a.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.8769em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1408em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">.</span></span></span></span></span>\n<p>Set a common denominator for the left hand side:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>&gt;</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\frac{n(n+1) + n(n-1)}{(n-1)(n+1)} &gt; a - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">1</span></span></span></span></span>\n<p>Expanding the expression</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>n</mi><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mi>n</mi></mrow><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn></mrow></mfrac><mo>&gt;</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\frac{n^2 + n + n^2 - n}{n^2 - 1} &gt; a - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.2604em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em\"><span style=\"top:-2.989em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">1</span></span></span></span></span>\n<p>And simplifying</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mn>2</mn><msup><mi>n</mi><mn>2</mn></msup></mrow><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn></mrow></mfrac><mo>&gt;</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\frac{2n^2}{n^2 - 1} &gt; a - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.2604em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em\"><span style=\"top:-2.989em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">1</span></span></span></span></span>\n<p>We notice that when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">|n| &gt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">1</span></span></span></span>, the left hand side of the expression is always positive.</p>\n<p>If we let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">n\\to\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord\">∞</span></span></span></span>, then we see that</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mfrac><mrow><mn>2</mn><msup><mi>n</mi><mn>2</mn></msup></mrow><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn></mrow></mfrac><mo><mover><mo><mo>=</mo></mo><mi mathvariant=\"normal\">H</mi></mover></mo><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mfrac><mrow><mn>4</mn><mi>n</mi></mrow><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\lim_{n\\to\\infty} \\frac{2n^2}{n^2 - 1} \\overset{\\mathrm{H}}{=} \\lim_{n\\to\\infty} \\frac{4n}{2n} = 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.2604em;vertical-align:-0.7693em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em\"><span style=\"top:-2.4em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em\"><span class=\"pstrut\" style=\"height:3em\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em\"><span style=\"top:-2.989em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1452em\"><span style=\"top:-3em\"><span class=\"pstrut\" style=\"height:3em\"></span><span><span class=\"mop\">=</span></span></span><span style=\"top:-3.5669em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">H</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0214em;vertical-align:-0.7em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em\"><span style=\"top:-2.4em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em\"><span class=\"pstrut\" style=\"height:3em\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">2</span></span></span></span></span>\n<p>through the use of L&#x27;Hospital&#x27;s rule. We find that as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">n\\to\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord\">∞</span></span></span></span>, the value of n is always positive and a value greater than 2.</p>\n<p>If we slightly re-arrange, we find the following:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mn>2</mn><msup><mi>n</mi><mn>2</mn></msup></mrow><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn></mrow></mfrac><mo>+</mo><mn>1</mn><mo>&gt;</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">\\frac{2n^2}{n^2 - 1} + 1 &gt; a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.2604em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em\"><span style=\"top:-2.989em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">a</span></span></span></span></span>\n<p>And now knowing that the left hand side approaches 3 from above as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">n\\to\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord\">∞</span></span></span></span>, we know\nthat <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">a</span></span></span></span> can be set to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">3</span></span></span></span> as the largest value that still satisfies the expression.</p>\n<p>Hence, we find that the original inequality posited holds.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    annotation: \"annotation\",\n    math: \"math\",\n    mfrac: \"mfrac\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mover: \"mover\",\n    mrow: \"mrow\",\n    msup: \"msup\",\n    munder: \"munder\",\n    p: \"p\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In my previous post, \", _jsx(_components.a, {\n        href: \"/blog/post/2025-03-16-on-the-addition-of-fractions\",\n        children: \"\\\"On the Addition of Fractions, by Petri Mengoli\\\"\"\n      }), \", I\\nwrote that the following inequality holds, with no proof:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"3\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{1}{1-n} + \\\\frac{1}{n} + \\\\frac{1}{n + 1} > \\\\frac{3}{n}\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"3\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If we don't assume a specific value for the numerator of the right hand side of the\\ninequality, we can derive the inequality by starting with\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mi, {\n                    children: \"a\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \".\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{1}{1-n} + \\\\frac{1}{n} + \\\\frac{1}{n + 1} > \\\\frac{a}{n}.\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1.7936em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.1076em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"a\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \".\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Multiply through by \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"n\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"n\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            })]\n          })\n        })]\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mi, {\n                    children: \"n\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mi, {\n                    children: \"b\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \".\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{n}{1-n} + \\\\frac{b}{n + 1} + 1 > a.\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1.8769em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.1076em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.1408em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3714em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"b\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6835em\",\n                verticalAlign: \"-0.0391em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \".\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Set a common denominator for the left hand side:\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mo, {\n                  children: \"−\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{n(n+1) + n(n-1)}{(n-1)(n+1)} > a - 1\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.363em\",\n                verticalAlign: \"-0.936em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.427em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mopen\",\n                            children: \"(\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mclose\",\n                            children: \")\"\n                          }), _jsx(_components.span, {\n                            className: \"mopen\",\n                            children: \"(\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mclose\",\n                            children: \")\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mopen\",\n                            children: \"(\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mclose\",\n                            children: \")\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mopen\",\n                            children: \"(\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          }), _jsx(_components.span, {\n                            className: \"mclose\",\n                            children: \")\"\n                          })]\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.936em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"−\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Expanding the expression\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mo, {\n                  children: \"−\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{n^2 + n + n^2 - n}{n^2 - 1} > a - 1\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.2604em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.4911em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.7401em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-2.989em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.8141em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-3.063em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.8141em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-3.063em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })]\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"−\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And simplifying\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"2\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mo, {\n                  children: \"−\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{2n^2}{n^2 - 1} > a - 1\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.2604em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.4911em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.7401em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-2.989em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          }), _jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.8141em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-3.063em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          })]\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6667em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"−\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We notice that when \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"|n| > 1\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            })]\n          })]\n        })]\n      }), \", the left hand side of the expression is always positive.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If we let \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  children: \"→\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∞\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"n\\\\to\\\\infty\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"→\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∞\"\n            })]\n          })]\n        })]\n      }), \", then we see that\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.munder, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"lim\"\n                    }), _jsx(_components.mo, {\n                      children: \"⁡\"\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"→\"\n                    }), _jsx(_components.mi, {\n                      mathvariant: \"normal\",\n                      children: \"∞\"\n                    })]\n                  })]\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"2\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: _jsxs(_components.mover, {\n                    children: [_jsx(_components.mo, {\n                      children: _jsx(_components.mo, {\n                        children: \"=\"\n                      })\n                    }), _jsx(_components.mi, {\n                      mathvariant: \"normal\",\n                      children: \"H\"\n                    })]\n                  })\n                }), _jsxs(_components.munder, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"lim\"\n                    }), _jsx(_components.mo, {\n                      children: \"⁡\"\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"→\"\n                    }), _jsx(_components.mi, {\n                      mathvariant: \"normal\",\n                      children: \"∞\"\n                    })]\n                  })]\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"4\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"2\"\n                    }), _jsx(_components.mi, {\n                      children: \"n\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"2\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\lim_{n\\\\to\\\\infty} \\\\frac{2n^2}{n^2 - 1} \\\\overset{\\\\mathrm{H}}{=} \\\\lim_{n\\\\to\\\\infty} \\\\frac{4n}{2n} = 2\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.2604em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"0.6944em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-2.4em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsxs(_components.span, {\n                          className: \"mord mtight\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mrel mtight\",\n                            children: \"→\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"∞\"\n                          })]\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop\",\n                          children: \"lim\"\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"0.7em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.4911em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.7401em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-2.989em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          }), _jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.8141em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-3.063em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          })]\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: _jsx(_components.span, {\n                className: \"mop op-limits\",\n                children: _jsx(_components.span, {\n                  className: \"vlist-t\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.1452em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-3em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          children: _jsx(_components.span, {\n                            className: \"mop\",\n                            children: \"=\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.5669em\",\n                          marginLeft: \"0em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: _jsx(_components.span, {\n                              className: \"mord mathrm mtight\",\n                              children: \"H\"\n                            })\n                          })\n                        })]\n                      })]\n                    })\n                  })\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0214em\",\n                verticalAlign: \"-0.7em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"0.6944em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-2.4em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsxs(_components.span, {\n                          className: \"mord mtight\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mrel mtight\",\n                            children: \"→\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"∞\"\n                          })]\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop\",\n                          children: \"lim\"\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"0.7em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"4\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })]\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"2\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"through the use of L'Hospital's rule. We find that as \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  children: \"→\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∞\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"n\\\\to\\\\infty\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"→\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∞\"\n            })]\n          })]\n        })]\n      }), \", the value of n is always positive and a value greater than 2.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If we slightly re-arrange, we find the following:\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mn, {\n                      children: \"2\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    })]\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"n\"\n                      }), _jsx(_components.mn, {\n                        children: \"2\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{2n^2}{n^2 - 1} + 1 > a\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.2604em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.4911em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.7401em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-2.989em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          }), _jsxs(_components.span, {\n                            className: \"mord\",\n                            children: [_jsx(_components.span, {\n                              className: \"mord mathnormal\",\n                              children: \"n\"\n                            }), _jsx(_components.span, {\n                              className: \"msupsub\",\n                              children: _jsx(_components.span, {\n                                className: \"vlist-t\",\n                                children: _jsx(_components.span, {\n                                  className: \"vlist-r\",\n                                  children: _jsx(_components.span, {\n                                    className: \"vlist\",\n                                    style: {\n                                      height: \"0.8141em\"\n                                    },\n                                    children: _jsxs(_components.span, {\n                                      style: {\n                                        top: \"-3.063em\",\n                                        marginRight: \"0.05em\"\n                                      },\n                                      children: [_jsx(_components.span, {\n                                        className: \"pstrut\",\n                                        style: {\n                                          height: \"2.7em\"\n                                        }\n                                      }), _jsx(_components.span, {\n                                        className: \"sizing reset-size6 size3 mtight\",\n                                        children: _jsx(_components.span, {\n                                          className: \"mord mtight\",\n                                          children: \"2\"\n                                        })\n                                      })]\n                                    })\n                                  })\n                                })\n                              })\n                            })]\n                          })]\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6835em\",\n                verticalAlign: \"-0.0391em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"And now knowing that the left hand side approaches 3 from above as \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  children: \"→\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∞\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"n\\\\to\\\\infty\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"→\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∞\"\n            })]\n          })]\n        })]\n      }), \", we know\\nthat \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"a\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"a\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"a\"\n            })]\n          })\n        })]\n      }), \" can be set to \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mn, {\n                  children: \"3\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"3\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"3\"\n            })]\n          })\n        })]\n      }), \" as the largest value that still satisfies the expression.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Hence, we find that the original inequality posited holds.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nIn my previous post, [\"On the Addition of Fractions, by Petri Mengoli\"](/blog/post/2025-03-16-on-the-addition-of-fractions), I\nwrote that the following inequality holds, with no proof","excerptHTML":"<p>In my previous post, <a href=\"/blog/post/2025-03-16-on-the-addition-of-fractions\">&quot;On the Addition of Fractions, by Petri Mengoli&quot;</a>, I\nwrote that the following inequality holds, with no proof</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"In my previous post, \", _jsx(_components.a, {\n      href: \"/blog/post/2025-03-16-on-the-addition-of-fractions\",\n      children: \"\\\"On the Addition of Fractions, by Petri Mengoli\\\"\"\n    }), \", I\\nwrote that the following inequality holds, with no proof\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["mathematics","translation"]},{"slug":"2025-04-21-agents-agents-agents","date":"2025-04-21","title":"Agents, Agents, Agents","frontmatter":{"title":"Agents, Agents, Agents","tags":["ai","apis"]},"contentRaw":"\nIn 2008, Steve Ballmer once famously said “[Developers, developers, developers](https://www.youtube.com/watch?v=Vhh_GeBPOhs)” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.\n\nThe 2010s saw companies like “Twilio” have guiding questions like Jeff Lawson’s “Why Isn’t That and API?”. This guiding principle was based around the idea that if you build great APIs for software developers, they would want to use them, and in doing so, spend money on those services. For that entire decade, companies would start, build for engineers, and use the fly-wheel effect to become multi-billion dollar companies.\n\n![Why isn't that an API?](/media/2025-04-21-agents-agents-agents/why-isnt-that-an-api.png)\n\nNow, in the age of LLMs (Large Language Models) and AI, my assumption about the future is that we are going to find that “AI Agents” are the next Big Thing. We will probably see software engineers coding not to make APIs that other developers can use, but so that AI Agents can use. With [OpenAI introducing Operator](https://openai.com/index/introducing-operator/), their AI that can do tasks for you autonomously, the trajectory looks clear for companies that want to partner in this space: make products that will interface with AI Agents*.\n\nAnd this isn’t going to only apply to software engineering. Even those in marketing are starting to think about how their content can be better consumed by the crawlers that feed into the training data for these LLMs. In “[AI Slop Suspicion and Writing Back](https://benjamincongdon.me/blog/2025/01/25/AI-Slop-Suspicion-and-Writing-Back/)”, the author hypothesizes about the future of SEO. Will we be writing not for other people to reach our content via search, but to see our content as part of an LLM’s answer to a question? If people are starting to transition to asking LLMs like ChatGPT a question first before they even Google, then wouldn’t getting your name and your thoughts ingested by the massive corpus of training data be beneficial in a sense, similar to a web-crawler indexing for search?\n\nThese are questions I think we will see answered very soon, and some of the answers may not be ones we like. We may very well be starting to write content, apps, and APIs not for other people, but for machines.\n\n*Of course, not everyone is going to jump on this bandwagon. There are companies right now that make concerted efforts to make sure only humans use their site. They don’t have APIs, they stick their entire site behind a Cloudflare captcha check. These aren’t the companies I’m talking about as they weren’t trying to bridge into the larger software developer ecosystem.\n","contentHTML":"<p>In 2008, Steve Ballmer once famously said “<a href=\"https://www.youtube.com/watch?v=Vhh_GeBPOhs\">Developers, developers, developers</a>” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.</p>\n<p>The 2010s saw companies like “Twilio” have guiding questions like Jeff Lawson’s “Why Isn’t That and API?”. This guiding principle was based around the idea that if you build great APIs for software developers, they would want to use them, and in doing so, spend money on those services. For that entire decade, companies would start, build for engineers, and use the fly-wheel effect to become multi-billion dollar companies.</p>\n<p><img alt=\"Why isn&#x27;t that an API?\" src=\"/media/2025-04-21-agents-agents-agents/why-isnt-that-an-api.png\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<p>Now, in the age of LLMs (Large Language Models) and AI, my assumption about the future is that we are going to find that “AI Agents” are the next Big Thing. We will probably see software engineers coding not to make APIs that other developers can use, but so that AI Agents can use. With <a href=\"https://openai.com/index/introducing-operator/\">OpenAI introducing Operator</a>, their AI that can do tasks for you autonomously, the trajectory looks clear for companies that want to partner in this space: make products that will interface with AI Agents*.</p>\n<p>And this isn’t going to only apply to software engineering. Even those in marketing are starting to think about how their content can be better consumed by the crawlers that feed into the training data for these LLMs. In “<a href=\"https://benjamincongdon.me/blog/2025/01/25/AI-Slop-Suspicion-and-Writing-Back/\">AI Slop Suspicion and Writing Back</a>”, the author hypothesizes about the future of SEO. Will we be writing not for other people to reach our content via search, but to see our content as part of an LLM’s answer to a question? If people are starting to transition to asking LLMs like ChatGPT a question first before they even Google, then wouldn’t getting your name and your thoughts ingested by the massive corpus of training data be beneficial in a sense, similar to a web-crawler indexing for search?</p>\n<p>These are questions I think we will see answered very soon, and some of the answers may not be ones we like. We may very well be starting to write content, apps, and APIs not for other people, but for machines.</p>\n<p>*Of course, not everyone is going to jump on this bandwagon. There are companies right now that make concerted efforts to make sure only humans use their site. They don’t have APIs, they stick their entire site behind a Cloudflare captcha check. These aren’t the companies I’m talking about as they weren’t trying to bridge into the larger software developer ecosystem.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    img: \"img\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In 2008, Steve Ballmer once famously said “\", _jsx(_components.a, {\n        href: \"https://www.youtube.com/watch?v=Vhh_GeBPOhs\",\n        children: \"Developers, developers, developers\"\n      }), \"” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The 2010s saw companies like “Twilio” have guiding questions like Jeff Lawson’s “Why Isn’t That and API?”. This guiding principle was based around the idea that if you build great APIs for software developers, they would want to use them, and in doing so, spend money on those services. For that entire decade, companies would start, build for engineers, and use the fly-wheel effect to become multi-billion dollar companies.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2025-04-21-agents-agents-agents/why-isnt-that-an-api.png\",\n        alt: \"Why isn't that an API?\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, in the age of LLMs (Large Language Models) and AI, my assumption about the future is that we are going to find that “AI Agents” are the next Big Thing. We will probably see software engineers coding not to make APIs that other developers can use, but so that AI Agents can use. With \", _jsx(_components.a, {\n        href: \"https://openai.com/index/introducing-operator/\",\n        children: \"OpenAI introducing Operator\"\n      }), \", their AI that can do tasks for you autonomously, the trajectory looks clear for companies that want to partner in this space: make products that will interface with AI Agents*.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"And this isn’t going to only apply to software engineering. Even those in marketing are starting to think about how their content can be better consumed by the crawlers that feed into the training data for these LLMs. In “\", _jsx(_components.a, {\n        href: \"https://benjamincongdon.me/blog/2025/01/25/AI-Slop-Suspicion-and-Writing-Back/\",\n        children: \"AI Slop Suspicion and Writing Back\"\n      }), \"”, the author hypothesizes about the future of SEO. Will we be writing not for other people to reach our content via search, but to see our content as part of an LLM’s answer to a question? If people are starting to transition to asking LLMs like ChatGPT a question first before they even Google, then wouldn’t getting your name and your thoughts ingested by the massive corpus of training data be beneficial in a sense, similar to a web-crawler indexing for search?\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These are questions I think we will see answered very soon, and some of the answers may not be ones we like. We may very well be starting to write content, apps, and APIs not for other people, but for machines.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"*Of course, not everyone is going to jump on this bandwagon. There are companies right now that make concerted efforts to make sure only humans use their site. They don’t have APIs, they stick their entire site behind a Cloudflare captcha check. These aren’t the companies I’m talking about as they weren’t trying to bridge into the larger software developer ecosystem.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nIn 2008, Steve Ballmer once famously said “[Developers, developers, developers](https://www.youtube.com/watch?v=Vhh_GeBPOhs)” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.","excerptHTML":"<p>In 2008, Steve Ballmer once famously said “<a href=\"https://www.youtube.com/watch?v=Vhh_GeBPOhs\">Developers, developers, developers</a>” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"In 2008, Steve Ballmer once famously said “\", _jsx(_components.a, {\n      href: \"https://www.youtube.com/watch?v=Vhh_GeBPOhs\",\n      children: \"Developers, developers, developers\"\n    }), \"” in a highly meme-able video. He was trying to emphasize the importance of software developers in business and that their importance was only going to continue to grow. Microsoft shifted to try to support software developers, noticing that if they supported developers, they would build better software for Windows, which in turn would make people want to use Windows.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["ai","apis"]},{"slug":"2025-03-16-on-the-addition-of-fractions","date":"2025-03-16","title":"On the Addition of Fractions, by Petri Mengoli","frontmatter":{"title":"On the Addition of Fractions, by Petri Mengoli","tags":["mathematics","translation"]},"contentRaw":"\nI was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by [anime characters talking\nabout it](https://www.youtube.com/watch?v=jmtiWGnj5os)).<!--truncate--> I however wanted to\ndive deeper into the context of why Euler wanted to even approach this problem,\nso I investigated the work of Petri Mengoli.\n\nThe publication of his work \"On the Addition of Fractions\" is available via the\n[Internet Archive in its original Latin](https://archive.org/details/bub_gb_PrKgVx1LcUUC/mode/1up).\nPetri Mengoli's work focuses on the harmonic series in the preface and shows\nthat it diverges. The harmonic series is written in modern notation as:\n\n$$\n\\sum_{n=1}^{\\infty} \\frac{1}{n} = 1 + \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\ldots\n$$\n\nHis proof relies on finding groupings of fractions that sum greater to one\n(which his paper refers to as \"unity\"). First, look at the first 3 terms after\n\"unity\": $1/2 + 1/3 + 1/4$. When added, we see that when we set common denominators:\n\n$$\n6/12 + 4/12 + 3/12 = 13 / 12 > 1\n$$\n\nAnd in fact, for any three terms:\n\n$$\n\\frac{1}{n - 1} + \\frac{1}{n} + \\frac{1}{n+1} > \\frac{3}{n}\n$$\n\nNext Mengoli shows that there is another group of fractions that adds up to\ngreater than one, and another set of fractions after that set that also adds up\nto one. He demonstrates that for any given number, there is a finite set of\nfractions that can be added to get a value greater than that. Therefore the\nseries must diverge.\n\nHis approach here is inspired by Archimedes' \"Quadrature of the Parabola\",\nand focuses on using the \"method of exhaustion\", rather than manipulating\ninfinite series or dealing with limits.\n\nFrom this work, comes the original quote of what became known as the Basel\nproblem:\n\n> Ab huius fractionum dispositionis contemplatione feliciter\nexpeditus, ad aliam progrediebar dispositionem, in qua\nsingulæ unitates numeris quadratis denominantur.\nHæc speculatio fructus quidem laboris rependit, nondum tamen\neffecta est solvendo, sed ingenii ditioris postulat adminiculum,\nut præcisam dispositionis, quam mihimetipst proposui, summam\nvaleat reportare.\n>\n\nRoughly translating to:\n\n> Having successfully concluded my contemplation of this arrangement\nof fractions, I proceeded to another arrangement, in which\neach unit is denominated by square numbers.\nThis speculation indeed rewards labor with fruit, but it has not\nyet been completed in solving and demands the assistance of\ngreater ingenuity so that the precise sum of the arrangement\nI proposed to myself may be recovered.\n>\n\nThis is the work that perhaps sparked the inspiration for Euler's proof that the\nsum of the reciprocal of the squares adds up to $\\pi^2 /6$ . Euler required much\nmore advanced mathematics and insight in order to come up with this equality, and\nhe revisited the sum in multiple letters with slightly different arguments to\nvalidate his work.\n\nFor a full write up on this, see my self-published work here:\n\n<DownloadCard\n    href=\"/docs/on-the-addition-of-fractions.pdf\"\n    title=\"On the addition of fractions.pdf\"\n/>\n","contentHTML":"<p>I was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by <a href=\"https://www.youtube.com/watch?v=jmtiWGnj5os\">anime characters talking\nabout it</a>). I however wanted to\ndive deeper into the context of why Euler wanted to even approach this problem,\nso I investigated the work of Petri Mengoli.</p>\n<p>The publication of his work &quot;On the Addition of Fractions&quot; is available via the\n<a href=\"https://archive.org/details/bub_gb_PrKgVx1LcUUC/mode/1up\">Internet Archive in its original Latin</a>.\nPetri Mengoli&#x27;s work focuses on the harmonic series in the preface and shows\nthat it diverges. The harmonic series is written in modern notation as:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant=\"normal\">∞</mi></munderover><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>+</mo><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{n=1}^{\\infty} \\frac{1}{n} = 1 + \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\ldots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9185em;vertical-align:-1.2671em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em\"><span style=\"top:-1.8829em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.123em\"></span><span class=\"minner\">…</span></span></span></span></span>\n<p>His proof relies on finding groupings of fractions that sum greater to one\n(which his paper refers to as &quot;unity&quot;). First, look at the first 3 terms after\n&quot;unity&quot;: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>+</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>3</mn><mo>+</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">1/2 + 1/3 + 1/4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">1/2</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">1/3</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">1/4</span></span></span></span>. When added, we see that when we set common denominators:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>6</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>+</mo><mn>4</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>+</mo><mn>3</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>=</mo><mn>13</mn><mi mathvariant=\"normal\">/</mi><mn>12</mn><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">6/12 + 4/12 + 3/12 = 13 / 12 &gt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">6/12</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">4/12</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">3/12</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">13/12</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">1</span></span></span></span></span>\n<p>And in fact, for any three terms:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>&gt;</mo><mfrac><mn>3</mn><mi>n</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{n - 1} + \\frac{1}{n} + \\frac{1}{n+1} &gt; \\frac{3}{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em\"><span style=\"top:-2.314em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.677em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>Next Mengoli shows that there is another group of fractions that adds up to\ngreater than one, and another set of fractions after that set that also adds up\nto one. He demonstrates that for any given number, there is a finite set of\nfractions that can be added to get a value greater than that. Therefore the\nseries must diverge.</p>\n<p>His approach here is inspired by Archimedes&#x27; &quot;Quadrature of the Parabola&quot;,\nand focuses on using the &quot;method of exhaustion&quot;, rather than manipulating\ninfinite series or dealing with limits.</p>\n<p>From this work, comes the original quote of what became known as the Basel\nproblem:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>Ab huius fractionum dispositionis contemplatione feliciter\nexpeditus, ad aliam progrediebar dispositionem, in qua\nsingulæ unitates numeris quadratis denominantur.\nHæc speculatio fructus quidem laboris rependit, nondum tamen\neffecta est solvendo, sed ingenii ditioris postulat adminiculum,\nut præcisam dispositionis, quam mihimetipst proposui, summam\nvaleat reportare.</p>\n</blockquote>\n<p>Roughly translating to:</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>Having successfully concluded my contemplation of this arrangement\nof fractions, I proceeded to another arrangement, in which\neach unit is denominated by square numbers.\nThis speculation indeed rewards labor with fruit, but it has not\nyet been completed in solving and demands the assistance of\ngreater ingenuity so that the precise sum of the arrangement\nI proposed to myself may be recovered.</p>\n</blockquote>\n<p>This is the work that perhaps sparked the inspiration for Euler&#x27;s proof that the\nsum of the reciprocal of the squares adds up to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>π</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">\\pi^2 /6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/6</span></span></span></span> . Euler required much\nmore advanced mathematics and insight in order to come up with this equality, and\nhe revisited the sum in multiple letters with slightly different arguments to\nvalidate his work.</p>\n<p>For a full write up on this, see my self-published work here:</p>\n<a class=\"block flex-1 overflow-visible rounded-lg bg-white no-underline shadow-lg dark:bg-gray-800\" href=\"/docs/on-the-addition-of-fractions.pdf\"><div class=\"p-6\"><h4 class=\"!m-0 !p-0 !text-base font-bold !no-underline\">On the addition of fractions.pdf</h4></div></a>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    annotation: \"annotation\",\n    blockquote: \"blockquote\",\n    math: \"math\",\n    mfrac: \"mfrac\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    msup: \"msup\",\n    munderover: \"munderover\",\n    p: \"p\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ...props.components\n  }, {DownloadCard} = _components;\n  if (!DownloadCard) _missingMdxReference(\"DownloadCard\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"I was researching the origin of the Basel problem to write a short blog post about\\nhow Euler approached the problem (only to get beaten by \", _jsx(_components.a, {\n        href: \"https://www.youtube.com/watch?v=jmtiWGnj5os\",\n        children: \"anime characters talking\\nabout it\"\n      }), \"). I however wanted to\\ndive deeper into the context of why Euler wanted to even approach this problem,\\nso I investigated the work of Petri Mengoli.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The publication of his work \\\"On the Addition of Fractions\\\" is available via the\\n\", _jsx(_components.a, {\n        href: \"https://archive.org/details/bub_gb_PrKgVx1LcUUC/mode/1up\",\n        children: \"Internet Archive in its original Latin\"\n      }), \".\\nPetri Mengoli's work focuses on the harmonic series in the preface and shows\\nthat it diverges. The harmonic series is written in modern notation as:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.munderover, {\n                  children: [_jsx(_components.mo, {\n                    children: \"∑\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  }), _jsx(_components.mi, {\n                    mathvariant: \"normal\",\n                    children: \"∞\"\n                  })]\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mn, {\n                    children: \"3\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mn, {\n                    children: \"4\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mo, {\n                  children: \"…\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\sum_{n=1}^{\\\\infty} \\\\frac{1}{n} = 1 + \\\\frac{1}{2} + \\\\frac{1}{3} + \\\\frac{1}{4} + \\\\ldots\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.9185em\",\n                verticalAlign: \"-1.2671em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.6514em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-1.8829em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsxs(_components.span, {\n                          className: \"mord mtight\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mrel mtight\",\n                            children: \"=\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"1\"\n                          })]\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3.05em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop op-symbol large-op\",\n                          children: \"∑\"\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-4.3em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsx(_components.span, {\n                          className: \"mord mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"∞\"\n                          })\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.2671em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.7278em\",\n                verticalAlign: \"-0.0833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"2\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"3\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"4\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.123em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"minner\",\n              children: \"…\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"His proof relies on finding groupings of fractions that sum greater to one\\n(which his paper refers to as \\\"unity\\\"). First, look at the first 3 terms after\\n\\\"unity\\\": \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"2\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"3\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"4\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"1/2 + 1/3 + 1/4\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1/2\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1/3\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1/4\"\n            })]\n          })]\n        })]\n      }), \". When added, we see that when we set common denominators:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mn, {\n                  children: \"6\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"4\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mn, {\n                  children: \"3\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"13\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"12\"\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsx(_components.mn, {\n                  children: \"1\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"6/12 + 4/12 + 3/12 = 13 / 12 > 1\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"6/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"4/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"3/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"13/12\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"1\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And in fact, for any three terms:\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"1\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"n\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \">\"\n                }), _jsxs(_components.mfrac, {\n                  children: [_jsx(_components.mn, {\n                    children: \"3\"\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\frac{1}{n - 1} + \\\\frac{1}{n} + \\\\frac{1}{n+1} > \\\\frac{3}{n}\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"−\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0908em\",\n                verticalAlign: \"-0.7693em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsxs(_components.span, {\n                          className: \"mord\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mbin\",\n                            children: \"+\"\n                          }), _jsx(_components.span, {\n                            className: \"mspace\",\n                            style: {\n                              marginRight: \"0.2222em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })]\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"1\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.7693em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.0074em\",\n                verticalAlign: \"-0.686em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mopen nulldelimiter\"\n              }), _jsx(_components.span, {\n                className: \"mfrac\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"1.3214em\"\n                      },\n                      children: [_jsxs(_components.span, {\n                        style: {\n                          top: \"-2.314em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal\",\n                            children: \"n\"\n                          })\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.23em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"frac-line\",\n                          style: {\n                            borderBottomWidth: \"0.04em\"\n                          }\n                        })]\n                      }), _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.677em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"3em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"mord\",\n                          children: _jsx(_components.span, {\n                            className: \"mord\",\n                            children: \"3\"\n                          })\n                        })]\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.686em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              }), _jsx(_components.span, {\n                className: \"mclose nulldelimiter\"\n              })]\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next Mengoli shows that there is another group of fractions that adds up to\\ngreater than one, and another set of fractions after that set that also adds up\\nto one. He demonstrates that for any given number, there is a finite set of\\nfractions that can be added to get a value greater than that. Therefore the\\nseries must diverge.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"His approach here is inspired by Archimedes' \\\"Quadrature of the Parabola\\\",\\nand focuses on using the \\\"method of exhaustion\\\", rather than manipulating\\ninfinite series or dealing with limits.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"From this work, comes the original quote of what became known as the Basel\\nproblem:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Ab huius fractionum dispositionis contemplatione feliciter\\nexpeditus, ad aliam progrediebar dispositionem, in qua\\nsingulæ unitates numeris quadratis denominantur.\\nHæc speculatio fructus quidem laboris rependit, nondum tamen\\neffecta est solvendo, sed ingenii ditioris postulat adminiculum,\\nut præcisam dispositionis, quam mihimetipst proposui, summam\\nvaleat reportare.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Roughly translating to:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Having successfully concluded my contemplation of this arrangement\\nof fractions, I proceeded to another arrangement, in which\\neach unit is denominated by square numbers.\\nThis speculation indeed rewards labor with fruit, but it has not\\nyet been completed in solving and demands the assistance of\\ngreater ingenuity so that the precise sum of the arrangement\\nI proposed to myself may be recovered.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is the work that perhaps sparked the inspiration for Euler's proof that the\\nsum of the reciprocal of the squares adds up to \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.msup, {\n                  children: [_jsx(_components.mi, {\n                    children: \"π\"\n                  }), _jsx(_components.mn, {\n                    children: \"2\"\n                  })]\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"/\"\n                }), _jsx(_components.mn, {\n                  children: \"6\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"\\\\pi^2 /6\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1.0641em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.03588em\"\n                },\n                children: \"π\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsx(_components.span, {\n                  className: \"vlist-t\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.8141em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.063em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"2\"\n                          })\n                        })]\n                      })\n                    })\n                  })\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"/6\"\n            })]\n          })\n        })]\n      }), \" . Euler required much\\nmore advanced mathematics and insight in order to come up with this equality, and\\nhe revisited the sum in multiple letters with slightly different arguments to\\nvalidate his work.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For a full write up on this, see my self-published work here:\"\n    }), \"\\n\", _jsx(DownloadCard, {\n      href: \"/docs/on-the-addition-of-fractions.pdf\",\n      title: \"On the addition of fractions.pdf\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","excerptRaw":"\nI was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by [anime characters talking\nabout it](https://www.youtube.com/watch?v=jmtiWGnj5os)).","excerptHTML":"<p>I was researching the origin of the Basel problem to write a short blog post about\nhow Euler approached the problem (only to get beaten by <a href=\"https://www.youtube.com/watch?v=jmtiWGnj5os\">anime characters talking\nabout it</a>).</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"I was researching the origin of the Basel problem to write a short blog post about\\nhow Euler approached the problem (only to get beaten by \", _jsx(_components.a, {\n      href: \"https://www.youtube.com/watch?v=jmtiWGnj5os\",\n      children: \"anime characters talking\\nabout it\"\n    }), \").\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["mathematics","translation"]},{"slug":"2025-01-12-api-surfaces","date":"2025-01-12","title":"APIs, Complexity, and Surfaces","frontmatter":{"title":"APIs, Complexity, and Surfaces","tags":["programming","apis"]},"contentRaw":"\nMaintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI's complexity as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.\n\n<!--truncate-->\n\nWe will consider an API as an abstract set of functions, each with a\ndefined set of input parameters and outputs. An API can represent a library,\nan interface, or a set of functions in a design system.\n\n## An API as a Surface\n\nA good API minimizes the complexity that a consumer needs to understand\nin order to use it. If we think of an  API as an abstract two dimensional\nsurface, then the complexity of the internals of the API - all the code\nthat is required to implement the API - is the area of that surface.\nThe API that is exposed as functions, input parameters, and outputs is\nthe perimeter of that surface. This follows from the concept that an\nAPI should act as a \"black box\" - the consumer should not need to know\nhow the API is implemented in order to use it.\n\nFrom this metaphor, we can also think of the \"best\" API as one that\nminimizes the perimeter of the surface while maximizing the necessary\narea of the surface.\n\n## The Complexity of a Surface\n\nThe perceived complexity of an API can be influenced by the number of functions,\nthe number of parameters, and the number of return values.\n\nWe will not be considering the internal state of the services that consumers\nmay need to manage. Instead, we will focus on \"idempotent\" functions - those\nthat do not have side effects and do not require any state to be managed.\n\nAbstractly, we can denote the API Surface $S$ as a set of functions $f_i$,\nwhere the complexity of each function $f_i$ is given by $c(f_i)$, and the\noverall complexity of the surface is given by:\n\n$$\nC(S) = \\sum_{i=1}^{n} c(f_i)\n$$\n\nwhere $n$ is the number of functions in the surface.\n\nAs we increase the number of functions in the surface, the complexity of the\nsurface is also expected to increase.\n\n## The Complexity of a Function\n\nThe complexity of a function $f_i$ can be influenced by the number of input\nparameters, their values, and the number of return values.\n\nTake for example a function $f(x: boolean): boolean$ that takes a single\nboolean input and returns a boolean value. The complexity of this function\nis relatively low - there are only two possible input values and two possible\noutput values.\n\nIf we jump to a function $f(x: boolean, y: boolean, z: boolean): boolean$\nthen the complexity of this function is higher - there are now $2^3 = 8$\npossible input values and two possible output values.\n\nAs we increase the number of input parameters, we increase the number\nof combinations of input values that the function can accept. This\nincreases the complexity of the function:\n\n$$\nc(f_i) = \\prod_{p} |p| + |r|\n$$\n\nwhere $p$ is the set of input parameters, $r$ is the set of return values,\nand $|p|$ is size of the set of input parameters and $|r|$ is the size of\nthe set of return values. By \"size\" we  mean the number of \"meaningful\"\nvalues that a parameter type has. For example, a boolean has two meaningful values,\nbut an integer may have an infinite range of non-meaningful values. In some\nlanguages, like C, it is common for an integer to have meaningful values\nof -1 and 0, and non-meaningful values of all other integers. In the case where\nthe integer is simply a number, we would consider the size of the parameter\nto be 1, while the size of a C-like integer to be the number of \"special\" cases\nthe integer has.\n\nAaron Luu, in his article [Don't use boolean](https://www.luu.io/posts/dont-use-booleans)\nalludes to this exponential potential for complexity when using boolean\nvalues.\n\n## Tests as Consumers\n\nInterestingly, the tests for an API already act as a consumer and can demonstrate\nthe complexity of an API as it strives to cover all possible branches and use-cases.\nFor our function with 3 boolean inputs, we would need to write 8 tests to cover\nall possible input combinations. A suite of tests that check tons of combinations\nof inputs and outputs is a good indicator that the API is complex.\n\n## Techniques for Reducing Complexity\n\nThis is by no means an exhaustive list, but here are some techniques that\ncan help reduce complexity.\n\nFirst is to identify if the parameters are truly independent. For example, let's take\nthe example:\n\n```\nf(x: boolean, y: Data | undefined): boolean\n```\n\nIf the value of $y$ is only meaningful when $x$ is true, then we can consider\n$y$ to be a dependent parameter. If we write out a matrix of possible inputs:\n\n- x: true, y: Data\n- x: false, y: Data\n- x: true, y: undefined\n- x: false, y: undefined\n\nWe can see that the value of $y$ is only meaningful when $x$ is true.\n\nWhen we have dependent parameters, we can consider using the type-system to\nhelp us manage the complexity. For example, we could just simplify the\nfunction to allow only valid inputs:\n\n```\nf(x: Data | false): boolean\n```\n\nDepending on the values of Data, this simplifies the complexity of the function by\nhalf.\n\nAnother technique is to consider reducing boolean inputs to a single enum-like\ninput type. For example, simplifying 3 boolean parameters into a single\nenum-like parameter:\n\n```\nf(x: 'all'  | 'none' | 'some'): boolean\n```\n\nThis reduces the number of possible input combinations from 8 to 3.\n\n## Conclusion\n\nThis is one simple way to measure the complexity of an API, which shows\nthat the bigger the surface area, the more complex the API. The majority\nof this complexity comes from the combinations of input parameters and\nreturn values. By reducing the number of input parameters and return values,\nwe can reduce the complexity of the API.\n\nThis is by no means the only way to measure the complexity of an API, but\nit is a useful way to think about the complexity of an API in terms of\nthe number of possible input and output combinations.","contentHTML":"<p>Maintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI&#x27;s complexity as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.</p>\n<p>We will consider an API as an abstract set of functions, each with a\ndefined set of input parameters and outputs. An API can represent a library,\nan interface, or a set of functions in a design system.</p>\n<h2>An API as a Surface</h2>\n<p>A good API minimizes the complexity that a consumer needs to understand\nin order to use it. If we think of an  API as an abstract two dimensional\nsurface, then the complexity of the internals of the API - all the code\nthat is required to implement the API - is the area of that surface.\nThe API that is exposed as functions, input parameters, and outputs is\nthe perimeter of that surface. This follows from the concept that an\nAPI should act as a &quot;black box&quot; - the consumer should not need to know\nhow the API is implemented in order to use it.</p>\n<p>From this metaphor, we can also think of the &quot;best&quot; API as one that\nminimizes the perimeter of the surface while maximizing the necessary\narea of the surface.</p>\n<h2>The Complexity of a Surface</h2>\n<p>The perceived complexity of an API can be influenced by the number of functions,\nthe number of parameters, and the number of return values.</p>\n<p>We will not be considering the internal state of the services that consumers\nmay need to manage. Instead, we will focus on &quot;idempotent&quot; functions - those\nthat do not have side effects and do not require any state to be managed.</p>\n<p>Abstractly, we can denote the API Surface <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">S</span></span></span></span> as a set of functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span>,\nwhere the complexity of each function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span> is given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">c(f_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, and the\noverall complexity of the surface is given by:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>c</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(S) = \\sum_{i=1}^{n} c(f_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em\"><span style=\"top:-1.8723em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is the number of functions in the surface.</p>\n<p>As we increase the number of functions in the surface, the complexity of the\nsurface is also expected to increase.</p>\n<h2>The Complexity of a Function</h2>\n<p>The complexity of a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span> can be influenced by the number of input\nparameters, their values, and the number of return values.</p>\n<p>Take for example a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">f(x: boolean): boolean</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span></span></span></span> that takes a single\nboolean input and returns a boolean value. The complexity of this function\nis relatively low - there are only two possible input values and two possible\noutput values.</p>\n<p>If we jump to a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo separator=\"true\">,</mo><mi>z</mi><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">f(x: boolean, y: boolean, z: boolean): boolean</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">an</span></span></span></span>\nthen the complexity of this function is higher - there are now <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup><mo>=</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">2^3 = 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">8</span></span></span></span>\npossible input values and two possible output values.</p>\n<p>As we increase the number of input parameters, we increase the number\nof combinations of input values that the function can accept. This\nincreases the complexity of the function:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>c</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><munder><mo>∏</mo><mi>p</mi></munder><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">c(f_i) = \\prod_{p} |p| + |r|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4361em;vertical-align:-1.3861em\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em\"><span style=\"top:-1.9em;margin-left:0em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.05em\"><span class=\"pstrut\" style=\"height:3.05em\"></span><span><span class=\"mop op-symbol large-op\">∏</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3861em\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">r</span><span class=\"mord\">∣</span></span></span></span></span>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is the set of input parameters, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">r</span></span></span></span> is the set of return values,\nand <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|p|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">∣</span></span></span></span> is size of the set of input parameters and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|r|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">r</span><span class=\"mord\">∣</span></span></span></span> is the size of\nthe set of return values. By &quot;size&quot; we  mean the number of &quot;meaningful&quot;\nvalues that a parameter type has. For example, a boolean has two meaningful values,\nbut an integer may have an infinite range of non-meaningful values. In some\nlanguages, like C, it is common for an integer to have meaningful values\nof -1 and 0, and non-meaningful values of all other integers. In the case where\nthe integer is simply a number, we would consider the size of the parameter\nto be 1, while the size of a C-like integer to be the number of &quot;special&quot; cases\nthe integer has.</p>\n<p>Aaron Luu, in his article <a href=\"https://www.luu.io/posts/dont-use-booleans\">Don&#x27;t use boolean</a>\nalludes to this exponential potential for complexity when using boolean\nvalues.</p>\n<h2>Tests as Consumers</h2>\n<p>Interestingly, the tests for an API already act as a consumer and can demonstrate\nthe complexity of an API as it strives to cover all possible branches and use-cases.\nFor our function with 3 boolean inputs, we would need to write 8 tests to cover\nall possible input combinations. A suite of tests that check tons of combinations\nof inputs and outputs is a good indicator that the API is complex.</p>\n<h2>Techniques for Reducing Complexity</h2>\n<p>This is by no means an exhaustive list, but here are some techniques that\ncan help reduce complexity.</p>\n<p>First is to identify if the parameters are truly independent. For example, let&#x27;s take\nthe example:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code>f(x: boolean, y: Data | undefined): boolean\n</code></pre></div>\n<p>If the value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span></span></span></span> is only meaningful when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is true, then we can consider\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span></span></span></span> to be a dependent parameter. If we write out a matrix of possible inputs:</p>\n<ul>\n<li>x: true, y: Data</li>\n<li>x: false, y: Data</li>\n<li>x: true, y: undefined</li>\n<li>x: false, y: undefined</li>\n</ul>\n<p>We can see that the value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">y</span></span></span></span> is only meaningful when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is true.</p>\n<p>When we have dependent parameters, we can consider using the type-system to\nhelp us manage the complexity. For example, we could just simplify the\nfunction to allow only valid inputs:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code>f(x: Data | false): boolean\n</code></pre></div>\n<p>Depending on the values of Data, this simplifies the complexity of the function by\nhalf.</p>\n<p>Another technique is to consider reducing boolean inputs to a single enum-like\ninput type. For example, simplifying 3 boolean parameters into a single\nenum-like parameter:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code>f(x: &#x27;all&#x27;  | &#x27;none&#x27; | &#x27;some&#x27;): boolean\n</code></pre></div>\n<p>This reduces the number of possible input combinations from 8 to 3.</p>\n<h2>Conclusion</h2>\n<p>This is one simple way to measure the complexity of an API, which shows\nthat the bigger the surface area, the more complex the API. The majority\nof this complexity comes from the combinations of input parameters and\nreturn values. By reducing the number of input parameters and return values,\nwe can reduce the complexity of the API.</p>\n<p>This is by no means the only way to measure the complexity of an API, but\nit is a useful way to think about the complexity of an API in terms of\nthe number of possible input and output combinations.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    annotation: \"annotation\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    math: \"math\",\n    mi: \"mi\",\n    mn: \"mn\",\n    mo: \"mo\",\n    mrow: \"mrow\",\n    msub: \"msub\",\n    msup: \"msup\",\n    munder: \"munder\",\n    munderover: \"munderover\",\n    p: \"p\",\n    pre: \"pre\",\n    semantics: \"semantics\",\n    span: \"span\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Maintaining growing software is challenging. Poorly architected APIs and\\nincorrect abstractions can significantly impact the ability for engineering\\nteams to deliver new features in a timely manner. If we consider an\\nAPI's complexity as being a significant contributor to its overhead,\\nmaintainability, and ease of use, then it becomes a question of how\\ndo we best measure this complexity so that we can make informed decisions\\nabout how to refactor and improve our APIs.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We will consider an API as an abstract set of functions, each with a\\ndefined set of input parameters and outputs. An API can represent a library,\\nan interface, or a set of functions in a design system.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"An API as a Surface\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A good API minimizes the complexity that a consumer needs to understand\\nin order to use it. If we think of an  API as an abstract two dimensional\\nsurface, then the complexity of the internals of the API - all the code\\nthat is required to implement the API - is the area of that surface.\\nThe API that is exposed as functions, input parameters, and outputs is\\nthe perimeter of that surface. This follows from the concept that an\\nAPI should act as a \\\"black box\\\" - the consumer should not need to know\\nhow the API is implemented in order to use it.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"From this metaphor, we can also think of the \\\"best\\\" API as one that\\nminimizes the perimeter of the surface while maximizing the necessary\\narea of the surface.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Complexity of a Surface\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The perceived complexity of an API can be influenced by the number of functions,\\nthe number of parameters, and the number of return values.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We will not be considering the internal state of the services that consumers\\nmay need to manage. Instead, we will focus on \\\"idempotent\\\" functions - those\\nthat do not have side effects and do not require any state to be managed.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Abstractly, we can denote the API Surface \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"S\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"S\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6833em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.05764em\"\n              },\n              children: \"S\"\n            })]\n          })\n        })]\n      }), \" as a set of functions \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f_i\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), \",\\nwhere the complexity of each function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f_i\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), \" is given by \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"c\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"c(f_i)\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })\n        })]\n      }), \", and the\\noverall complexity of the surface is given by:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"C\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsx(_components.mi, {\n                  children: \"S\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsxs(_components.munderover, {\n                  children: [_jsx(_components.mo, {\n                    children: \"∑\"\n                  }), _jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"i\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mn, {\n                      children: \"1\"\n                    })]\n                  }), _jsx(_components.mi, {\n                    children: \"n\"\n                  })]\n                }), _jsx(_components.mi, {\n                  children: \"c\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"C(S) = \\\\sum_{i=1}^{n} c(f_i)\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.07153em\"\n              },\n              children: \"C\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.05764em\"\n              },\n              children: \"S\"\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.9291em\",\n                verticalAlign: \"-1.2777em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.6514em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-1.8723em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsxs(_components.span, {\n                          className: \"mord mtight\",\n                          children: [_jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          }), _jsx(_components.span, {\n                            className: \"mrel mtight\",\n                            children: \"=\"\n                          }), _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"1\"\n                          })]\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3.05em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop op-symbol large-op\",\n                          children: \"∑\"\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-4.3em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsx(_components.span, {\n                          className: \"mord mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"n\"\n                          })\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.2777em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"where \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"n\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"n\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"n\"\n            })]\n          })\n        })]\n      }), \" is the number of functions in the surface.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As we increase the number of functions in the surface, the complexity of the\\nsurface is also expected to increase.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Complexity of a Function\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The complexity of a function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f_i\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      }), \" can be influenced by the number of input\\nparameters, their values, and the number of return values.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Take for example a function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"f\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsx(_components.mi, {\n                  children: \"x\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f(x: boolean): boolean\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.10764em\"\n              },\n              children: \"f\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            })]\n          })]\n        })]\n      }), \" that takes a single\\nboolean input and returns a boolean value. The complexity of this function\\nis relatively low - there are only two possible input values and two possible\\noutput values.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If we jump to a function \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"f\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsx(_components.mi, {\n                  children: \"x\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), _jsx(_components.mi, {\n                  children: \"y\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  separator: \"true\",\n                  children: \",\"\n                }), _jsx(_components.mi, {\n                  children: \"z\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \":\"\n                }), _jsx(_components.mi, {\n                  children: \"b\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"o\"\n                }), _jsx(_components.mi, {\n                  children: \"l\"\n                }), _jsx(_components.mi, {\n                  children: \"e\"\n                }), _jsx(_components.mi, {\n                  children: \"a\"\n                }), _jsx(_components.mi, {\n                  children: \"n\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"f(x: boolean, y: boolean, z: boolean): boolean\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.10764em\"\n              },\n              children: \"f\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8889em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mpunct\",\n              children: \",\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.04398em\"\n              },\n              children: \"z\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"b\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"oo\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.01968em\"\n              },\n              children: \"l\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"an\"\n            })]\n          })]\n        })]\n      }), \"\\nthen the complexity of this function is higher - there are now \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsxs(_components.msup, {\n                  children: [_jsx(_components.mn, {\n                    children: \"2\"\n                  }), _jsx(_components.mn, {\n                    children: \"3\"\n                  })]\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsx(_components.mn, {\n                  children: \"8\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"2^3 = 8\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.8141em\"\n              }\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord\",\n                children: \"2\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsx(_components.span, {\n                  className: \"vlist-t\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.8141em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-3.063em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mtight\",\n                            children: \"3\"\n                          })\n                        })]\n                      })\n                    })\n                  })\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.6444em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"8\"\n            })]\n          })]\n        })]\n      }), \"\\npossible input values and two possible output values.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As we increase the number of input parameters, we increase the number\\nof combinations of input values that the function can accept. This\\nincreases the complexity of the function:\"\n    }), \"\\n\", _jsx(_components.span, {\n      className: \"katex-display\",\n      children: _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            display: \"block\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  children: \"c\"\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \"(\"\n                }), _jsxs(_components.msub, {\n                  children: [_jsx(_components.mi, {\n                    children: \"f\"\n                  }), _jsx(_components.mi, {\n                    children: \"i\"\n                  })]\n                }), _jsx(_components.mo, {\n                  stretchy: \"false\",\n                  children: \")\"\n                }), _jsx(_components.mo, {\n                  children: \"=\"\n                }), _jsxs(_components.munder, {\n                  children: [_jsx(_components.mo, {\n                    children: \"∏\"\n                  }), _jsx(_components.mi, {\n                    children: \"p\"\n                  })]\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"p\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mo, {\n                  children: \"+\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"r\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"c(f_i) = \\\\prod_{p} |p| + |r|\"\n              })]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: [_jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"c\"\n            }), _jsx(_components.span, {\n              className: \"mopen\",\n              children: \"(\"\n            }), _jsxs(_components.span, {\n              className: \"mord\",\n              children: [_jsx(_components.span, {\n                className: \"mord mathnormal\",\n                style: {\n                  marginRight: \"0.10764em\"\n                },\n                children: \"f\"\n              }), _jsx(_components.span, {\n                className: \"msupsub\",\n                children: _jsxs(_components.span, {\n                  className: \"vlist-t vlist-t2\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist-r\",\n                    children: [_jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.3117em\"\n                      },\n                      children: _jsxs(_components.span, {\n                        style: {\n                          top: \"-2.55em\",\n                          marginLeft: \"-0.1076em\",\n                          marginRight: \"0.05em\"\n                        },\n                        children: [_jsx(_components.span, {\n                          className: \"pstrut\",\n                          style: {\n                            height: \"2.7em\"\n                          }\n                        }), _jsx(_components.span, {\n                          className: \"sizing reset-size6 size3 mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"i\"\n                          })\n                        })]\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"vlist-s\",\n                      children: \"​\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-r\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist\",\n                      style: {\n                        height: \"0.15em\"\n                      },\n                      children: _jsx(_components.span, {})\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(_components.span, {\n              className: \"mclose\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mrel\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2778em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"2.4361em\",\n                verticalAlign: \"-1.3861em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mop op-limits\",\n              children: _jsxs(_components.span, {\n                className: \"vlist-t vlist-t2\",\n                children: [_jsxs(_components.span, {\n                  className: \"vlist-r\",\n                  children: [_jsxs(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.05em\"\n                    },\n                    children: [_jsxs(_components.span, {\n                      style: {\n                        top: \"-1.9em\",\n                        marginLeft: \"0em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        className: \"sizing reset-size6 size3 mtight\",\n                        children: _jsx(_components.span, {\n                          className: \"mord mtight\",\n                          children: _jsx(_components.span, {\n                            className: \"mord mathnormal mtight\",\n                            children: \"p\"\n                          })\n                        })\n                      })]\n                    }), _jsxs(_components.span, {\n                      style: {\n                        top: \"-3.05em\"\n                      },\n                      children: [_jsx(_components.span, {\n                        className: \"pstrut\",\n                        style: {\n                          height: \"3.05em\"\n                        }\n                      }), _jsx(_components.span, {\n                        children: _jsx(_components.span, {\n                          className: \"mop op-symbol large-op\",\n                          children: \"∏\"\n                        })\n                      })]\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"vlist-s\",\n                    children: \"​\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"vlist-r\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist\",\n                    style: {\n                      height: \"1.3861em\"\n                    },\n                    children: _jsx(_components.span, {})\n                  })\n                })]\n              })\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.1667em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"p\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mbin\",\n              children: \"+\"\n            }), _jsx(_components.span, {\n              className: \"mspace\",\n              style: {\n                marginRight: \"0.2222em\"\n              }\n            })]\n          }), _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"where \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"p\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"p\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"p\"\n            })]\n          })\n        })]\n      }), \" is the set of input parameters, \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"r\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"r\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            })]\n          })\n        })]\n      }), \" is the set of return values,\\nand \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"p\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"|p|\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"p\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            })]\n          })\n        })]\n      }), \" is size of the set of input parameters and \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsxs(_components.mrow, {\n                children: [_jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                }), _jsx(_components.mi, {\n                  children: \"r\"\n                }), _jsx(_components.mi, {\n                  mathvariant: \"normal\",\n                  children: \"∣\"\n                })]\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"|r|\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"1em\",\n                verticalAlign: \"-0.25em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.02778em\"\n              },\n              children: \"r\"\n            }), _jsx(_components.span, {\n              className: \"mord\",\n              children: \"∣\"\n            })]\n          })\n        })]\n      }), \" is the size of\\nthe set of return values. By \\\"size\\\" we  mean the number of \\\"meaningful\\\"\\nvalues that a parameter type has. For example, a boolean has two meaningful values,\\nbut an integer may have an infinite range of non-meaningful values. In some\\nlanguages, like C, it is common for an integer to have meaningful values\\nof -1 and 0, and non-meaningful values of all other integers. In the case where\\nthe integer is simply a number, we would consider the size of the parameter\\nto be 1, while the size of a C-like integer to be the number of \\\"special\\\" cases\\nthe integer has.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Aaron Luu, in his article \", _jsx(_components.a, {\n        href: \"https://www.luu.io/posts/dont-use-booleans\",\n        children: \"Don't use boolean\"\n      }), \"\\nalludes to this exponential potential for complexity when using boolean\\nvalues.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tests as Consumers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Interestingly, the tests for an API already act as a consumer and can demonstrate\\nthe complexity of an API as it strives to cover all possible branches and use-cases.\\nFor our function with 3 boolean inputs, we would need to write 8 tests to cover\\nall possible input combinations. A suite of tests that check tons of combinations\\nof inputs and outputs is a good indicator that the API is complex.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Techniques for Reducing Complexity\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is by no means an exhaustive list, but here are some techniques that\\ncan help reduce complexity.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"First is to identify if the parameters are truly independent. For example, let's take\\nthe example:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(x: boolean, y: Data | undefined): boolean\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the value of \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"y\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"y\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            })]\n          })\n        })]\n      }), \" is only meaningful when \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"x\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"x\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            })]\n          })\n        })]\n      }), \" is true, then we can consider\\n\", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"y\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"y\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            })]\n          })\n        })]\n      }), \" to be a dependent parameter. If we write out a matrix of possible inputs:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"x: true, y: Data\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"x: false, y: Data\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"x: true, y: undefined\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"x: false, y: undefined\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can see that the value of \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"y\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"y\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.625em\",\n                verticalAlign: \"-0.1944em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              style: {\n                marginRight: \"0.03588em\"\n              },\n              children: \"y\"\n            })]\n          })\n        })]\n      }), \" is only meaningful when \", _jsxs(_components.span, {\n        className: \"katex\",\n        children: [_jsx(_components.span, {\n          className: \"katex-mathml\",\n          children: _jsx(_components.math, {\n            xmlns: \"http://www.w3.org/1998/Math/MathML\",\n            children: _jsxs(_components.semantics, {\n              children: [_jsx(_components.mrow, {\n                children: _jsx(_components.mi, {\n                  children: \"x\"\n                })\n              }), _jsx(_components.annotation, {\n                encoding: \"application/x-tex\",\n                children: \"x\"\n              })]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"katex-html\",\n          \"aria-hidden\": \"true\",\n          children: _jsxs(_components.span, {\n            className: \"base\",\n            children: [_jsx(_components.span, {\n              className: \"strut\",\n              style: {\n                height: \"0.4306em\"\n              }\n            }), _jsx(_components.span, {\n              className: \"mord mathnormal\",\n              children: \"x\"\n            })]\n          })\n        })]\n      }), \" is true.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When we have dependent parameters, we can consider using the type-system to\\nhelp us manage the complexity. For example, we could just simplify the\\nfunction to allow only valid inputs:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(x: Data | false): boolean\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Depending on the values of Data, this simplifies the complexity of the function by\\nhalf.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Another technique is to consider reducing boolean inputs to a single enum-like\\ninput type. For example, simplifying 3 boolean parameters into a single\\nenum-like parameter:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(x: 'all'  | 'none' | 'some'): boolean\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This reduces the number of possible input combinations from 8 to 3.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is one simple way to measure the complexity of an API, which shows\\nthat the bigger the surface area, the more complex the API. The majority\\nof this complexity comes from the combinations of input parameters and\\nreturn values. By reducing the number of input parameters and return values,\\nwe can reduce the complexity of the API.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is by no means the only way to measure the complexity of an API, but\\nit is a useful way to think about the complexity of an API in terms of\\nthe number of possible input and output combinations.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nMaintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI's complexity as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.\n\n","excerptHTML":"<p>Maintaining growing software is challenging. Poorly architected APIs and\nincorrect abstractions can significantly impact the ability for engineering\nteams to deliver new features in a timely manner. If we consider an\nAPI&#x27;s complexity as being a significant contributor to its overhead,\nmaintainability, and ease of use, then it becomes a question of how\ndo we best measure this complexity so that we can make informed decisions\nabout how to refactor and improve our APIs.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Maintaining growing software is challenging. Poorly architected APIs and\\nincorrect abstractions can significantly impact the ability for engineering\\nteams to deliver new features in a timely manner. If we consider an\\nAPI's complexity as being a significant contributor to its overhead,\\nmaintainability, and ease of use, then it becomes a question of how\\ndo we best measure this complexity so that we can make informed decisions\\nabout how to refactor and improve our APIs.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["programming","apis"]},{"slug":"2023-12-08-the-breaking-point","date":"2023-12-08","title":"The Breaking Point - Understanding the performance of your systems","frontmatter":{"title":"The Breaking Point - Understanding the performance of your systems","tags":["architecture","scaling"]},"contentRaw":"\nEvery system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn't magically infinite. It's a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.\n\n![The Breaking Point](/media/2023-12-08-the-breaking-point/splash.png)\n\n## The Myth of Scaling\n\nSoftware engineering often has an optimistic mindset that scaling a service is easy: we just let the more instances of the service be deployed, and voilà, perfect scaling! But the reality is a bit more complex. Instances don't always fire up instantly, services can fail unexpectedly, and not every component can scale indefinitely.\n\nThat's why it's important to understand the limitations of our services. Knowing where the system might buckle under pressure allows us to devise strategies to prevent these breaking points from turning into disasters.\n\nFor example, we may have a public API service with set auto-scaling rules. When the service is hit with many requests, the service spawns additional instances to handle the workload. This ends up working well in most cases, but in the real-world, the service ends up getting hit with huge bursts of requests from downstream users, rather than a steady increase of traffic. When this happens, we scale the service instances up, but now the database gets hit with too many writes and fails over, since the database was originally designed as a read heavy use-case. Of course this is a contrived example, but similar edge-cases commonly appear in complex architectures.\n\nWithout understanding the full system and the constraints of each part, it can be difficult to successfully scale.\n\n## Understanding Server Limitations\n\nA good starting point for finding your system's breaking point is to see how it fares on a single machine. Profile the memory usage when under load, and use load testing to determine how many simultaneous requests the service can handle before performance degrades. To make sense of it all, set some benchmarks:\n\n1. Determine what it means for performance to degrade. In some systems, you may have SLAs for some percentage of requests to complete within a given response time. Other systems may have more leniency.\n2. Use readily available tools to bombard your service with requests and observe the results. For web API services, there are plenty of open source tools that can sustain issuing millions of requests a second and reporting results.\n3. Run the tests multiple times and throw out any outliers in the results. From the rest, understand the peak memory usage, peak disk usage, and peak CPU usage of the service.\n\nOnce you have the information from these types of load tests, it becomes easy to identify indicators that a service will begin to degrade. For some services it is CPU usage that will increase more than the other resources. For some services, memory can get exhausted first.\n\nThe load testing will also be a good indicator of how many requests a single instance of your service can handle before falling over.\n\n## Scaling Strategies\n\nWhen dealing with monolithic services or hefty microservices, you may find from load testing that just vertically scaling the service by adding more hardware is more cost efficient than replicating the instance.\n\nFor smaller service that use less memory and CPU footprint, it may make more sense to horizontally scale the service with many additional smaller servers being deployed.\n\nCloud services like AWS, Azure, and GCP help enable either decision. With AWS, there are many different instance types to get the right size for your specific service deployment. With the right size picked out, auto-scaling becomes a more budget-friendly option, as you're only spinning up instances that meet your specific resource requirements.\n\nCloud providers additionally have ways to detect when to auto-scale an instance based on resource usage, making load testing very informative to tune these values.\n\n## Conclusion\n\nScaling isn't a one-size-fits-all solution. It's about understanding the unique limitations and potential of your system. Through careful analysis, load testing, and a bit of strategic thinking, you can develop a scaling strategy that not only meets your performance needs but also keeps an eye on the cost of your system. Whether it's beefing up your hardware or multiplying smaller instances, the key lies in making informed, tailored decisions for your system's specific demands and quirks.\n","contentHTML":"<p>Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn&#x27;t magically infinite. It&#x27;s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.</p>\n<p><img alt=\"The Breaking Point\" src=\"/media/2023-12-08-the-breaking-point/splash.png\" style=\"max-height:500px;margin:auto;text-align:center\"/></p>\n<h2>The Myth of Scaling</h2>\n<p>Software engineering often has an optimistic mindset that scaling a service is easy: we just let the more instances of the service be deployed, and voilà, perfect scaling! But the reality is a bit more complex. Instances don&#x27;t always fire up instantly, services can fail unexpectedly, and not every component can scale indefinitely.</p>\n<p>That&#x27;s why it&#x27;s important to understand the limitations of our services. Knowing where the system might buckle under pressure allows us to devise strategies to prevent these breaking points from turning into disasters.</p>\n<p>For example, we may have a public API service with set auto-scaling rules. When the service is hit with many requests, the service spawns additional instances to handle the workload. This ends up working well in most cases, but in the real-world, the service ends up getting hit with huge bursts of requests from downstream users, rather than a steady increase of traffic. When this happens, we scale the service instances up, but now the database gets hit with too many writes and fails over, since the database was originally designed as a read heavy use-case. Of course this is a contrived example, but similar edge-cases commonly appear in complex architectures.</p>\n<p>Without understanding the full system and the constraints of each part, it can be difficult to successfully scale.</p>\n<h2>Understanding Server Limitations</h2>\n<p>A good starting point for finding your system&#x27;s breaking point is to see how it fares on a single machine. Profile the memory usage when under load, and use load testing to determine how many simultaneous requests the service can handle before performance degrades. To make sense of it all, set some benchmarks:</p>\n<ol>\n<li>Determine what it means for performance to degrade. In some systems, you may have SLAs for some percentage of requests to complete within a given response time. Other systems may have more leniency.</li>\n<li>Use readily available tools to bombard your service with requests and observe the results. For web API services, there are plenty of open source tools that can sustain issuing millions of requests a second and reporting results.</li>\n<li>Run the tests multiple times and throw out any outliers in the results. From the rest, understand the peak memory usage, peak disk usage, and peak CPU usage of the service.</li>\n</ol>\n<p>Once you have the information from these types of load tests, it becomes easy to identify indicators that a service will begin to degrade. For some services it is CPU usage that will increase more than the other resources. For some services, memory can get exhausted first.</p>\n<p>The load testing will also be a good indicator of how many requests a single instance of your service can handle before falling over.</p>\n<h2>Scaling Strategies</h2>\n<p>When dealing with monolithic services or hefty microservices, you may find from load testing that just vertically scaling the service by adding more hardware is more cost efficient than replicating the instance.</p>\n<p>For smaller service that use less memory and CPU footprint, it may make more sense to horizontally scale the service with many additional smaller servers being deployed.</p>\n<p>Cloud services like AWS, Azure, and GCP help enable either decision. With AWS, there are many different instance types to get the right size for your specific service deployment. With the right size picked out, auto-scaling becomes a more budget-friendly option, as you&#x27;re only spinning up instances that meet your specific resource requirements.</p>\n<p>Cloud providers additionally have ways to detect when to auto-scale an instance based on resource usage, making load testing very informative to tune these values.</p>\n<h2>Conclusion</h2>\n<p>Scaling isn&#x27;t a one-size-fits-all solution. It&#x27;s about understanding the unique limitations and potential of your system. Through careful analysis, load testing, and a bit of strategic thinking, you can develop a scaling strategy that not only meets your performance needs but also keeps an eye on the cost of your system. Whether it&#x27;s beefing up your hardware or multiplying smaller instances, the key lies in making informed, tailored decisions for your system&#x27;s specific demands and quirks.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h2: \"h2\",\n    img: \"img\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn't magically infinite. It's a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/media/2023-12-08-the-breaking-point/splash.png\",\n        alt: \"The Breaking Point\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The Myth of Scaling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Software engineering often has an optimistic mindset that scaling a service is easy: we just let the more instances of the service be deployed, and voilà, perfect scaling! But the reality is a bit more complex. Instances don't always fire up instantly, services can fail unexpectedly, and not every component can scale indefinitely.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"That's why it's important to understand the limitations of our services. Knowing where the system might buckle under pressure allows us to devise strategies to prevent these breaking points from turning into disasters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example, we may have a public API service with set auto-scaling rules. When the service is hit with many requests, the service spawns additional instances to handle the workload. This ends up working well in most cases, but in the real-world, the service ends up getting hit with huge bursts of requests from downstream users, rather than a steady increase of traffic. When this happens, we scale the service instances up, but now the database gets hit with too many writes and fails over, since the database was originally designed as a read heavy use-case. Of course this is a contrived example, but similar edge-cases commonly appear in complex architectures.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Without understanding the full system and the constraints of each part, it can be difficult to successfully scale.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Understanding Server Limitations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A good starting point for finding your system's breaking point is to see how it fares on a single machine. Profile the memory usage when under load, and use load testing to determine how many simultaneous requests the service can handle before performance degrades. To make sense of it all, set some benchmarks:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Determine what it means for performance to degrade. In some systems, you may have SLAs for some percentage of requests to complete within a given response time. Other systems may have more leniency.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use readily available tools to bombard your service with requests and observe the results. For web API services, there are plenty of open source tools that can sustain issuing millions of requests a second and reporting results.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Run the tests multiple times and throw out any outliers in the results. From the rest, understand the peak memory usage, peak disk usage, and peak CPU usage of the service.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once you have the information from these types of load tests, it becomes easy to identify indicators that a service will begin to degrade. For some services it is CPU usage that will increase more than the other resources. For some services, memory can get exhausted first.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The load testing will also be a good indicator of how many requests a single instance of your service can handle before falling over.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Scaling Strategies\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When dealing with monolithic services or hefty microservices, you may find from load testing that just vertically scaling the service by adding more hardware is more cost efficient than replicating the instance.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For smaller service that use less memory and CPU footprint, it may make more sense to horizontally scale the service with many additional smaller servers being deployed.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cloud services like AWS, Azure, and GCP help enable either decision. With AWS, there are many different instance types to get the right size for your specific service deployment. With the right size picked out, auto-scaling becomes a more budget-friendly option, as you're only spinning up instances that meet your specific resource requirements.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cloud providers additionally have ways to detect when to auto-scale an instance based on resource usage, making load testing very informative to tune these values.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Scaling isn't a one-size-fits-all solution. It's about understanding the unique limitations and potential of your system. Through careful analysis, load testing, and a bit of strategic thinking, you can develop a scaling strategy that not only meets your performance needs but also keeps an eye on the cost of your system. Whether it's beefing up your hardware or multiplying smaller instances, the key lies in making informed, tailored decisions for your system's specific demands and quirks.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nEvery system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn't magically infinite. It's a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.","excerptHTML":"<p>Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn&#x27;t magically infinite. It&#x27;s a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Every system has its limits. When designing and architecting systems, sometimes we as engineers like to assume things can scale infinitely. Maybe we can use larger machines, or maybe we can deploy more instances of a service. But even trying to scale systems isn't magically infinite. It's a smart move to understand the limitations of what we are building upfront so we can make better technology choices, and squeeze the performance out of our existing systems.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["architecture","scaling"]},{"slug":"2023-11-19-reboot-clarityhub","date":"2023-11-19","title":"Looking back on Clarity Hub","frontmatter":{"title":"Looking back on Clarity Hub","tags":["clarityhub","startups"]},"contentRaw":"\nIn my projects list on this blog is a set of projects related to Clarity Hub. This was a startup I did with a group of friends where we aimed to create software to enable software product teams to gather customer feedback, and then action on it.\n\nI've been thinking about rebooting Clarity Hub for some time. When I was devoting my time to the Clarity Hub startup, the offering was split into two parts: 1. Interviewing software for product teams, and 2. an AI and NLP set of APIs for inference and predictions.\n\nWe ended up open sourcing as much of our Clarity Hub code as we could: [Clarity Hub on Github](https://github.com/Clarityhub). This included all of our original code pivots as well. While interviewing with a few startups, a couple asked me for details on Clarity Hub and how we approached the problem domain, architectural decisions, and software design. All these notes ended up as part of the README: [Architecture notes on Github](https://github.com/clarityhub/clarityhub-server-core).\n\nLooking at all these diagrams, seeing all the incredible work I did with my small team on Clarity Hub, I can see that a lot has changed since we tackled this problem.\n\nThe first major change is that Notion has become a common name in note-taking. I consider myself an early adopter of Notion and have referred many friends over to it. Clarity Hub as a Notion for Product Teams seems very useless now, especially with the second change in consideration.\n\nThe second major change being how far AI and NLP came within just a few years. Focusing on this as our differentiator is now irrelevant. Notion has released their API, new AI tools, and a plethora of other features. And while Notion doesn't provide an easy way to record, video call, automatically transcribe meetings, and pull topics from conversations, this seems pretty trivial to add as a Notion extension. I think Dovetail will be in the same boat. As OpenAI continues to provide more powerful models, and makes them easy to use, well-positioned apps like Notion will be able to continue to get better.\n\nBut not is all lost, part of failing as a start-up is at least learning a lot.\n\n## Microservices, but not really\n\nLooking back on our startup adventure, one thing I'd recommend for a new business just trying to start out is to think about microservices, but not fully committing to the complexity of microservices. We approached this by making the entire application in Serverless, using lambdas for each main endpoint that was needed as lambdas to handle asynchronous services. This let us share code, but move quickly.\n\n## Billing\n\nBilling is one of those items that can easily become a time-sink – and it did. Looking back, I feel like we wasted so much time, effort, and thought on billing. If I had to do Clarity Hub over again, I'd ignore billing for just Free Trial and Contact Sales for custom billing.\n\nWithout customers, there's no point in building a billing system, especially when you don't know what type of customers you will have.\n\nWe definitely learned a lot about Stripe and how to build in eventing into our systems to help support billing cycles, upgrading, and more.\n\nWe also spent very little time looking into alternative billing providers, since we were part of Stripe Atlas. One that has always interested me was Lago, since it is available as Open Source and a hosted solution.\n\n## Conflict-free replicated data types\n\nWe originally used Slate for our editor, and as is usual in programming, they went through a major version bump right after we finished our original implementation. I wish we had investigated Conflict-free replicated data types for this more and built-in real-time multi-user editing for notes early in the development stage.\n\nImplementing a basic solution for this would have been well worth it from a learning perspective, and from a code-reusability perspective. As is, a lot of the editor code is obsolete and tightly coupled with the specific version of slate that we used.\n\n## Conclusion\n\nIf I could do Clarity Hub all over again, I would. It was a great learning and growing experience for me, and I've often looked back on what we did and thought about rebooting Clarity Hub. But when I look around the current technology landscape, I think the scope of the product and its main differentiators would have to change dramatically.\n","contentHTML":"<p>In my projects list on this blog is a set of projects related to Clarity Hub. This was a startup I did with a group of friends where we aimed to create software to enable software product teams to gather customer feedback, and then action on it.</p>\n<p>I&#x27;ve been thinking about rebooting Clarity Hub for some time. When I was devoting my time to the Clarity Hub startup, the offering was split into two parts: 1. Interviewing software for product teams, and 2. an AI and NLP set of APIs for inference and predictions.</p>\n<p>We ended up open sourcing as much of our Clarity Hub code as we could: <a href=\"https://github.com/Clarityhub\">Clarity Hub on Github</a>. This included all of our original code pivots as well. While interviewing with a few startups, a couple asked me for details on Clarity Hub and how we approached the problem domain, architectural decisions, and software design. All these notes ended up as part of the README: <a href=\"https://github.com/clarityhub/clarityhub-server-core\">Architecture notes on Github</a>.</p>\n<p>Looking at all these diagrams, seeing all the incredible work I did with my small team on Clarity Hub, I can see that a lot has changed since we tackled this problem.</p>\n<p>The first major change is that Notion has become a common name in note-taking. I consider myself an early adopter of Notion and have referred many friends over to it. Clarity Hub as a Notion for Product Teams seems very useless now, especially with the second change in consideration.</p>\n<p>The second major change being how far AI and NLP came within just a few years. Focusing on this as our differentiator is now irrelevant. Notion has released their API, new AI tools, and a plethora of other features. And while Notion doesn&#x27;t provide an easy way to record, video call, automatically transcribe meetings, and pull topics from conversations, this seems pretty trivial to add as a Notion extension. I think Dovetail will be in the same boat. As OpenAI continues to provide more powerful models, and makes them easy to use, well-positioned apps like Notion will be able to continue to get better.</p>\n<p>But not is all lost, part of failing as a start-up is at least learning a lot.</p>\n<h2>Microservices, but not really</h2>\n<p>Looking back on our startup adventure, one thing I&#x27;d recommend for a new business just trying to start out is to think about microservices, but not fully committing to the complexity of microservices. We approached this by making the entire application in Serverless, using lambdas for each main endpoint that was needed as lambdas to handle asynchronous services. This let us share code, but move quickly.</p>\n<h2>Billing</h2>\n<p>Billing is one of those items that can easily become a time-sink – and it did. Looking back, I feel like we wasted so much time, effort, and thought on billing. If I had to do Clarity Hub over again, I&#x27;d ignore billing for just Free Trial and Contact Sales for custom billing.</p>\n<p>Without customers, there&#x27;s no point in building a billing system, especially when you don&#x27;t know what type of customers you will have.</p>\n<p>We definitely learned a lot about Stripe and how to build in eventing into our systems to help support billing cycles, upgrading, and more.</p>\n<p>We also spent very little time looking into alternative billing providers, since we were part of Stripe Atlas. One that has always interested me was Lago, since it is available as Open Source and a hosted solution.</p>\n<h2>Conflict-free replicated data types</h2>\n<p>We originally used Slate for our editor, and as is usual in programming, they went through a major version bump right after we finished our original implementation. I wish we had investigated Conflict-free replicated data types for this more and built-in real-time multi-user editing for notes early in the development stage.</p>\n<p>Implementing a basic solution for this would have been well worth it from a learning perspective, and from a code-reusability perspective. As is, a lot of the editor code is obsolete and tightly coupled with the specific version of slate that we used.</p>\n<h2>Conclusion</h2>\n<p>If I could do Clarity Hub all over again, I would. It was a great learning and growing experience for me, and I&#x27;ve often looked back on what we did and thought about rebooting Clarity Hub. But when I look around the current technology landscape, I think the scope of the product and its main differentiators would have to change dramatically.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h2: \"h2\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In my projects list on this blog is a set of projects related to Clarity Hub. This was a startup I did with a group of friends where we aimed to create software to enable software product teams to gather customer feedback, and then action on it.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I've been thinking about rebooting Clarity Hub for some time. When I was devoting my time to the Clarity Hub startup, the offering was split into two parts: 1. Interviewing software for product teams, and 2. an AI and NLP set of APIs for inference and predictions.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We ended up open sourcing as much of our Clarity Hub code as we could: \", _jsx(_components.a, {\n        href: \"https://github.com/Clarityhub\",\n        children: \"Clarity Hub on Github\"\n      }), \". This included all of our original code pivots as well. While interviewing with a few startups, a couple asked me for details on Clarity Hub and how we approached the problem domain, architectural decisions, and software design. All these notes ended up as part of the README: \", _jsx(_components.a, {\n        href: \"https://github.com/clarityhub/clarityhub-server-core\",\n        children: \"Architecture notes on Github\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Looking at all these diagrams, seeing all the incredible work I did with my small team on Clarity Hub, I can see that a lot has changed since we tackled this problem.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The first major change is that Notion has become a common name in note-taking. I consider myself an early adopter of Notion and have referred many friends over to it. Clarity Hub as a Notion for Product Teams seems very useless now, especially with the second change in consideration.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The second major change being how far AI and NLP came within just a few years. Focusing on this as our differentiator is now irrelevant. Notion has released their API, new AI tools, and a plethora of other features. And while Notion doesn't provide an easy way to record, video call, automatically transcribe meetings, and pull topics from conversations, this seems pretty trivial to add as a Notion extension. I think Dovetail will be in the same boat. As OpenAI continues to provide more powerful models, and makes them easy to use, well-positioned apps like Notion will be able to continue to get better.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But not is all lost, part of failing as a start-up is at least learning a lot.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Microservices, but not really\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Looking back on our startup adventure, one thing I'd recommend for a new business just trying to start out is to think about microservices, but not fully committing to the complexity of microservices. We approached this by making the entire application in Serverless, using lambdas for each main endpoint that was needed as lambdas to handle asynchronous services. This let us share code, but move quickly.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Billing\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Billing is one of those items that can easily become a time-sink – and it did. Looking back, I feel like we wasted so much time, effort, and thought on billing. If I had to do Clarity Hub over again, I'd ignore billing for just Free Trial and Contact Sales for custom billing.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Without customers, there's no point in building a billing system, especially when you don't know what type of customers you will have.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We definitely learned a lot about Stripe and how to build in eventing into our systems to help support billing cycles, upgrading, and more.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We also spent very little time looking into alternative billing providers, since we were part of Stripe Atlas. One that has always interested me was Lago, since it is available as Open Source and a hosted solution.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conflict-free replicated data types\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We originally used Slate for our editor, and as is usual in programming, they went through a major version bump right after we finished our original implementation. I wish we had investigated Conflict-free replicated data types for this more and built-in real-time multi-user editing for notes early in the development stage.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Implementing a basic solution for this would have been well worth it from a learning perspective, and from a code-reusability perspective. As is, a lot of the editor code is obsolete and tightly coupled with the specific version of slate that we used.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If I could do Clarity Hub all over again, I would. It was a great learning and growing experience for me, and I've often looked back on what we did and thought about rebooting Clarity Hub. But when I look around the current technology landscape, I think the scope of the product and its main differentiators would have to change dramatically.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nIn my projects list on this blog is a set of projects related to Clarity Hub. This was a startup I did with a group of friends where we aimed to create software to enable software product teams to gather customer feedback, and then action on it.","excerptHTML":"<p>In my projects list on this blog is a set of projects related to Clarity Hub. This was a startup I did with a group of friends where we aimed to create software to enable software product teams to gather customer feedback, and then action on it.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"In my projects list on this blog is a set of projects related to Clarity Hub. This was a startup I did with a group of friends where we aimed to create software to enable software product teams to gather customer feedback, and then action on it.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["clarityhub","startups"]},{"slug":"2023-09-24-impostor-syndrome","date":"2023-09-24","title":"In Good Company, Impostor Syndrome","frontmatter":{"title":"In Good Company, Impostor Syndrome","tags":["career"]},"contentRaw":"\nWe've all felt it at some point in our careers: that dreaded feeling of impostor syndrome kicking in as we find ourselves in over our heads. Questions like, \"Am I truly qualified for this?\" and \"Are my peers facing the same challenges?\" often plague our minds.\n\nImpostor syndrome is such a universal experience that countless articles, conference talks, and books have been dedicated to the topic.\n\nBut is this just a human emotion? I think impostor syndrome also applies to startups and companies as well. While a lot less universal, some of us in the tech world have had the misfortune of working at such impostor syndrome companies. And that anxiety manifests itself into doubt in the employees, bringing everyone down.\n\n> For example, many startups use Jira because large companies use Jira.\n>\n> - https://blog.johnqian.com/startup-spark\n\nWhether or not you like JIRA, the startup impostor syndrome manifests itself in similar ways: pick safe tech that larger companies use. It must be good because the larger company we think is successful uses it. Emulate success and surely we will be successful.\n\nOr it may show up in processes. A manager comes into a startup from a large successful company and blindly imposes large corporate processes to the small company. Everything slows down, dampening the enthusiasm of the team. Emulate the processes of a large company and surely we will be successful.\n\nThis mindset isn't new. The old adage \"[No one has ever been fired for buying IBM](https://www.origina.com/blog/nobody-ever-got-fired-for-buying-ibm)\" highlights the tendency to play it safe in the face of doubt. When we have doubt, even as a company, we like to play it safe; but, innovation and large payoffs don't happen from playing it safe. They come from risk and opportunity.\n\nWhen we play it too safe, too cautiously, we are giving into that impostor syndrome and settling for good enough. In our personal lives and in business, emulating success is usually just a facade for fear of risk. It's difficult to go out there and create new processes when you are so used to an old process you learned at a larger company. It's difficult to go out there and pick a technology that no one is using compared to one that a large company is using. And it's difficult to go out there and solve problems you think are over your head.\n\nThat feeling of impostor syndrome is good. It means you are pushing your limits and getting out of your comfort zone. You are tackling problems you haven't experienced before. And if you don't just try to emulate others, you might make mistakes, but they are your learning opportunities for growth. Then you can look back and see how far you've come, not by playing it safe and fearing impostor syndrome, but by embracing it.\n","contentHTML":"<p>We&#x27;ve all felt it at some point in our careers: that dreaded feeling of impostor syndrome kicking in as we find ourselves in over our heads. Questions like, &quot;Am I truly qualified for this?&quot; and &quot;Are my peers facing the same challenges?&quot; often plague our minds.</p>\n<p>Impostor syndrome is such a universal experience that countless articles, conference talks, and books have been dedicated to the topic.</p>\n<p>But is this just a human emotion? I think impostor syndrome also applies to startups and companies as well. While a lot less universal, some of us in the tech world have had the misfortune of working at such impostor syndrome companies. And that anxiety manifests itself into doubt in the employees, bringing everyone down.</p>\n<blockquote class=\"border-l-4 border-gray-300 pl-4\">\n<p>For example, many startups use Jira because large companies use Jira.</p>\n<ul>\n<li><a href=\"https://blog.johnqian.com/startup-spark\">https://blog.johnqian.com/startup-spark</a></li>\n</ul>\n</blockquote>\n<p>Whether or not you like JIRA, the startup impostor syndrome manifests itself in similar ways: pick safe tech that larger companies use. It must be good because the larger company we think is successful uses it. Emulate success and surely we will be successful.</p>\n<p>Or it may show up in processes. A manager comes into a startup from a large successful company and blindly imposes large corporate processes to the small company. Everything slows down, dampening the enthusiasm of the team. Emulate the processes of a large company and surely we will be successful.</p>\n<p>This mindset isn&#x27;t new. The old adage &quot;<a href=\"https://www.origina.com/blog/nobody-ever-got-fired-for-buying-ibm\">No one has ever been fired for buying IBM</a>&quot; highlights the tendency to play it safe in the face of doubt. When we have doubt, even as a company, we like to play it safe; but, innovation and large payoffs don&#x27;t happen from playing it safe. They come from risk and opportunity.</p>\n<p>When we play it too safe, too cautiously, we are giving into that impostor syndrome and settling for good enough. In our personal lives and in business, emulating success is usually just a facade for fear of risk. It&#x27;s difficult to go out there and create new processes when you are so used to an old process you learned at a larger company. It&#x27;s difficult to go out there and pick a technology that no one is using compared to one that a large company is using. And it&#x27;s difficult to go out there and solve problems you think are over your head.</p>\n<p>That feeling of impostor syndrome is good. It means you are pushing your limits and getting out of your comfort zone. You are tackling problems you haven&#x27;t experienced before. And if you don&#x27;t just try to emulate others, you might make mistakes, but they are your learning opportunities for growth. Then you can look back and see how far you&#x27;ve come, not by playing it safe and fearing impostor syndrome, but by embracing it.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"We've all felt it at some point in our careers: that dreaded feeling of impostor syndrome kicking in as we find ourselves in over our heads. Questions like, \\\"Am I truly qualified for this?\\\" and \\\"Are my peers facing the same challenges?\\\" often plague our minds.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Impostor syndrome is such a universal experience that countless articles, conference talks, and books have been dedicated to the topic.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But is this just a human emotion? I think impostor syndrome also applies to startups and companies as well. While a lot less universal, some of us in the tech world have had the misfortune of working at such impostor syndrome companies. And that anxiety manifests itself into doubt in the employees, bringing everyone down.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"For example, many startups use Jira because large companies use Jira.\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://blog.johnqian.com/startup-spark\",\n            children: \"https://blog.johnqian.com/startup-spark\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Whether or not you like JIRA, the startup impostor syndrome manifests itself in similar ways: pick safe tech that larger companies use. It must be good because the larger company we think is successful uses it. Emulate success and surely we will be successful.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or it may show up in processes. A manager comes into a startup from a large successful company and blindly imposes large corporate processes to the small company. Everything slows down, dampening the enthusiasm of the team. Emulate the processes of a large company and surely we will be successful.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This mindset isn't new. The old adage \\\"\", _jsx(_components.a, {\n        href: \"https://www.origina.com/blog/nobody-ever-got-fired-for-buying-ibm\",\n        children: \"No one has ever been fired for buying IBM\"\n      }), \"\\\" highlights the tendency to play it safe in the face of doubt. When we have doubt, even as a company, we like to play it safe; but, innovation and large payoffs don't happen from playing it safe. They come from risk and opportunity.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When we play it too safe, too cautiously, we are giving into that impostor syndrome and settling for good enough. In our personal lives and in business, emulating success is usually just a facade for fear of risk. It's difficult to go out there and create new processes when you are so used to an old process you learned at a larger company. It's difficult to go out there and pick a technology that no one is using compared to one that a large company is using. And it's difficult to go out there and solve problems you think are over your head.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"That feeling of impostor syndrome is good. It means you are pushing your limits and getting out of your comfort zone. You are tackling problems you haven't experienced before. And if you don't just try to emulate others, you might make mistakes, but they are your learning opportunities for growth. Then you can look back and see how far you've come, not by playing it safe and fearing impostor syndrome, but by embracing it.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nWe've all felt it at some point in our careers: that dreaded feeling of impostor syndrome kicking in as we find ourselves in over our heads. Questions like, \"Am I truly qualified for this?\" and \"Are my peers facing the same challenges?\" often plague our minds.","excerptHTML":"<p>We&#x27;ve all felt it at some point in our careers: that dreaded feeling of impostor syndrome kicking in as we find ourselves in over our heads. Questions like, &quot;Am I truly qualified for this?&quot; and &quot;Are my peers facing the same challenges?&quot; often plague our minds.</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"We've all felt it at some point in our careers: that dreaded feeling of impostor syndrome kicking in as we find ourselves in over our heads. Questions like, \\\"Am I truly qualified for this?\\\" and \\\"Are my peers facing the same challenges?\\\" often plague our minds.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["career"]},{"slug":"2023-08-19-localization","date":"2023-08-19","title":"Enforcing Localization through Types","frontmatter":{"title":"Enforcing Localization through Types","tags":["typescript","react"]},"contentRaw":"\nWhen building web applications, enforcing that strings be localized to the user's preferred language can sometimes be achieved via lint rules. But what if we could enforce proper localization using types in TypeScript?\n\n## Defining a Localized Type\n\nTypeScript doesn't natively provide an [Opaque type](https://en.wikipedia.org/wiki/Opaque_data_type) that we can use to define a string that has already been localized. If the data looks like a string, TypeScript will consider it a string. We can however use utility types that simulate opaque types, like the Opaque definition in [type-fest](https://github.com/sindresorhus/type-fest):\n\n```tsx\nimport { Opaque } from 'type-fest';\n\ntype LocalizedString = Opaque<'LocalizedString', string>;\n```\n\n[Playground example](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgeTAQwI4FcCmcC+cAZlBCHAOQwCeYOAtETgM4wUDcAUJzXXADIQAxmgA2wAF44AJgGUYUYADsA5nAC8KdNhwAeCoJHipchcpUUANHFaLVAPnZA)\n\nHere is a short example where we create a localized string and try to use a raw string and our localized string in a function:\n\n```tsx\nimport { Opaque } from 'type-fest';\n\ntype LocalizedString = Opaque<'LocalizedString', string>;\n\nfunction createLocalizedString(s: string): LocalizedString {\n    return s as LocalizedString;\n}\n\nfunction example(s: LocalizedString) {\n    return s;\n}\n\nconsole.log(example('test')); // Will throw a type error\nconsole.log(example(createLocalizedString('test'))); // Works correctly\n```\n\n[Playground example](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgeTAQwI4FcCmcC+cAZlBCHAOQwCeYOAtETgM4wUDcAUJzXXADIQAxmgA2wAF44AJgGUYUYADsA5nAC8KdNhwAeCoJHipchcpUUANHFaLVAPi6ciWJUJjAISuEKg40MDiGYpIy8nYqABTMAFw2ZqoAlHHBxmEJagiccDlwfjBYUN7McGglqaGmEVz43C5uHl5wOAAeaOCiONEpwiEm4eaJiNm5+YXFNdxCXswQnQB0ohBRre1gnZFULGyJiVzTSrMLSyttHV2+-oEV-RmbgawUu3tAA)\n\nNow we have a type that we can use in our function and components to denote that we expect an already localized string to be used.\n\n## Enforcing in Components\n\nThe simplest way we can enforce that strings have already been localized is by using the type in our component's props interface:\n\n```tsx\n\ninterface ButtonProps {\n  label: LocalizedString;\n}\n\nfunction Button(props: ButtonProps) {\n  return <button>{props.label}</button>;\n}\n```\n\nNow if we try to use that component without a localized string, we get an error:\n\n```tsx\nimport React from 'react';\nimport { Opaque } from 'type-fest';\n\ntype LocalizedString = Opaque<'LocalizedString', string>;\n\nfunction createLocalizedString(s: string): LocalizedString {\n    return s as LocalizedString;\n}\n\ninterface ButtonProps {\n  label: LocalizedString;\n}\n\nfunction Button(props: ButtonProps) {\n  return <button>{props.label}</button>;\n}\n\nfunction Example() {\n    return (\n        <>\n            <Button label=\"Test\" />\n            <Button label={createLocalizedString(\"Test\")} />\n        </>\n    );\n}\n```\n\n[Playground example](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoUSWOAbzgHkwUBHAVyTgF85tcCYATzBIAtJiQBnGGXLkhIuABkIaFABtgALyQATAMowowAHYBzOAF5GzdkgA8+FWs06DR02fwAaONOPmAHwU5JhsJhjAECZwaEQoMEjOGtp6hgFmABSSAFx+HuYAlHnJrmkFFrTkcDVwRDBsUDGScCgtpanuGRRccqaJUJjonABCbDAw0QAKOGAtVTXqKABGSOolqilu6Z49cmERMFExYxPRmWCzuXCnkyYzEHOFdNV1SA1NcPbL43eBtJdHpIAHRLVbqLj2AD0PzOJmC5F6oXCkWicAAogAPFDgdRITLPBa1eqNGKZV61Wr2QIUyl0+y3NFgtaWABEABUpDBWXAoTS6QKvoyYsz1JZaHFUIkOtsKpkOVzWYUeHzaZTofzaoUekA)\n\n## Localizing Strings\n\nSo far, we've been using a utility `createLocalizedString` to create and use the LocalizedString type. This utility is only really practical in unit tests. For real applications, we'll want to use a translation function from [react-i18next](https://github.com/i18next/react-i18next) or [next-i18next](https://github.com/i18next/next-i18next) to do the heavy lifting. Then we just wrap the translation functions that are provided in order to use our type:\n\n```tsx\nimport React, { useCallback } from 'react';\nimport { Opaque } from 'type-fest';\nimport { useTranslation } from 'react-i18next';\n\ntype LocalizedString = Opaque<'LocalizedString', string>;\n\nfunction createLocalizedString(s: string): LocalizedString {\n    return s as LocalizedString;\n}\n\ninterface ButtonProps {\n  label: LocalizedString;\n}\n\nfunction Button(props: ButtonProps) {\n  return <button>{props.label}</button>;\n}\n\nfunction useLocalizedTranslation() {\n    const { t : originalTranslate } = useTranslation();\n\n    const t = useCallback((key: string, defaultString: string) => {\n        return originalTranslate(key, defaultString) as LocalizedString;\n    }, [originalTranslate]);\n\n    return { t };\n}\n\nfunction Example() {\n    const { t } = useLocalizedTranslation();\n    return (\n        <>\n            <Button label={t(\"test\", \"Test\")} />\n        </>\n    );\n}\n```\n\n[Playground example](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDecCuAzkgMIoA25ARugNZwC+cAZlBCHAORSoacDcAKFCRYuOAHkwKAI74kjFmw6cYATzBIAtMySEYA4eGjw8RJABUoKAHaFyKGMAg3Frdlx7oYW4AEYADhskAA8DIUF1TTgAGQg0CmAALyQAEwBlGChgGwBzOABeSWk5JAAeTjiE8mS0zOy8zmx9BtyAPgjmfBsMZ1c0LxgkKsSUjKyc3IAKQgAuOBbJgEp5kZqx+sncQThduB4YfChXQjgUU7Xa8dahBkFhGyGoZnQFACF8GBgXAAU2MFOOB2cAcVCQ5FW8VGdQmeVu9y6PScLjgHy+LimYH+c1Rn2+Nj+EABS22uwOR1cZSoeJcbRwWKJhAAdKDwQwygB6anomwdQR3QSI3oo8yXMZWWz2Rx9KYkoF7OBoFz6cTwebQYC5HIUCV2BxDRRFcy6qXImyyiIKpV2eDwI3EMiUGhoWhTKa0JBqeaLPLYVJIF74cgwTZ5b2w3IkgptUkKvbk45wDVamw66x6xxId2ev0BlBBkMRknnWJQ9Ywm7A3YMbAAbWT2vIJv1SAAuktLfGkIdE3h4Ax4YLusLXABREIocDkLNyquK5WmOD9woEYhitLN6UYjtzhOuKZzhVlNqHuO7Mpo-EglBg8gFHAwKYAIiG+if2CfFj0MCfSyYHJPM9zwAucdwYIA)\n\nHere we use `useTranslation` from `react-i18next` and wrap the `t` translation function that is returned to override the type it gives us.\n\nNow when engineers go to use the Button component, they will know they need a LocalizedString, and the most straightforward way to get it will be to use the i18next utilities that we also provide.\n","contentHTML":"<p>When building web applications, enforcing that strings be localized to the user&#x27;s preferred language can sometimes be achieved via lint rules. But what if we could enforce proper localization using types in TypeScript?</p>\n<h2>Defining a Localized Type</h2>\n<p>TypeScript doesn&#x27;t natively provide an <a href=\"https://en.wikipedia.org/wiki/Opaque_data_type\">Opaque type</a> that we can use to define a string that has already been localized. If the data looks like a string, TypeScript will consider it a string. We can however use utility types that simulate opaque types, like the Opaque definition in <a href=\"https://github.com/sindresorhus/type-fest\">type-fest</a>:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">import { Opaque } from &#x27;type-fest&#x27;;\n\ntype LocalizedString = Opaque&lt;&#x27;LocalizedString&#x27;, string&gt;;\n</code></pre></div>\n<p><a href=\"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgeTAQwI4FcCmcC+cAZlBCHAOQwCeYOAtETgM4wUDcAUJzXXADIQAxmgA2wAF44AJgGUYUYADsA5nAC8KdNhwAeCoJHipchcpUUANHFaLVAPnZA\">Playground example</a></p>\n<p>Here is a short example where we create a localized string and try to use a raw string and our localized string in a function:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">import { Opaque } from &#x27;type-fest&#x27;;\n\ntype LocalizedString = Opaque&lt;&#x27;LocalizedString&#x27;, string&gt;;\n\nfunction createLocalizedString(s: string): LocalizedString {\n    return s as LocalizedString;\n}\n\nfunction example(s: LocalizedString) {\n    return s;\n}\n\nconsole.log(example(&#x27;test&#x27;)); // Will throw a type error\nconsole.log(example(createLocalizedString(&#x27;test&#x27;))); // Works correctly\n</code></pre></div>\n<p><a href=\"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgeTAQwI4FcCmcC+cAZlBCHAOQwCeYOAtETgM4wUDcAUJzXXADIQAxmgA2wAF44AJgGUYUYADsA5nAC8KdNhwAeCoJHipchcpUUANHFaLVAPi6ciWJUJjAISuEKg40MDiGYpIy8nYqABTMAFw2ZqoAlHHBxmEJagiccDlwfjBYUN7McGglqaGmEVz43C5uHl5wOAAeaOCiONEpwiEm4eaJiNm5+YXFNdxCXswQnQB0ohBRre1gnZFULGyJiVzTSrMLSyttHV2+-oEV-RmbgawUu3tAA\">Playground example</a></p>\n<p>Now we have a type that we can use in our function and components to denote that we expect an already localized string to be used.</p>\n<h2>Enforcing in Components</h2>\n<p>The simplest way we can enforce that strings have already been localized is by using the type in our component&#x27;s props interface:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">\ninterface ButtonProps {\n  label: LocalizedString;\n}\n\nfunction Button(props: ButtonProps) {\n  return &lt;button&gt;{props.label}&lt;/button&gt;;\n}\n</code></pre></div>\n<p>Now if we try to use that component without a localized string, we get an error:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">import React from &#x27;react&#x27;;\nimport { Opaque } from &#x27;type-fest&#x27;;\n\ntype LocalizedString = Opaque&lt;&#x27;LocalizedString&#x27;, string&gt;;\n\nfunction createLocalizedString(s: string): LocalizedString {\n    return s as LocalizedString;\n}\n\ninterface ButtonProps {\n  label: LocalizedString;\n}\n\nfunction Button(props: ButtonProps) {\n  return &lt;button&gt;{props.label}&lt;/button&gt;;\n}\n\nfunction Example() {\n    return (\n        &lt;&gt;\n            &lt;Button label=&quot;Test&quot; /&gt;\n            &lt;Button label={createLocalizedString(&quot;Test&quot;)} /&gt;\n        &lt;/&gt;\n    );\n}\n</code></pre></div>\n<p><a href=\"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoUSWOAbzgHkwUBHAVyTgF85tcCYATzBIAtJiQBnGGXLkhIuABkIaFABtgALyQATAMowowAHYBzOAF5GzdkgA8+FWs06DR02fwAaONOPmAHwU5JhsJhjAECZwaEQoMEjOGtp6hgFmABSSAFx+HuYAlHnJrmkFFrTkcDVwRDBsUDGScCgtpanuGRRccqaJUJjonABCbDAw0QAKOGAtVTXqKABGSOolqilu6Z49cmERMFExYxPRmWCzuXCnkyYzEHOFdNV1SA1NcPbL43eBtJdHpIAHRLVbqLj2AD0PzOJmC5F6oXCkWicAAogAPFDgdRITLPBa1eqNGKZV61Wr2QIUyl0+y3NFgtaWABEABUpDBWXAoTS6QKvoyYsz1JZaHFUIkOtsKpkOVzWYUeHzaZTofzaoUekA\">Playground example</a></p>\n<h2>Localizing Strings</h2>\n<p>So far, we&#x27;ve been using a utility <code>createLocalizedString</code> to create and use the LocalizedString type. This utility is only really practical in unit tests. For real applications, we&#x27;ll want to use a translation function from <a href=\"https://github.com/i18next/react-i18next\">react-i18next</a> or <a href=\"https://github.com/i18next/next-i18next\">next-i18next</a> to do the heavy lifting. Then we just wrap the translation functions that are provided in order to use our type:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">import React, { useCallback } from &#x27;react&#x27;;\nimport { Opaque } from &#x27;type-fest&#x27;;\nimport { useTranslation } from &#x27;react-i18next&#x27;;\n\ntype LocalizedString = Opaque&lt;&#x27;LocalizedString&#x27;, string&gt;;\n\nfunction createLocalizedString(s: string): LocalizedString {\n    return s as LocalizedString;\n}\n\ninterface ButtonProps {\n  label: LocalizedString;\n}\n\nfunction Button(props: ButtonProps) {\n  return &lt;button&gt;{props.label}&lt;/button&gt;;\n}\n\nfunction useLocalizedTranslation() {\n    const { t : originalTranslate } = useTranslation();\n\n    const t = useCallback((key: string, defaultString: string) =&gt; {\n        return originalTranslate(key, defaultString) as LocalizedString;\n    }, [originalTranslate]);\n\n    return { t };\n}\n\nfunction Example() {\n    const { t } = useLocalizedTranslation();\n    return (\n        &lt;&gt;\n            &lt;Button label={t(&quot;test&quot;, &quot;Test&quot;)} /&gt;\n        &lt;/&gt;\n    );\n}\n</code></pre></div>\n<p><a href=\"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDecCuAzkgMIoA25ARugNZwC+cAZlBCHAORSoacDcAKFCRYuOAHkwKAI74kjFmw6cYATzBIAtMySEYA4eGjw8RJABUoKAHaFyKGMAg3Frdlx7oYW4AEYADhskAA8DIUF1TTgAGQg0CmAALyQAEwBlGChgGwBzOABeSWk5JAAeTjiE8mS0zOy8zmx9BtyAPgjmfBsMZ1c0LxgkKsSUjKyc3IAKQgAuOBbJgEp5kZqx+sncQThduB4YfChXQjgUU7Xa8dahBkFhGyGoZnQFACF8GBgXAAU2MFOOB2cAcVCQ5FW8VGdQmeVu9y6PScLjgHy+LimYH+c1Rn2+Nj+EABS22uwOR1cZSoeJcbRwWKJhAAdKDwQwygB6anomwdQR3QSI3oo8yXMZWWz2Rx9KYkoF7OBoFz6cTwebQYC5HIUCV2BxDRRFcy6qXImyyiIKpV2eDwI3EMiUGhoWhTKa0JBqeaLPLYVJIF74cgwTZ5b2w3IkgptUkKvbk45wDVamw66x6xxId2ev0BlBBkMRknnWJQ9Ywm7A3YMbAAbWT2vIJv1SAAuktLfGkIdE3h4Ax4YLusLXABREIocDkLNyquK5WmOD9woEYhitLN6UYjtzhOuKZzhVlNqHuO7Mpo-EglBg8gFHAwKYAIiG+if2CfFj0MCfSyYHJPM9zwAucdwYIA\">Playground example</a></p>\n<p>Here we use <code>useTranslation</code> from <code>react-i18next</code> and wrap the <code>t</code> translation function that is returned to override the type it gives us.</p>\n<p>Now when engineers go to use the Button component, they will know they need a LocalizedString, and the most straightforward way to get it will be to use the i18next utilities that we also provide.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"When building web applications, enforcing that strings be localized to the user's preferred language can sometimes be achieved via lint rules. But what if we could enforce proper localization using types in TypeScript?\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Defining a Localized Type\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"TypeScript doesn't natively provide an \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Opaque_data_type\",\n        children: \"Opaque type\"\n      }), \" that we can use to define a string that has already been localized. If the data looks like a string, TypeScript will consider it a string. We can however use utility types that simulate opaque types, like the Opaque definition in \", _jsx(_components.a, {\n        href: \"https://github.com/sindresorhus/type-fest\",\n        children: \"type-fest\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Opaque } from 'type-fest';\\n\\ntype LocalizedString = Opaque<'LocalizedString', string>;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgeTAQwI4FcCmcC+cAZlBCHAOQwCeYOAtETgM4wUDcAUJzXXADIQAxmgA2wAF44AJgGUYUYADsA5nAC8KdNhwAeCoJHipchcpUUANHFaLVAPnZA\",\n        children: \"Playground example\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is a short example where we create a localized string and try to use a raw string and our localized string in a function:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Opaque } from 'type-fest';\\n\\ntype LocalizedString = Opaque<'LocalizedString', string>;\\n\\nfunction createLocalizedString(s: string): LocalizedString {\\n    return s as LocalizedString;\\n}\\n\\nfunction example(s: LocalizedString) {\\n    return s;\\n}\\n\\nconsole.log(example('test')); // Will throw a type error\\nconsole.log(example(createLocalizedString('test'))); // Works correctly\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgeTAQwI4FcCmcC+cAZlBCHAOQwCeYOAtETgM4wUDcAUJzXXADIQAxmgA2wAF44AJgGUYUYADsA5nAC8KdNhwAeCoJHipchcpUUANHFaLVAPi6ciWJUJjAISuEKg40MDiGYpIy8nYqABTMAFw2ZqoAlHHBxmEJagiccDlwfjBYUN7McGglqaGmEVz43C5uHl5wOAAeaOCiONEpwiEm4eaJiNm5+YXFNdxCXswQnQB0ohBRre1gnZFULGyJiVzTSrMLSyttHV2+-oEV-RmbgawUu3tAA\",\n        children: \"Playground example\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now we have a type that we can use in our function and components to denote that we expect an already localized string to be used.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Enforcing in Components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The simplest way we can enforce that strings have already been localized is by using the type in our component's props interface:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"\\ninterface ButtonProps {\\n  label: LocalizedString;\\n}\\n\\nfunction Button(props: ButtonProps) {\\n  return <button>{props.label}</button>;\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now if we try to use that component without a localized string, we get an error:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import React from 'react';\\nimport { Opaque } from 'type-fest';\\n\\ntype LocalizedString = Opaque<'LocalizedString', string>;\\n\\nfunction createLocalizedString(s: string): LocalizedString {\\n    return s as LocalizedString;\\n}\\n\\ninterface ButtonProps {\\n  label: LocalizedString;\\n}\\n\\nfunction Button(props: ButtonProps) {\\n  return <button>{props.label}</button>;\\n}\\n\\nfunction Example() {\\n    return (\\n        <>\\n            <Button label=\\\"Test\\\" />\\n            <Button label={createLocalizedString(\\\"Test\\\")} />\\n        </>\\n    );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoUSWOAbzgHkwUBHAVyTgF85tcCYATzBIAtJiQBnGGXLkhIuABkIaFABtgALyQATAMowowAHYBzOAF5GzdkgA8+FWs06DR02fwAaONOPmAHwU5JhsJhjAECZwaEQoMEjOGtp6hgFmABSSAFx+HuYAlHnJrmkFFrTkcDVwRDBsUDGScCgtpanuGRRccqaJUJjonABCbDAw0QAKOGAtVTXqKABGSOolqilu6Z49cmERMFExYxPRmWCzuXCnkyYzEHOFdNV1SA1NcPbL43eBtJdHpIAHRLVbqLj2AD0PzOJmC5F6oXCkWicAAogAPFDgdRITLPBa1eqNGKZV61Wr2QIUyl0+y3NFgtaWABEABUpDBWXAoTS6QKvoyYsz1JZaHFUIkOtsKpkOVzWYUeHzaZTofzaoUekA\",\n        children: \"Playground example\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Localizing Strings\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"So far, we've been using a utility \", _jsx(_components.code, {\n        children: \"createLocalizedString\"\n      }), \" to create and use the LocalizedString type. This utility is only really practical in unit tests. For real applications, we'll want to use a translation function from \", _jsx(_components.a, {\n        href: \"https://github.com/i18next/react-i18next\",\n        children: \"react-i18next\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://github.com/i18next/next-i18next\",\n        children: \"next-i18next\"\n      }), \" to do the heavy lifting. Then we just wrap the translation functions that are provided in order to use our type:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import React, { useCallback } from 'react';\\nimport { Opaque } from 'type-fest';\\nimport { useTranslation } from 'react-i18next';\\n\\ntype LocalizedString = Opaque<'LocalizedString', string>;\\n\\nfunction createLocalizedString(s: string): LocalizedString {\\n    return s as LocalizedString;\\n}\\n\\ninterface ButtonProps {\\n  label: LocalizedString;\\n}\\n\\nfunction Button(props: ButtonProps) {\\n  return <button>{props.label}</button>;\\n}\\n\\nfunction useLocalizedTranslation() {\\n    const { t : originalTranslate } = useTranslation();\\n\\n    const t = useCallback((key: string, defaultString: string) => {\\n        return originalTranslate(key, defaultString) as LocalizedString;\\n    }, [originalTranslate]);\\n\\n    return { t };\\n}\\n\\nfunction Example() {\\n    const { t } = useLocalizedTranslation();\\n    return (\\n        <>\\n            <Button label={t(\\\"test\\\", \\\"Test\\\")} />\\n        </>\\n    );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDecCuAzkgMIoA25ARugNZwC+cAZlBCHAORSoacDcAKFCRYuOAHkwKAI74kjFmw6cYATzBIAtMySEYA4eGjw8RJABUoKAHaFyKGMAg3Frdlx7oYW4AEYADhskAA8DIUF1TTgAGQg0CmAALyQAEwBlGChgGwBzOABeSWk5JAAeTjiE8mS0zOy8zmx9BtyAPgjmfBsMZ1c0LxgkKsSUjKyc3IAKQgAuOBbJgEp5kZqx+sncQThduB4YfChXQjgUU7Xa8dahBkFhGyGoZnQFACF8GBgXAAU2MFOOB2cAcVCQ5FW8VGdQmeVu9y6PScLjgHy+LimYH+c1Rn2+Nj+EABS22uwOR1cZSoeJcbRwWKJhAAdKDwQwygB6anomwdQR3QSI3oo8yXMZWWz2Rx9KYkoF7OBoFz6cTwebQYC5HIUCV2BxDRRFcy6qXImyyiIKpV2eDwI3EMiUGhoWhTKa0JBqeaLPLYVJIF74cgwTZ5b2w3IkgptUkKvbk45wDVamw66x6xxId2ev0BlBBkMRknnWJQ9Ywm7A3YMbAAbWT2vIJv1SAAuktLfGkIdE3h4Ax4YLusLXABREIocDkLNyquK5WmOD9woEYhitLN6UYjtzhOuKZzhVlNqHuO7Mpo-EglBg8gFHAwKYAIiG+if2CfFj0MCfSyYHJPM9zwAucdwYIA\",\n        children: \"Playground example\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here we use \", _jsx(_components.code, {\n        children: \"useTranslation\"\n      }), \" from \", _jsx(_components.code, {\n        children: \"react-i18next\"\n      }), \" and wrap the \", _jsx(_components.code, {\n        children: \"t\"\n      }), \" translation function that is returned to override the type it gives us.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now when engineers go to use the Button component, they will know they need a LocalizedString, and the most straightforward way to get it will be to use the i18next utilities that we also provide.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nWhen building web applications, enforcing that strings be localized to the user's preferred language can sometimes be achieved via lint rules. But what if we could enforce proper localization using types in TypeScript?","excerptHTML":"<p>When building web applications, enforcing that strings be localized to the user&#x27;s preferred language can sometimes be achieved via lint rules. But what if we could enforce proper localization using types in TypeScript?</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"When building web applications, enforcing that strings be localized to the user's preferred language can sometimes be achieved via lint rules. But what if we could enforce proper localization using types in TypeScript?\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["typescript","react"]},{"slug":"2023-08-17-feature-context","date":"2023-08-17","title":"Feature Contexts","frontmatter":{"title":"Feature Contexts","tags":["typescript","react"]},"contentRaw":"\nA common pattern in larger application when trying to track feature usage is to try to namespace events. For example, you might have a button that you want to track clicks on. For the sake of this article, we will use the `data-track` attribute on elements to track their usage, but you can imagine this works with any tracking implementation where you may need to explicitly call a tracking function (e.g. `track(namespace)`).\n\n## Simple Example\n\nAs requests to start tracking user events come up, typically the easiest way is to just hard code the tracking namespaces:\n\n```tsx\n<button data-track=\"chat.form.send\">Send<button>\n```\n\nAnd as the tracking grows, these might get moved to a separate file and a constant/enumeration:\n\n```tsx\nconst ChatTracking = {\n  send: 'chat.form.send',\n  attachMedia: 'chat.form.attachMedia',\n  edit: 'chat.messages.edit',\n  delete: 'chat.messages.delete',\n} as const;\n\n// usage\n\n<button data-track={ChatTracking.send}>Send</button>\n```\n\nWe have a lot of string duplication here. We might be tempted to use template strings or some other way of creating the string, but it doesn't end up reducing any of the duplication.\n\n## Passing Namespaces\n\nAs the application grows more complex, an engineer working on another set of features ends up wanting to reuse the chat form from above. It already has some additional animation and composes the component library widgets, why not reuse it in the context of forums.\n\nExcept now the `data-track` attribute has to be passed in as a prop:\n\n```mermaid\ngraph TD\n  Forums --> ChatForm\n  Chat --> ChatForm\n  ChatForm --> SendButton\n  SendButton --> Button\n\n```\n\nThe Forums usage ends up adding its own tracking attribute, but ends up having to prop drill down the namespace from the Forums components, through the ChatForm, to the SendButton component.\n\n## Using Context\n\nInstead, what if we wrap our features in some Context component that helps us track where our components are being used. Then we can just build up the tracking namespace based on where the component is in the feature tree, rather than having to keep track of long namespace strings.\n\nFirst let's build a context in React:\n\n**FeatureContext.tsx**\n\n```tsx\nimport { createContext } from 'react';\n\n/**\n * Context for tracking features\n */\nexport const FeatureContext = createContext<string[]>([]);\n```\n\nThen we'll create a helper component that we can use throughout the application:\n\n**Feature.tsx**\n\n```tsx\nimport type { ReactNode } from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FeatureContext } from './FeatureContext';\n\nexport interface FeatureProps {\n    readonly name: string;\n    readonly children: ReactNode;\n    readonly topLevel?: boolean;\n}\n\nexport function Feature({\n    name,\n    children,\n    topLevel,\n}: FeatureProps): JSX.Element {\n    const parentContext = useContext(FeatureContext);\n\n    const currentContext = useMemo(() => {\n        if (topLevel === true) {\n            return [name];\n        }\n        return [...parentContext, name];\n    }, [parentContext, name, topLevel]);\n\n    return (\n        <FeatureContext.Provider value={currentContext}>\n            {children}\n        </FeatureContext.Provider>\n    );\n}\n```\n\nUsage of this component would look like:\n\n```tsx\nfunction Forums() {\n  return (\n    <Feature name=\"forums\">\n      <ChatForm />\n    </Feature>\n  );\n}\n\nfunction Chat() {\n  return (\n    <Feature name=\"chat\">\n      <ChatForm />\n    </Feature>\n  );\n}\n\nfunction ChatForm() {\n  return (\n    <Feature name=\"form\">\n      <SendButton />\n    </Feature>\n  );\n}\n\n```\n\nThen, in SendButton, when we actually need to use the feature context, we construct the namespace:\n\n**SendButton.tsx**\n\n```tsx\nfunction SendButton() {\n  const featureContext = useContext(FeatureContext);\n\n  return (\n    <button data-track={[...featureContext, 'send'].join('.')}>Send</button>\n  );\n}\n```\n\nNote: the above example has been simplified for this article's sake. Typically some utility for reading the context, joining the namespaces, and memoizing the value would be provided.\n\nNo additional props are needed, and the Feature components can be used throughout the application as a standard mechanism for building up feature namespaces.\n\n## Conclusion\n\nRather than trying to alleviate string duplication and prop drilling as separate problems, we can leverage React Context to solve both problems at the same time and leverage context to determine where we are in a feature tree. Not only does the Feature context help with constructing the data-track attributes, but it now provides a consistent mechanism that we can use throughout the application to let components know the feature namespace they are currently in without the parent components prop drilling the namespace down to every component.\n","contentHTML":"<p>A common pattern in larger application when trying to track feature usage is to try to namespace events. For example, you might have a button that you want to track clicks on. For the sake of this article, we will use the <code>data-track</code> attribute on elements to track their usage, but you can imagine this works with any tracking implementation where you may need to explicitly call a tracking function (e.g. <code>track(namespace)</code>).</p>\n<h2>Simple Example</h2>\n<p>As requests to start tracking user events come up, typically the easiest way is to just hard code the tracking namespaces:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">&lt;button data-track=&quot;chat.form.send&quot;&gt;Send&lt;button&gt;\n</code></pre></div>\n<p>And as the tracking grows, these might get moved to a separate file and a constant/enumeration:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">const ChatTracking = {\n  send: &#x27;chat.form.send&#x27;,\n  attachMedia: &#x27;chat.form.attachMedia&#x27;,\n  edit: &#x27;chat.messages.edit&#x27;,\n  delete: &#x27;chat.messages.delete&#x27;,\n} as const;\n\n// usage\n\n&lt;button data-track={ChatTracking.send}&gt;Send&lt;/button&gt;\n</code></pre></div>\n<p>We have a lot of string duplication here. We might be tempted to use template strings or some other way of creating the string, but it doesn&#x27;t end up reducing any of the duplication.</p>\n<h2>Passing Namespaces</h2>\n<p>As the application grows more complex, an engineer working on another set of features ends up wanting to reuse the chat form from above. It already has some additional animation and composes the component library widgets, why not reuse it in the context of forums.</p>\n<p>Except now the <code>data-track</code> attribute has to be passed in as a prop:</p>\n<mermaid chart=\"graph TD\n  Forums --&gt; ChatForm\n  Chat --&gt; ChatForm\n  ChatForm --&gt; SendButton\n  SendButton --&gt; Button\n\"></mermaid>\n<p>The Forums usage ends up adding its own tracking attribute, but ends up having to prop drill down the namespace from the Forums components, through the ChatForm, to the SendButton component.</p>\n<h2>Using Context</h2>\n<p>Instead, what if we wrap our features in some Context component that helps us track where our components are being used. Then we can just build up the tracking namespace based on where the component is in the feature tree, rather than having to keep track of long namespace strings.</p>\n<p>First let&#x27;s build a context in React:</p>\n<p><strong>FeatureContext.tsx</strong></p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">import { createContext } from &#x27;react&#x27;;\n\n/**\n * Context for tracking features\n */\nexport const FeatureContext = createContext&lt;string[]&gt;([]);\n</code></pre></div>\n<p>Then we&#x27;ll create a helper component that we can use throughout the application:</p>\n<p><strong>Feature.tsx</strong></p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">import type { ReactNode } from &#x27;react&#x27;;\nimport { useContext, useMemo } from &#x27;react&#x27;;\nimport { FeatureContext } from &#x27;./FeatureContext&#x27;;\n\nexport interface FeatureProps {\n    readonly name: string;\n    readonly children: ReactNode;\n    readonly topLevel?: boolean;\n}\n\nexport function Feature({\n    name,\n    children,\n    topLevel,\n}: FeatureProps): JSX.Element {\n    const parentContext = useContext(FeatureContext);\n\n    const currentContext = useMemo(() =&gt; {\n        if (topLevel === true) {\n            return [name];\n        }\n        return [...parentContext, name];\n    }, [parentContext, name, topLevel]);\n\n    return (\n        &lt;FeatureContext.Provider value={currentContext}&gt;\n            {children}\n        &lt;/FeatureContext.Provider&gt;\n    );\n}\n</code></pre></div>\n<p>Usage of this component would look like:</p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">function Forums() {\n  return (\n    &lt;Feature name=&quot;forums&quot;&gt;\n      &lt;ChatForm /&gt;\n    &lt;/Feature&gt;\n  );\n}\n\nfunction Chat() {\n  return (\n    &lt;Feature name=&quot;chat&quot;&gt;\n      &lt;ChatForm /&gt;\n    &lt;/Feature&gt;\n  );\n}\n\nfunction ChatForm() {\n  return (\n    &lt;Feature name=&quot;form&quot;&gt;\n      &lt;SendButton /&gt;\n    &lt;/Feature&gt;\n  );\n}\n\n</code></pre></div>\n<p>Then, in SendButton, when we actually need to use the feature context, we construct the namespace:</p>\n<p><strong>SendButton.tsx</strong></p>\n<div class=\"overflow-auto rounded bg-gray-200 p-4 font-mono text-sm dark:bg-gray-800 dark:text-gray-100\"><pre><code class=\"language-tsx\">function SendButton() {\n  const featureContext = useContext(FeatureContext);\n\n  return (\n    &lt;button data-track={[...featureContext, &#x27;send&#x27;].join(&#x27;.&#x27;)}&gt;Send&lt;/button&gt;\n  );\n}\n</code></pre></div>\n<p>Note: the above example has been simplified for this article&#x27;s sake. Typically some utility for reading the context, joining the namespaces, and memoizing the value would be provided.</p>\n<p>No additional props are needed, and the Feature components can be used throughout the application as a standard mechanism for building up feature namespaces.</p>\n<h2>Conclusion</h2>\n<p>Rather than trying to alleviate string duplication and prop drilling as separate problems, we can leverage React Context to solve both problems at the same time and leverage context to determine where we are in a feature tree. Not only does the Feature context help with constructing the data-track attributes, but it now provides a consistent mechanism that we can use throughout the application to let components know the feature namespace they are currently in without the parent components prop drilling the namespace down to every component.</p>","contentCode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h2: \"h2\",\n    mermaid: \"mermaid\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"A common pattern in larger application when trying to track feature usage is to try to namespace events. For example, you might have a button that you want to track clicks on. For the sake of this article, we will use the \", _jsx(_components.code, {\n        children: \"data-track\"\n      }), \" attribute on elements to track their usage, but you can imagine this works with any tracking implementation where you may need to explicitly call a tracking function (e.g. \", _jsx(_components.code, {\n        children: \"track(namespace)\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Simple Example\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As requests to start tracking user events come up, typically the easiest way is to just hard code the tracking namespaces:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<button data-track=\\\"chat.form.send\\\">Send<button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And as the tracking grows, these might get moved to a separate file and a constant/enumeration:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const ChatTracking = {\\n  send: 'chat.form.send',\\n  attachMedia: 'chat.form.attachMedia',\\n  edit: 'chat.messages.edit',\\n  delete: 'chat.messages.delete',\\n} as const;\\n\\n// usage\\n\\n<button data-track={ChatTracking.send}>Send</button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We have a lot of string duplication here. We might be tempted to use template strings or some other way of creating the string, but it doesn't end up reducing any of the duplication.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Passing Namespaces\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As the application grows more complex, an engineer working on another set of features ends up wanting to reuse the chat form from above. It already has some additional animation and composes the component library widgets, why not reuse it in the context of forums.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Except now the \", _jsx(_components.code, {\n        children: \"data-track\"\n      }), \" attribute has to be passed in as a prop:\"]\n    }), \"\\n\", _jsx(_components.mermaid, {\n      chart: \"graph TD\\n  Forums --> ChatForm\\n  Chat --> ChatForm\\n  ChatForm --> SendButton\\n  SendButton --> Button\\n\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Forums usage ends up adding its own tracking attribute, but ends up having to prop drill down the namespace from the Forums components, through the ChatForm, to the SendButton component.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Using Context\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Instead, what if we wrap our features in some Context component that helps us track where our components are being used. Then we can just build up the tracking namespace based on where the component is in the feature tree, rather than having to keep track of long namespace strings.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"First let's build a context in React:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"FeatureContext.tsx\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { createContext } from 'react';\\n\\n/**\\n * Context for tracking features\\n */\\nexport const FeatureContext = createContext<string[]>([]);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Then we'll create a helper component that we can use throughout the application:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Feature.tsx\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import type { ReactNode } from 'react';\\nimport { useContext, useMemo } from 'react';\\nimport { FeatureContext } from './FeatureContext';\\n\\nexport interface FeatureProps {\\n    readonly name: string;\\n    readonly children: ReactNode;\\n    readonly topLevel?: boolean;\\n}\\n\\nexport function Feature({\\n    name,\\n    children,\\n    topLevel,\\n}: FeatureProps): JSX.Element {\\n    const parentContext = useContext(FeatureContext);\\n\\n    const currentContext = useMemo(() => {\\n        if (topLevel === true) {\\n            return [name];\\n        }\\n        return [...parentContext, name];\\n    }, [parentContext, name, topLevel]);\\n\\n    return (\\n        <FeatureContext.Provider value={currentContext}>\\n            {children}\\n        </FeatureContext.Provider>\\n    );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Usage of this component would look like:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"function Forums() {\\n  return (\\n    <Feature name=\\\"forums\\\">\\n      <ChatForm />\\n    </Feature>\\n  );\\n}\\n\\nfunction Chat() {\\n  return (\\n    <Feature name=\\\"chat\\\">\\n      <ChatForm />\\n    </Feature>\\n  );\\n}\\n\\nfunction ChatForm() {\\n  return (\\n    <Feature name=\\\"form\\\">\\n      <SendButton />\\n    </Feature>\\n  );\\n}\\n\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Then, in SendButton, when we actually need to use the feature context, we construct the namespace:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"SendButton.tsx\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"function SendButton() {\\n  const featureContext = useContext(FeatureContext);\\n\\n  return (\\n    <button data-track={[...featureContext, 'send'].join('.')}>Send</button>\\n  );\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note: the above example has been simplified for this article's sake. Typically some utility for reading the context, joining the namespaces, and memoizing the value would be provided.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"No additional props are needed, and the Feature components can be used throughout the application as a standard mechanism for building up feature namespaces.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rather than trying to alleviate string duplication and prop drilling as separate problems, we can leverage React Context to solve both problems at the same time and leverage context to determine where we are in a feature tree. Not only does the Feature context help with constructing the data-track attributes, but it now provides a consistent mechanism that we can use throughout the application to let components know the feature namespace they are currently in without the parent components prop drilling the namespace down to every component.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerptRaw":"\nA common pattern in larger application when trying to track feature usage is to try to namespace events. For example, you might have a button that you want to track clicks on. For the sake of this article, we will use the `data-track` attribute on elements to track their usage, but you can imagine this works with any tracking implementation where you may need to explicitly call a tracking function (e.g. `track(namespace)`).","excerptHTML":"<p>A common pattern in larger application when trying to track feature usage is to try to namespace events. For example, you might have a button that you want to track clicks on. For the sake of this article, we will use the <code>data-track</code> attribute on elements to track their usage, but you can imagine this works with any tracking implementation where you may need to explicitly call a tracking function (e.g. <code>track(namespace)</code>).</p>","excerptCode":"\"use strict\";\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    ...props.components\n  };\n  return _jsxs(_components.p, {\n    children: [\"A common pattern in larger application when trying to track feature usage is to try to namespace events. For example, you might have a button that you want to track clicks on. For the sake of this article, we will use the \", _jsx(_components.code, {\n      children: \"data-track\"\n    }), \" attribute on elements to track their usage, but you can imagine this works with any tracking implementation where you may need to explicitly call a tracking function (e.g. \", _jsx(_components.code, {\n      children: \"track(namespace)\"\n    }), \").\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tags":["typescript","react"]}],"hasNextPage":false,"hasPreviousPage":true},"__N_SSG":true}